com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    44:46:void <init>() -> <init>
    49:50:void <init>(java.lang.String) -> <init>
    53:54:void <init>(int) -> <init>
    57:59:void <init>(int,int) -> <init>
    61:66:void <init>(java.text.DateFormat,java.text.DateFormat) -> <init>
    71:74:com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    79:90:java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    95:109:java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    114:117:java.lang.String toString() -> toString
    35:35:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    35:35:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    44:47:void <init>(java.lang.reflect.Field) -> <init>
    53:53:java.lang.Class getDeclaringClass() -> getDeclaringClass
    60:60:java.lang.String getName() -> getName
    80:80:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    100:100:java.lang.Class getDeclaredClass() -> getDeclaredClass
    111:111:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    121:121:java.util.Collection getAnnotations() -> getAnnotations
    135:135:boolean hasModifier(int) -> hasModifier
    146:146:java.lang.Object get(java.lang.Object) -> get
    155:155:boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    30:30:com.google.gson.FieldNamingPolicy[] values() -> values
    30:30:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    30:30:void <init>(java.lang.String,int) -> <init>
    123:131:java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    138:159:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    164:164:java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    30:30:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    30:30:java.lang.String access$100(java.lang.String) -> access$100
    30:30:java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
    30:112:void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
    38:38:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
    54:54:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    71:71:void <init>(java.lang.String,int) -> <init>
    73:73:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    89:89:void <init>(java.lang.String,int) -> <init>
    91:91:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    112:112:void <init>(java.lang.String,int) -> <init>
    114:114:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    174:178:void <init>() -> <init>
    109:244:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List) -> <init>
    247:250:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    271:274:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    295:300:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    303:306:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    332:368:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    420:435:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    445:445:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    462:465:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    485:487:com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    504:507:java.lang.String toJson(java.lang.Object) -> toJson
    526:528:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    546:551:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    571:576:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    585:601:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    611:613:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    626:631:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    638:646:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    654:669:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    689:690:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    713:718:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    740:743:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    767:770:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    775:783:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    795:820:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    841:842:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    865:868:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    898:898:java.lang.String toString() -> toString
    97:97:void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    123:123:void <init>(com.google.gson.Gson) -> <init>
    126:126:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    130:130:void <init>(com.google.gson.Gson) -> <init>
    132:132:com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    135:135:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    250:250:void <init>(com.google.gson.Gson) -> <init>
    252:256:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    259:266:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    250:250:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    250:250:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    274:274:void <init>(com.google.gson.Gson) -> <init>
    276:280:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    283:290:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    274:274:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    274:274:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    306:306:void <init>(com.google.gson.Gson) -> <init>
    308:312:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    315:320:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    306:306:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    306:306:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    871:871:void <init>() -> <init>
    875:879:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    882:885:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    889:893:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    69:94:void <init>() -> <init>
    104:105:com.google.gson.GsonBuilder setVersion(double) -> setVersion
    120:121:com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    134:135:com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    145:146:com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    157:158:com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    238:239:com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    249:250:com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    262:263:com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    275:276:com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    288:289:com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    303:306:com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    322:323:com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    339:340:com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    350:351:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    362:363:com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    384:385:com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    403:405:com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    424:427:com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    448:462:com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    474:475:com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    494:504:com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    528:529:com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    539:545:com.google.gson.Gson create() -> create
    554:565:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    39:41:void <init>() -> <init>
    45:49:com.google.gson.JsonArray deepCopy() -> deepCopy
    58:62:void add(com.google.gson.JsonElement) -> add
    70:71:void addAll(com.google.gson.JsonArray) -> addAll
    79:79:int size() -> size
    89:89:java.util.Iterator iterator() -> iterator
    101:101:com.google.gson.JsonElement get(int) -> get
    114:117:java.lang.Number getAsNumber() -> getAsNumber
    130:133:java.lang.String getAsString() -> getAsString
    146:149:double getAsDouble() -> getAsDouble
    163:166:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    180:183:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    196:199:float getAsFloat() -> getAsFloat
    212:215:long getAsLong() -> getAsLong
    228:231:int getAsInt() -> getAsInt
    236:239:byte getAsByte() -> getAsByte
    244:247:char getAsCharacter() -> getAsCharacter
    260:263:short getAsShort() -> getAsShort
    276:279:boolean getAsBoolean() -> getAsBoolean
    284:284:boolean equals(java.lang.Object) -> equals
    289:289:int hashCode() -> hashCode
    33:33:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    33:33:void <init>() -> <init>
    com.google.gson.JsonElement deepCopy() -> deepCopy
    46:46:boolean isJsonArray() -> isJsonArray
    55:55:boolean isJsonObject() -> isJsonObject
    64:64:boolean isJsonPrimitive() -> isJsonPrimitive
    74:74:boolean isJsonNull() -> isJsonNull
    87:90:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    103:106:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    119:122:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    136:139:com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    152:152:boolean getAsBoolean() -> getAsBoolean
    165:165:java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    178:178:java.lang.Number getAsNumber() -> getAsNumber
    191:191:java.lang.String getAsString() -> getAsString
    204:204:double getAsDouble() -> getAsDouble
    217:217:float getAsFloat() -> getAsFloat
    230:230:long getAsLong() -> getAsLong
    243:243:int getAsInt() -> getAsInt
    257:257:byte getAsByte() -> getAsByte
    271:271:char getAsCharacter() -> getAsCharacter
    285:285:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    299:299:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    312:312:short getAsShort() -> getAsShort
    321:327:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    39:41:void <init>() -> <init>
    45:45:com.google.gson.JsonNull deepCopy() -> deepCopy
    53:53:int hashCode() -> hashCode
    61:61:boolean equals(java.lang.Object) -> equals
    26:26:com.google.gson.JsonElement deepCopy() -> deepCopy
    32:32:void <clinit>() -> <clinit>
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    32:33:void <init>() -> <init>
    38:42:com.google.gson.JsonObject deepCopy() -> deepCopy
    54:58:void add(java.lang.String,com.google.gson.JsonElement) -> add
    68:68:com.google.gson.JsonElement remove(java.lang.String) -> remove
    79:80:void addProperty(java.lang.String,java.lang.String) -> addProperty
    90:91:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    101:102:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    112:113:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    122:122:com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    132:132:java.util.Set entrySet() -> entrySet
    142:142:boolean has(java.lang.String) -> has
    152:152:com.google.gson.JsonElement get(java.lang.String) -> get
    162:162:com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    172:172:com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    182:182:com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    187:187:boolean equals(java.lang.Object) -> equals
    193:193:int hashCode() -> hashCode
    32:32:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    34:34:void <init>() -> <init>
    45:45:com.google.gson.JsonElement parse(java.lang.String) -> parse
    58:69:com.google.gson.JsonElement parse(java.io.Reader) -> parse
    81:90:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    46:48:void <init>(java.lang.Boolean) -> <init>
    55:57:void <init>(java.lang.Number) -> <init>
    64:66:void <init>(java.lang.String) -> <init>
    74:76:void <init>(java.lang.Character) -> <init>
    84:86:void <init>(java.lang.Object) -> <init>
    90:90:com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    94:104:void setValue(java.lang.Object) -> setValue
    112:112:boolean isBoolean() -> isBoolean
    122:122:java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    132:136:boolean getAsBoolean() -> getAsBoolean
    146:146:boolean isNumber() -> isNumber
    157:157:java.lang.Number getAsNumber() -> getAsNumber
    166:166:boolean isString() -> isString
    176:181:java.lang.String getAsString() -> getAsString
    193:193:double getAsDouble() -> getAsDouble
    204:204:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    215:215:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    227:227:float getAsFloat() -> getAsFloat
    238:238:long getAsLong() -> getAsLong
    249:249:short getAsShort() -> getAsShort
    260:260:int getAsInt() -> getAsInt
    265:265:byte getAsByte() -> getAsByte
    270:270:char getAsCharacter() -> getAsCharacter
    274:284:boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    289:301:int hashCode() -> hashCode
    306:326:boolean equals(java.lang.Object) -> equals
    334:339:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    33:33:com.google.gson.JsonElement deepCopy() -> deepCopy
    35:35:void <clinit>() -> <clinit>
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    61:62:void <init>(java.lang.String) -> <init>
    68:72:void <init>(java.io.Reader) -> <init>
    82:93:com.google.gson.JsonElement next() -> next
    103:111:boolean hasNext() -> hasNext
    120:120:void remove() -> remove
    52:52:java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:45:void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    34:34:void <init>(java.lang.String,int) -> <init>
    36:36:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    45:45:void <init>(java.lang.String,int) -> <init>
    47:47:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    42:48:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    51:58:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    62:72:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    75:76:com.google.gson.TypeAdapter delegate() -> delegate
    85:85:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    95:96:com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    105:105:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
    31:31:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,com.google.gson.TreeTypeAdapter$1) -> <init>
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    116:127:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    131:134:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    108:108:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$1) -> <init>
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    119:119:void <init>() -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    141:143:void toJson(java.io.Writer,java.lang.Object) -> toJson
    186:186:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    215:217:java.lang.String toJson(java.lang.Object) -> toJson
    229:233:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    255:256:java.lang.Object fromJson(java.io.Reader) -> fromJson
    269:269:java.lang.Object fromJson(java.lang.String) -> fromJson
    280:283:java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    186:186:void <init>(com.google.gson.TypeAdapter) -> <init>
    188:193:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    195:199:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    32:32:void <init>() -> <init>
    34:37:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    41:44:void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    45:45:void <init>() -> <init>
    55:55:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    65:65:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    75:75:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    84:84:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    93:112:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    117:145:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    151:151:boolean equal(java.lang.Object,java.lang.Object) -> equal
    158:208:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    213:213:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    217:217:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    226:256:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    267:268:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    277:277:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    287:295:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    308:318:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    324:388:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    394:407:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    411:416:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    424:425:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    431:432:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    42:42:void access$000(java.lang.reflect.Type) -> access$000
    42:42:int access$100(java.lang.Object) -> access$100
    43:43:void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    501:503:void <init>(java.lang.reflect.Type) -> <init>
    506:506:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    510:510:boolean equals(java.lang.Object) -> equals
    515:515:int hashCode() -> hashCode
    519:519:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    439:455:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    458:458:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    462:462:java.lang.reflect.Type getRawType() -> getRawType
    466:466:java.lang.reflect.Type getOwnerType() -> getOwnerType
    470:470:boolean equals(java.lang.Object) -> equals
    475:475:int hashCode() -> hashCode
    481:492:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    534:551:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    554:554:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    558:558:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    562:562:boolean equals(java.lang.Object) -> equals
    568:568:int hashCode() -> hashCode
    573:578:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    47:49:void <init>(java.util.Map) -> <init>
    52:90:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    95:119:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    130:197:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    202:202:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    218:218:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    60:60:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    62:62:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    183:183:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    185:185:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    189:189:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    191:191:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    202:203:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type) -> <init>
    207:210:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    72:72:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    74:74:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    99:99:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor) -> <init>
    103:114:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    132:132:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    134:134:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    138:138:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type) -> <init>
    141:149:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    154:154:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    156:156:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    160:160:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    162:162:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    166:166:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    168:168:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    176:176:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    178:178:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    50:59:void <init>() -> <init>
    63:65:com.google.gson.internal.Excluder clone() -> clone
    70:72:com.google.gson.internal.Excluder withVersion(double) -> withVersion
    76:81:com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    85:87:com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    91:93:com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    98:108:com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    112:120:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    150:188:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    192:212:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    216:216:boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    221:221:boolean isInnerClass(java.lang.Class) -> isInnerClass
    225:225:boolean isStatic(java.lang.Class) -> isStatic
    229:229:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    233:239:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    243:249:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    50:50:java.lang.Object clone() -> clone
    52:52:void <clinit>() -> <clinit>
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    120:120:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    125:129:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    133:138:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    141:142:com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    25:25:void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    29:31:void <init>(java.lang.String) -> <init>
    36:41:int intValue() -> intValue
    49:51:long longValue() -> longValue
    57:57:float floatValue() -> floatValue
    62:62:double doubleValue() -> doubleValue
    67:67:java.lang.String toString() -> toString
    76:76:java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    60:61:void <init>() -> <init>
    48:75:void <init>(java.util.Comparator) -> <init>
    78:78:int size() -> size
    82:83:java.lang.Object get(java.lang.Object) -> get
    87:87:boolean containsKey(java.lang.Object) -> containsKey
    91:97:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    101:108:void clear() -> clear
    111:112:java.lang.Object remove(java.lang.Object) -> remove
    122:180:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    186:188:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    202:204:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    208:208:boolean equal(java.lang.Object,java.lang.Object) -> equal
    218:274:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    277:281:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    285:301:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    311:368:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    374:396:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    402:424:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    430:431:java.util.Set entrySet() -> entrySet
    435:436:java.util.Set keySet() -> keySet
    625:625:java.lang.Object writeReplace() -> writeReplace
    38:40:void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    40:40:void <init>() -> <init>
    42:42:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    40:40:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    557:557:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    559:559:int size() -> size
    563:563:java.util.Iterator iterator() -> iterator
    571:571:boolean contains(java.lang.Object) -> contains
    575:584:boolean remove(java.lang.Object) -> remove
    588:589:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    563:563:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    565:565:java.util.Map$Entry next() -> next
    563:563:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    592:592:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    594:594:int size() -> size
    598:598:java.util.Iterator iterator() -> iterator
    606:606:boolean contains(java.lang.Object) -> contains
    610:610:boolean remove(java.lang.Object) -> remove
    614:615:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    598:598:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    600:600:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    526:529:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    532:532:boolean hasNext() -> hasNext
    536:544:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    548:554:void remove() -> remove
    526:526:void <init>(com.google.gson.internal.LinkedTreeMap,com.google.gson.internal.LinkedTreeMap$1) -> <init>
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    450:453:void <init>() -> <init>
    456:464:void <init>(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    467:467:java.lang.Object getKey() -> getKey
    471:471:java.lang.Object getValue() -> getValue
    475:477:java.lang.Object setValue(java.lang.Object) -> setValue
    482:487:boolean equals(java.lang.Object) -> equals
    491:491:int hashCode() -> hashCode
    496:496:java.lang.String toString() -> toString
    503:509:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    516:522:com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    32:32:void <init>() -> <init>
    62:64:void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    70:70:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    80:80:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    96:98:java.lang.Class wrap(java.lang.Class) -> wrap
    113:115:java.lang.Class unwrap(java.lang.Class) -> unwrap
    43:58:void <clinit>() -> <clinit>
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    35:79:void <init>() -> <init>
    40:60:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    68:69:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    72:72:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    81:85:void <init>(java.lang.Appendable) -> <init>
    88:90:void write(char[],int,int) -> write
    93:94:void write(int) -> write
    96:96:void flush() -> flush
    97:97:void close() -> close
    79:79:void <init>(java.lang.Appendable,com.google.gson.internal.Streams$1) -> <init>
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    102:102:void <init>() -> <init>
    105:105:int length() -> length
    108:108:char charAt(int) -> charAt
    111:111:java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    30:30:void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    39:97:com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    44:44:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    48:48:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    63:63:void <init>(java.lang.reflect.Method) -> <init>
    67:67:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    86:86:void <init>(java.lang.reflect.Method,int) -> <init>
    90:90:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    97:97:void <init>() -> <init>
    100:100:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    57:61:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:80:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    85:96:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    39:41:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:57:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    66:70:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    73:85:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    89:99:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    60:60:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    60:60:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    41:53:void <init>() -> <init>
    56:58:java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    62:66:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    71:81:java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    86:92:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    41:41:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    41:41:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    42:42:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    42:42:void <init>() -> <init>
    45:45:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    50:55:void <init>(com.google.gson.JsonElement) -> <init>
    58:61:void beginArray() -> beginArray
    64:67:void endArray() -> endArray
    70:73:void beginObject() -> beginObject
    76:79:void endObject() -> endObject
    82:83:boolean hasNext() -> hasNext
    87:125:com.google.gson.stream.JsonToken peek() -> peek
    130:130:java.lang.Object peekStack() -> peekStack
    134:134:java.lang.Object popStack() -> popStack
    138:141:void expect(com.google.gson.stream.JsonToken) -> expect
    144:148:java.lang.String nextName() -> nextName
    152:156:java.lang.String nextString() -> nextString
    160:161:boolean nextBoolean() -> nextBoolean
    165:167:void nextNull() -> nextNull
    170:179:double nextDouble() -> nextDouble
    183:189:long nextLong() -> nextLong
    193:199:int nextInt() -> nextInt
    203:205:void close() -> close
    208:213:void skipValue() -> skipValue
    216:216:java.lang.String toString() -> toString
    220:225:void promoteNameToValue() -> promoteNameToValue
    40:48:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    40:40:void <init>() -> <init>
    42:42:int read(char[],int,int) -> read
    45:45:void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    49:59:void <init>() -> <init>
    65:68:com.google.gson.JsonElement get() -> get
    72:72:com.google.gson.JsonElement peek() -> peek
    76:92:void put(com.google.gson.JsonElement) -> put
    95:98:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    102:110:com.google.gson.stream.JsonWriter endArray() -> endArray
    114:117:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    121:129:com.google.gson.stream.JsonWriter endObject() -> endObject
    133:141:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    145:149:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    153:154:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    158:159:com.google.gson.stream.JsonWriter value(boolean) -> value
    163:167:com.google.gson.stream.JsonWriter value(double) -> value
    171:172:com.google.gson.stream.JsonWriter value(long) -> value
    176:188:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    192:192:void flush() -> flush
    195:199:void close() -> close
    34:46:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    34:34:void <init>() -> <init>
    36:36:void write(char[],int,int) -> write
    39:39:void flush() -> flush
    42:42:void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    110:113:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:133:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    140:140:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    105:105:boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    152:158:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    161:195:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    199:243:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    246:260:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    145:145:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    145:145:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    50:52:void <init>(com.google.gson.Gson) -> <init>
    55:89:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    95:108:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    37:37:void <init>(com.google.gson.Gson,com.google.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    38:38:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    38:38:void <init>() -> <init>
    41:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    56:56:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    49:53:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder) -> <init>
    56:56:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    60:61:java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    65:72:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    78:81:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    102:129:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    81:82:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.reflect.Field,boolean) -> <init>
    86:90:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    93:97:void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    151:154:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    157:181:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    185:202:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    147:147:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1) -> <init>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    137:141:void <init>(java.lang.String,boolean,boolean) -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    38:47:void <init>() -> <init>
    51:59:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    65:66:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    39:39:void <init>() -> <init>
    42:42:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    40:48:void <init>() -> <init>
    51:59:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    64:65:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    41:41:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    32:36:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    52:69:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    75:79:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    58:58:void <init>() -> <init>
    752:752:com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    769:769:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    779:779:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    792:792:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    807:807:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    822:822:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
    61:749:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    61:61:void <init>() -> <init>
    64:70:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    73:77:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    287:287:void <init>() -> <init>
    290:294:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    298:299:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    287:287:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    287:287:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    302:302:void <init>() -> <init>
    305:313:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    318:319:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    302:302:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    302:302:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    324:324:void <init>() -> <init>
    327:335:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    339:340:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    324:324:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    324:324:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    346:346:void <init>() -> <init>
    349:358:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    362:363:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    366:366:void <init>() -> <init>
    368:375:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    380:381:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    366:366:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    366:366:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    384:384:void <init>() -> <init>
    386:393:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    398:399:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    384:384:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    384:384:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    404:404:void <init>() -> <init>
    407:411:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    415:416:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    404:404:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    404:404:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    422:422:void <init>() -> <init>
    425:429:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    433:434:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    422:422:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    422:422:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    440:440:void <init>() -> <init>
    443:448:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    452:453:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    440:440:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    440:440:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    458:458:void <init>() -> <init>
    461:469:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    474:475:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    458:458:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    458:458:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    84:84:void <init>() -> <init>
    86:123:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    127:138:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    84:84:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    84:84:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    480:480:void <init>() -> <init>
    483:488:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    492:493:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    480:480:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    480:480:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    499:499:void <init>() -> <init>
    502:506:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    510:511:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    499:499:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    499:499:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    516:516:void <init>() -> <init>
    519:524:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    524:524:void <init>(com.google.gson.internal.bind.TypeAdapters$22,com.google.gson.TypeAdapter) -> <init>
    526:527:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    531:532:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    524:524:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    524:524:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    537:537:void <init>() -> <init>
    547:576:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    581:599:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    537:537:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    537:537:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    605:605:void <init>() -> <init>
    608:631:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    636:637:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    605:605:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    605:605:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    642:642:void <init>() -> <init>
    644:676:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    681:711:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    642:642:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    642:642:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    752:752:void <init>() -> <init>
    755:762:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    769:769:void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    772:772:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    779:779:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    782:782:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    785:785:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    792:792:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    795:796:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    799:799:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    143:143:void <init>() -> <init>
    146:153:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    157:162:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    143:143:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    143:143:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    807:807:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    810:811:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    814:814:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    822:822:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    825:825:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    828:828:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    97:97:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    169:169:void <init>() -> <init>
    171:175:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    179:180:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    169:169:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    169:169:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    186:186:void <init>() -> <init>
    189:197:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    202:203:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    186:186:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    186:186:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    209:209:void <init>() -> <init>
    212:219:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    224:225:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    209:209:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    209:209:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    231:231:void <init>() -> <init>
    234:241:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    246:247:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    231:231:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    231:231:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    253:253:void <init>() -> <init>
    256:263:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    268:269:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    253:253:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    253:253:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    272:272:void <init>() -> <init>
    275:279:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    283:284:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    272:272:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    272:272:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    718:735:void <init>(java.lang.Class) -> <init>
    737:741:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    745:746:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    717:717:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    717:717:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    61:65:void <init>() -> <init>
    71:75:void <init>(java.lang.reflect.Type) -> <init>
    82:87:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    94:94:java.lang.Class getRawType() -> getRawType
    101:101:java.lang.reflect.Type getType() -> getType
    112:112:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    123:140:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    153:153:boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    161:178:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    188:231:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    240:250:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    257:265:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    273:273:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    280:280:int hashCode() -> hashCode
    284:284:boolean equals(java.lang.Object) -> equals
    289:289:java.lang.String toString() -> toString
    296:296:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    303:303:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    230:283:void <init>(java.io.Reader) -> <init>
    315:316:void setLenient(boolean) -> setLenient
    322:322:boolean isLenient() -> isLenient
    330:341:void beginArray() -> beginArray
    348:359:void endArray() -> endArray
    366:377:void beginObject() -> beginObject
    384:395:void endObject() -> endObject
    401:405:boolean hasNext() -> hasNext
    412:446:com.google.gson.stream.JsonToken peek() -> peek
    451:590:int doPeek() -> doPeek
    595:634:int peekKeyword() -> peekKeyword
    639:736:int peekNumber() -> peekNumber
    741:761:boolean isLiteral(char) -> isLiteral
    773:789:java.lang.String nextName() -> nextName
    801:825:java.lang.String nextString() -> nextString
    836:847:boolean nextBoolean() -> nextBoolean
    859:869:void nextNull() -> nextNull
    881:911:double nextDouble() -> nextDouble
    925:961:long nextLong() -> nextLong
    976:1008:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    1016:1073:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    1078:1100:void skipQuotedValue(char) -> skipQuotedValue
    1105:1131:void skipUnquotedValue() -> skipUnquotedValue
    1144:1186:int nextInt() -> nextInt
    1193:1197:void close() -> close
    1205:1235:void skipValue() -> skipValue
    1238:1244:void push(int) -> push
    1252:1277:boolean fillBuffer(int) -> fillBuffer
    1281:1281:int getLineNumber() -> getLineNumber
    1285:1285:int getColumnNumber() -> getColumnNumber
    1303:1380:int nextNonWhitespace(boolean) -> nextNonWhitespace
    1385:1388:void checkLenient() -> checkLenient
    1396:1406:void skipToEndOfLine() -> skipToEndOfLine
    1413:1426:boolean skipTo(java.lang.String) -> skipTo
    1430:1430:java.lang.String toString() -> toString
    1444:1496:char readEscapeCharacter() -> readEscapeCharacter
    1505:1505:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1514:1529:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    190:190:int access$000(com.google.gson.stream.JsonReader) -> access$000
    190:190:int access$100(com.google.gson.stream.JsonReader) -> access$100
    190:190:int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    190:190:int access$200(com.google.gson.stream.JsonReader) -> access$200
    190:190:int access$300(com.google.gson.stream.JsonReader) -> access$300
    192:1554:void <clinit>() -> <clinit>
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1532:1532:void <init>() -> <init>
    1534:1552:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
    25:25:void <init>() -> <init>
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    25:25:com.google.gson.stream.JsonToken[] values() -> values
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:84:void <clinit>() -> <clinit>
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    167:202:void <init>(java.io.Writer) -> <init>
    213:220:void setIndent(java.lang.String) -> setIndent
    235:236:void setLenient(boolean) -> setLenient
    242:242:boolean isLenient() -> isLenient
    253:254:void setHtmlSafe(boolean) -> setHtmlSafe
    261:261:boolean isHtmlSafe() -> isHtmlSafe
    269:270:void setSerializeNulls(boolean) -> setSerializeNulls
    277:277:boolean getSerializeNulls() -> getSerializeNulls
    287:288:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    297:297:com.google.gson.stream.JsonWriter endArray() -> endArray
    307:308:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    317:317:com.google.gson.stream.JsonWriter endObject() -> endObject
    325:328:com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    337:350:com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    354:360:void push(int) -> push
    366:369:int peek() -> peek
    376:377:void replaceTop(int) -> replaceTop
    386:396:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    400:405:void writeDeferredName() -> writeDeferredName
    414:420:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    429:439:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    448:451:com.google.gson.stream.JsonWriter value(boolean) -> value
    462:468:com.google.gson.stream.JsonWriter value(double) -> value
    477:480:com.google.gson.stream.JsonWriter value(long) -> value
    491:503:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    511:515:void flush() -> flush
    523:530:void close() -> close
    533:562:void string(java.lang.String) -> string
    565:573:void newline() -> newline
    580:588:void beforeName() -> beforeName
    600:633:void beforeValue(boolean) -> beforeValue
    145:162:void <clinit>() -> <clinit>
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    39:43:void <init>(java.lang.Throwable) -> <init>
fr.launchmycraft.launcher.bootstrap.BootstrapCore -> fr.launchmycraft.launcher.bootstrap.BootstrapCore:
    fr.launchmycraft.launcher.bootstrap.TexturedPanel mainPanel -> a
    javax.swing.JLabel logo -> a
    javax.swing.JTextArea text -> a
    javax.swing.JProgressBar loading -> a
    javax.swing.JFrame frame -> a
    fr.launchmycraft.launcher.bootstrap.Config config -> a
    boolean hasPaid -> a
    43:43:void <init>() -> <init>
    57:126:void main(java.lang.String[]) -> main
    132:134:void die(java.lang.String) -> a
    138:140:java.io.File getLauncherFile() -> a
    202:219:void downloadJar() -> a
    223:223:java.lang.String getHasPaidUrl(long) -> a
    236:236:boolean hasPaid() -> a
fr.launchmycraft.launcher.bootstrap.BootstrapCore$HasPaid -> fr.launchmycraft.launcher.bootstrap.BootstrapCore$a:
    boolean data -> a
    fr.launchmycraft.launcher.bootstrap.BootstrapCore this$0 -> a
    227:227:void <init>(fr.launchmycraft.launcher.bootstrap.BootstrapCore) -> <init>
fr.launchmycraft.launcher.bootstrap.BootstrapCore$Worker -> fr.launchmycraft.launcher.bootstrap.BootstrapCore$b:
    143:143:void <init>() -> <init>
    152:192:void run() -> run
fr.launchmycraft.launcher.bootstrap.Config -> fr.launchmycraft.launcher.bootstrap.a:
    long launcherid -> a
    java.lang.String newsurl -> a
    java.lang.String identifier -> b
    15:15:void <init>() -> <init>
fr.launchmycraft.launcher.bootstrap.Constants -> fr.launchmycraft.launcher.bootstrap.b:
    boolean DEBUG -> a
    java.lang.String LAUNCHER_MAIN_CLASS -> a
    long VERSION -> a
    31:33:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    18:18:java.lang.String LAUNCHER_MD5_URL() -> a
    28:28:java.lang.String LAUNCHER_FILE_URL() -> b
fr.launchmycraft.launcher.bootstrap.JCredits -> fr.launchmycraft.launcher.bootstrap.c:
    19:59:void <init>(java.lang.String,java.lang.String) -> <init>
fr.launchmycraft.launcher.bootstrap.JCredits$1 -> fr.launchmycraft.launcher.bootstrap.c$1:
    fr.launchmycraft.launcher.bootstrap.JCredits this$0 -> a
    java.lang.String val$url -> a
    1:34:void <init>(fr.launchmycraft.launcher.bootstrap.JCredits,java.lang.String) -> <init>
    39:44:void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    47:47:void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    50:50:void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    53:53:void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    56:56:void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
fr.launchmycraft.launcher.bootstrap.OperatingSystem -> fr.launchmycraft.launcher.bootstrap.d:
    fr.launchmycraft.launcher.bootstrap.OperatingSystem LINUX -> a
    fr.launchmycraft.launcher.bootstrap.OperatingSystem WINDOWS -> b
    fr.launchmycraft.launcher.bootstrap.OperatingSystem OSX -> c
    fr.launchmycraft.launcher.bootstrap.OperatingSystem UNKNOWN -> d
    java.lang.String name -> a
    java.lang.String[] aliases -> a
    int[] $SWITCH_TABLE$fr$launchmycraft$launcher$bootstrap$OperatingSystem$OS -> a
    fr.launchmycraft.launcher.bootstrap.OperatingSystem[] ENUM$VALUES -> a
    9:10:void <clinit>() -> <clinit>
    13:20:fr.launchmycraft.launcher.bootstrap.OperatingSystem getCurrentPlatform() -> a
    28:37:fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS getPlatform() -> a
    41:66:java.io.File getBaseWorkingDirectory(boolean,java.lang.String) -> a
    72:77:void openLink(java.net.URI) -> a
    83:86:void <init>(java.lang.String,int,java.lang.String,java.lang.String[]) -> <init>
    89:89:java.lang.String[] getAliases() -> a
    93:99:java.lang.String getJavaDir() -> a
    103:103:java.lang.String getName() -> b
    107:107:boolean isSupported() -> a
    1:1:fr.launchmycraft.launcher.bootstrap.OperatingSystem[] values() -> a
    1:1:fr.launchmycraft.launcher.bootstrap.OperatingSystem valueOf(java.lang.String) -> a
    9:9:int[] $SWITCH_TABLE$fr$launchmycraft$launcher$bootstrap$OperatingSystem$OS() -> a
fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS -> fr.launchmycraft.launcher.bootstrap.d$a:
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS WINDOWS -> a
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS MACOS -> b
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS SOLARIS -> c
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS LINUX -> d
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS UNKNOWN -> e
    fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS[] ENUM$VALUES -> a
    23:24:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int) -> <init>
    1:1:fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS[] values() -> a
    1:1:fr.launchmycraft.launcher.bootstrap.OperatingSystem$OS valueOf(java.lang.String) -> a
fr.launchmycraft.launcher.bootstrap.TexturedPanel -> fr.launchmycraft.launcher.bootstrap.e:
    long serialVersionUID -> a
    java.awt.Image image -> a
    java.awt.Image bgImage -> b
    19:24:void <init>(java.awt.Image) -> <init>
    27:37:void copyImage(int,int) -> a
    40:47:void overlayGradient(int,int,java.awt.Graphics2D) -> a
    51:60:void paintComponent(java.awt.Graphics) -> paintComponent
    64:65:void update(java.awt.Graphics) -> update
fr.launchmycraft.launcher.bootstrap.Util -> fr.launchmycraft.launcher.bootstrap.f:
    19:19:void <init>() -> <init>
    25:33:java.lang.String doGET(java.lang.String,java.lang.String) -> a
    38:46:java.lang.String getHash(java.io.File,java.lang.String) -> a
net.lingala.zip4j.core.HeaderReader -> net.lingala.zip4j.core.HeaderReader:
    java.io.RandomAccessFile zip4jRaf -> zip4jRaf
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    47:56:void <init>(java.io.RandomAccessFile) -> <init>
    65:65:net.lingala.zip4j.model.ZipModel readAllHeaders() -> readAllHeaders
    76:96:net.lingala.zip4j.model.ZipModel readAllHeaders(java.lang.String) -> readAllHeaders
    106:179:net.lingala.zip4j.model.EndCentralDirRecord readEndOfCentralDirectoryRecord() -> readEndOfCentralDirectoryRecord
    190:396:net.lingala.zip4j.model.CentralDirectory readCentralDirectory() -> readCentralDirectory
    407:422:void readAndSaveExtraDataRecord(net.lingala.zip4j.model.FileHeader) -> readAndSaveExtraDataRecord
    431:446:void readAndSaveExtraDataRecord(net.lingala.zip4j.model.LocalFileHeader) -> readAndSaveExtraDataRecord
    456:499:java.util.ArrayList readExtraDataRecords(int) -> readExtraDataRecords
    510:546:net.lingala.zip4j.model.Zip64EndCentralDirLocator readZip64EndCentralDirLocator() -> readZip64EndCentralDirLocator
    558:639:net.lingala.zip4j.model.Zip64EndCentralDirRecord readZip64EndCentralDirRec() -> readZip64EndCentralDirRec
    650:679:void readAndSaveZip64ExtendedInfo(net.lingala.zip4j.model.FileHeader) -> readAndSaveZip64ExtendedInfo
    687:710:void readAndSaveZip64ExtendedInfo(net.lingala.zip4j.model.LocalFileHeader) -> readAndSaveZip64ExtendedInfo
    729:788:net.lingala.zip4j.model.Zip64ExtendedInfo readZip64ExtendedInfo(java.util.ArrayList,long,long,long,int) -> readZip64ExtendedInfo
    798:818:void setFilePointerToReadZip64EndCentralDirLoc() -> setFilePointerToReadZip64EndCentralDirLoc
    827:992:net.lingala.zip4j.model.LocalFileHeader readLocalFileHeader(net.lingala.zip4j.model.FileHeader) -> readLocalFileHeader
    1002:1015:void readAndSaveAESExtraDataRecord(net.lingala.zip4j.model.FileHeader) -> readAndSaveAESExtraDataRecord
    1023:1036:void readAndSaveAESExtraDataRecord(net.lingala.zip4j.model.LocalFileHeader) -> readAndSaveAESExtraDataRecord
    1046:1079:net.lingala.zip4j.model.AESExtraDataRecord readAESExtraDataRecord(java.util.ArrayList) -> readAESExtraDataRecord
    1091:1097:byte[] readIntoBuff(java.io.RandomAccessFile,byte[]) -> readIntoBuff
    1108:1117:byte[] getLongByteFromIntByte(byte[]) -> getLongByteFromIntByte
net.lingala.zip4j.core.HeaderWriter -> net.lingala.zip4j.core.HeaderWriter:
    int ZIP64_EXTRA_BUF -> ZIP64_EXTRA_BUF
    37:39:void <init>() -> <init>
    43:195:int writeLocalFileHeader(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.LocalFileHeader,java.io.OutputStream) -> writeLocalFileHeader
    201:234:int writeExtendedLocalHeader(net.lingala.zip4j.model.LocalFileHeader,java.io.OutputStream) -> writeExtendedLocalHeader
    245:288:void finalizeZipFile(net.lingala.zip4j.model.ZipModel,java.io.OutputStream) -> finalizeZipFile
    300:334:void finalizeZipFileWithoutValidations(net.lingala.zip4j.model.ZipModel,java.io.OutputStream) -> finalizeZipFileWithoutValidations
    343:359:void writeZipHeaderBytes(net.lingala.zip4j.model.ZipModel,java.io.OutputStream,byte[]) -> writeZipHeaderBytes
    369:393:void processHeaderData(net.lingala.zip4j.model.ZipModel,java.io.OutputStream) -> processHeaderData
    405:421:int writeCentralDirectory(net.lingala.zip4j.model.ZipModel,java.io.OutputStream,java.util.List) -> writeCentralDirectory
    427:631:int writeFileHeader(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader,java.io.OutputStream,java.util.List) -> writeFileHeader
    638:718:void writeZip64EndOfCentralDirectoryRecord(net.lingala.zip4j.model.ZipModel,java.io.OutputStream,int,long,java.util.List) -> writeZip64EndOfCentralDirectoryRecord
    722:751:void writeZip64EndOfCentralDirectoryLocator(net.lingala.zip4j.model.ZipModel,java.io.OutputStream,java.util.List) -> writeZip64EndOfCentralDirectoryLocator
    758:835:void writeEndOfCentralDirectoryRecord(net.lingala.zip4j.model.ZipModel,java.io.OutputStream,int,long,java.util.List) -> writeEndOfCentralDirectoryRecord
    839:891:void updateLocalFileHeader(net.lingala.zip4j.model.LocalFileHeader,long,int,net.lingala.zip4j.model.ZipModel,byte[],int,net.lingala.zip4j.io.SplitOutputStream) -> updateLocalFileHeader
    896:930:void updateCompressedSizeInLocalFileHeader(net.lingala.zip4j.io.SplitOutputStream,net.lingala.zip4j.model.LocalFileHeader,long,long,byte[],boolean) -> updateCompressedSizeInLocalFileHeader
    933:940:void copyByteArrayToArrayList(byte[],java.util.List) -> copyByteArrayToArrayList
    943:957:byte[] byteArrayListToByteArray(java.util.List) -> byteArrayListToByteArray
    962:973:int countNumberOfFileHeaderEntriesOnDisk(java.util.ArrayList,int) -> countNumberOfFileHeaderEntriesOnDisk
net.lingala.zip4j.core.ZipFile -> net.lingala.zip4j.core.ZipFile:
    java.lang.String file -> file
    int mode -> mode
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    boolean isEncrypted -> isEncrypted
    net.lingala.zip4j.progress.ProgressMonitor progressMonitor -> progressMonitor
    boolean runInThread -> runInThread
    java.lang.String fileNameCharset -> fileNameCharset
    72:73:void <init>(java.lang.String) -> <init>
    81:91:void <init>(java.io.File) -> <init>
    102:105:void createZipFile(java.io.File,net.lingala.zip4j.model.ZipParameters) -> createZipFile
    123:126:void createZipFile(java.io.File,net.lingala.zip4j.model.ZipParameters,boolean,long) -> createZipFile
    138:139:void createZipFile(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters) -> createZipFile
    157:177:void createZipFile(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,boolean,long) -> createZipFile
    195:201:void createZipFileFromFolder(java.lang.String,net.lingala.zip4j.model.ZipParameters,boolean,long) -> createZipFileFromFolder
    219:237:void createZipFileFromFolder(java.io.File,net.lingala.zip4j.model.ZipParameters,boolean,long) -> createZipFileFromFolder
    248:251:void addFile(java.io.File,net.lingala.zip4j.model.ZipParameters) -> addFile
    263:293:void addFiles(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters) -> addFiles
    305:310:void addFolder(java.lang.String,net.lingala.zip4j.model.ZipParameters) -> addFolder
    322:331:void addFolder(java.io.File,net.lingala.zip4j.model.ZipParameters) -> addFolder
    343:358:void addFolder(java.io.File,net.lingala.zip4j.model.ZipParameters,boolean) -> addFolder
    372:396:void addStream(java.io.InputStream,net.lingala.zip4j.model.ZipParameters) -> addStream
    406:441:void readZipInfo() -> readZipInfo
    451:453:void extractAll(java.lang.String) -> extractAll
    466:490:void extractAll(java.lang.String,net.lingala.zip4j.model.UnzipParameters) -> extractAll
    500:501:void extractFile(net.lingala.zip4j.model.FileHeader,java.lang.String) -> extractFile
    517:518:void extractFile(net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters) -> extractFile
    532:548:void extractFile(net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String) -> extractFile
    566:567:void extractFile(java.lang.String,java.lang.String) -> extractFile
    587:588:void extractFile(java.lang.String,java.lang.String,net.lingala.zip4j.model.UnzipParameters) -> extractFile
    614:636:void extractFile(java.lang.String,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String) -> extractFile
    649:653:void setPassword(java.lang.String) -> setPassword
    661:679:void setPassword(char[]) -> setPassword
    688:692:java.util.List getFileHeaders() -> getFileHeaders
    703:712:net.lingala.zip4j.model.FileHeader getFileHeader(java.lang.String) -> getFileHeader
    721:743:boolean isEncrypted() -> isEncrypted
    753:760:boolean isSplitArchive() -> isSplitArchive
    775:795:void removeFile(java.lang.String) -> removeFile
    805:822:void removeFile(net.lingala.zip4j.model.FileHeader) -> removeFile
    831:848:void mergeSplitFiles(java.io.File) -> mergeSplitFiles
    856:876:void setComment(java.lang.String) -> setComment
    884:884:java.lang.String getComment() -> getComment
    894:924:java.lang.String getComment(java.lang.String) -> getComment
    933:940:void checkZipModel() -> checkZipModel
    947:950:void createNewZipModel() -> createNewZipModel
    959:968:void setFileNameCharset(java.lang.String) -> setFileNameCharset
    979:990:net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader) -> getInputStream
    1002:1005:boolean isValidZipFile() -> isValidZipFile
    1018:1019:java.util.ArrayList getSplitZipFiles() -> getSplitZipFiles
    1023:1023:net.lingala.zip4j.progress.ProgressMonitor getProgressMonitor() -> getProgressMonitor
    1027:1027:boolean isRunInThread() -> isRunInThread
    1031:1032:void setRunInThread(boolean) -> setRunInThread
    1039:1039:java.io.File getFile() -> getFile
net.lingala.zip4j.crypto.AESDecrypter -> net.lingala.zip4j.crypto.AESDecrypter:
    net.lingala.zip4j.model.LocalFileHeader localFileHeader -> localFileHeader
    net.lingala.zip4j.crypto.engine.AESEngine aesEngine -> aesEngine
    net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF mac -> mac
    int PASSWORD_VERIFIER_LENGTH -> PASSWORD_VERIFIER_LENGTH
    int KEY_LENGTH -> KEY_LENGTH
    int MAC_LENGTH -> MAC_LENGTH
    int SALT_LENGTH -> SALT_LENGTH
    byte[] aesKey -> aesKey
    byte[] macKey -> macKey
    byte[] derivedPasswordVerifier -> derivedPasswordVerifier
    byte[] storedMac -> storedMac
    int nonce -> nonce
    byte[] iv -> iv
    byte[] counterBlock -> counterBlock
    int loopCount -> loopCount
    39:66:void <init>(net.lingala.zip4j.model.LocalFileHeader,byte[],byte[]) -> <init>
    69:127:void init(byte[],byte[]) -> init
    131:157:int decryptData(byte[],int,int) -> decryptData
    162:162:int decryptData(byte[]) -> decryptData
    167:173:byte[] deriveKey(byte[],char[]) -> deriveKey
    178:178:int getPasswordVerifierLength() -> getPasswordVerifierLength
    182:182:int getSaltLength() -> getSaltLength
    186:186:byte[] getCalculatedAuthenticationBytes() -> getCalculatedAuthenticationBytes
    190:191:void setStoredMac(byte[]) -> setStoredMac
    194:194:byte[] getStoredMac() -> getStoredMac
net.lingala.zip4j.crypto.AESEncrpyter -> net.lingala.zip4j.crypto.AESEncrpyter:
    char[] password -> password
    int keyStrength -> keyStrength
    net.lingala.zip4j.crypto.engine.AESEngine aesEngine -> aesEngine
    net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF mac -> mac
    int KEY_LENGTH -> KEY_LENGTH
    int MAC_LENGTH -> MAC_LENGTH
    int SALT_LENGTH -> SALT_LENGTH
    int PASSWORD_VERIFIER_LENGTH -> PASSWORD_VERIFIER_LENGTH
    byte[] aesKey -> aesKey
    byte[] macKey -> macKey
    byte[] derivedPasswordVerifier -> derivedPasswordVerifier
    byte[] saltBytes -> saltBytes
    boolean finished -> finished
    int nonce -> nonce
    int loopCount -> loopCount
    byte[] iv -> iv
    byte[] counterBlock -> counterBlock
    40:70:void <init>(char[],int) -> <init>
    73:106:void init() -> init
    110:116:byte[] deriveKey(byte[],char[]) -> deriveKey
    122:125:int encryptData(byte[]) -> encryptData
    130:156:int encryptData(byte[],int,int) -> encryptData
    161:181:byte[] generateSalt(int) -> generateSalt
    185:188:byte[] getFinalMac() -> getFinalMac
    192:192:byte[] getDerivedPasswordVerifier() -> getDerivedPasswordVerifier
    196:197:void setDerivedPasswordVerifier(byte[]) -> setDerivedPasswordVerifier
    200:200:byte[] getSaltBytes() -> getSaltBytes
    204:205:void setSaltBytes(byte[]) -> setSaltBytes
    208:208:int getSaltLength() -> getSaltLength
    212:212:int getPasswordVeriifierLength() -> getPasswordVeriifierLength
net.lingala.zip4j.crypto.IDecrypter -> net.lingala.zip4j.crypto.IDecrypter:
    int decryptData(byte[],int,int) -> decryptData
    int decryptData(byte[]) -> decryptData
net.lingala.zip4j.crypto.IEncrypter -> net.lingala.zip4j.crypto.IEncrypter:
    int encryptData(byte[]) -> encryptData
    int encryptData(byte[],int,int) -> encryptData
net.lingala.zip4j.crypto.PBKDF2.BinTools -> net.lingala.zip4j.crypto.PBKDF2.BinTools:
    java.lang.String hex -> hex
    24:24:void <init>() -> <init>
    30:41:java.lang.String bin2hex(byte[]) -> bin2hex
    46:64:byte[] hex2bin(java.lang.String) -> hex2bin
    69:83:int hex2bin(char) -> hex2bin
net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF -> net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF:
    javax.crypto.Mac mac -> mac
    int hLen -> hLen
    java.lang.String macAlgorithm -> macAlgorithm
    39:51:void <init>(java.lang.String) -> <init>
    53:69:void <init>(java.lang.String,java.lang.String) -> <init>
    73:74:byte[] doFinal(byte[]) -> doFinal
    78:79:byte[] doFinal() -> doFinal
    84:84:int getHLen() -> getHLen
    91:97:void init(byte[]) -> init
    102:107:void update(byte[]) -> update
    111:115:void update(byte[],int,int) -> update
net.lingala.zip4j.crypto.PBKDF2.PBKDF2Engine -> net.lingala.zip4j.crypto.PBKDF2.PBKDF2Engine:
    net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters parameters -> parameters
    net.lingala.zip4j.crypto.PBKDF2.PRF prf -> prf
    32:36:void <init>() -> <init>
    38:42:void <init>(net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters) -> <init>
    44:48:void <init>(net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters,net.lingala.zip4j.crypto.PBKDF2.PRF) -> <init>
    52:52:byte[] deriveKey(char[]) -> deriveKey
    57:73:byte[] deriveKey(char[],int) -> deriveKey
    78:96:boolean verifyKey(char[]) -> verifyKey
    101:106:void assertPRF(byte[]) -> assertPRF
    110:110:net.lingala.zip4j.crypto.PBKDF2.PRF getPseudoRandomFunction() -> getPseudoRandomFunction
    115:136:byte[] PBKDF2(net.lingala.zip4j.crypto.PBKDF2.PRF,byte[],int,int) -> PBKDF2
    141:146:int ceil(int,int) -> ceil
    152:166:void _F(byte[],int,net.lingala.zip4j.crypto.PBKDF2.PRF,byte[],int,int) -> _F
    170:174:void xor(byte[],byte[]) -> xor
    178:182:void INT(byte[],int,int) -> INT
    186:186:net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters getParameters() -> getParameters
    191:192:void setParameters(net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters) -> setParameters
    196:197:void setPseudoRandomFunction(net.lingala.zip4j.crypto.PBKDF2.PRF) -> setPseudoRandomFunction
net.lingala.zip4j.crypto.PBKDF2.PBKDF2HexFormatter -> net.lingala.zip4j.crypto.PBKDF2.PBKDF2HexFormatter:
    24:24:void <init>() -> <init>
    28:46:boolean fromString(net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters,java.lang.String) -> fromString
    51:54:java.lang.String toString(net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters) -> toString
net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters -> net.lingala.zip4j.crypto.PBKDF2.PBKDF2Parameters:
    byte[] salt -> salt
    int iterationCount -> iterationCount
    java.lang.String hashAlgorithm -> hashAlgorithm
    java.lang.String hashCharset -> hashCharset
    byte[] derivedKey -> derivedKey
    34:41:void <init>() -> <init>
    43:51:void <init>(java.lang.String,java.lang.String,byte[],int) -> <init>
    53:61:void <init>(java.lang.String,java.lang.String,byte[],int,byte[]) -> <init>
    65:65:int getIterationCount() -> getIterationCount
    70:71:void setIterationCount(int) -> setIterationCount
    75:75:byte[] getSalt() -> getSalt
    80:81:void setSalt(byte[]) -> setSalt
    85:85:byte[] getDerivedKey() -> getDerivedKey
    90:91:void setDerivedKey(byte[]) -> setDerivedKey
    95:95:java.lang.String getHashAlgorithm() -> getHashAlgorithm
    100:101:void setHashAlgorithm(java.lang.String) -> setHashAlgorithm
    105:105:java.lang.String getHashCharset() -> getHashCharset
    110:111:void setHashCharset(java.lang.String) -> setHashCharset
net.lingala.zip4j.crypto.PBKDF2.PRF -> net.lingala.zip4j.crypto.PBKDF2.PRF:
    void init(byte[]) -> init
    byte[] doFinal(byte[]) -> doFinal
    int getHLen() -> getHLen
net.lingala.zip4j.crypto.StandardDecrypter -> net.lingala.zip4j.crypto.StandardDecrypter:
    net.lingala.zip4j.model.FileHeader fileHeader -> fileHeader
    byte[] crc -> crc
    net.lingala.zip4j.crypto.engine.ZipCryptoEngine zipCryptoEngine -> zipCryptoEngine
    28:39:void <init>(net.lingala.zip4j.model.FileHeader,byte[]) -> <init>
    42:42:int decryptData(byte[]) -> decryptData
    46:59:int decryptData(byte[],int,int) -> decryptData
    64:95:void init(byte[]) -> init
net.lingala.zip4j.crypto.StandardEncrypter -> net.lingala.zip4j.crypto.StandardEncrypter:
    net.lingala.zip4j.crypto.engine.ZipCryptoEngine zipCryptoEngine -> zipCryptoEngine
    byte[] headerBytes -> headerBytes
    30:39:void <init>(char[],int) -> <init>
    42:58:void init(char[],int) -> init
    61:64:int encryptData(byte[]) -> encryptData
    69:79:int encryptData(byte[],int,int) -> encryptData
    84:86:byte encryptByte(byte) -> encryptByte
    91:126:byte[] generateRandomBytes(int) -> generateRandomBytes
    130:130:byte[] getHeaderBytes() -> getHeaderBytes
net.lingala.zip4j.crypto.engine.AESEngine -> net.lingala.zip4j.crypto.engine.AESEngine:
    int rounds -> rounds
    int[][] workingKey -> workingKey
    int C0 -> C0
    int C1 -> C1
    int C2 -> C2
    int C3 -> C3
    byte[] S -> S
    int[] rcon -> rcon
    int[] T0 -> T0
    27:289:void <clinit>() -> <clinit>
    30:35:void <init>(byte[]) -> <init>
    38:39:void init(byte[]) -> init
    42:77:int[][] generateWorkingKey(byte[]) -> generateWorkingKey
    81:81:int processBlock(byte[],byte[]) -> processBlock
    85:104:int processBlock(byte[],int,byte[],int) -> processBlock
    108:129:void stateIn(byte[],int) -> stateIn
    132:153:void stateOut(byte[],int) -> stateOut
    158:187:void encryptBlock(int[][]) -> encryptBlock
    190:190:int shift(int,int) -> shift
    194:194:int subWord(int) -> subWord
net.lingala.zip4j.crypto.engine.ZipCryptoEngine -> net.lingala.zip4j.crypto.engine.ZipCryptoEngine:
    int[] keys -> keys
    int[] CRC_TABLE -> CRC_TABLE
    19:34:void <clinit>() -> <clinit>
    21:39:void <init>() -> <init>
    42:48:void initKeys(char[]) -> initKeys
    51:55:void updateKeys(byte) -> updateKeys
    58:58:int crc32(int,byte) -> crc32
    62:63:byte decryptByte() -> decryptByte
net.lingala.zip4j.exception.ZipException -> net.lingala.zip4j.exception.ZipException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    23:26:void <init>() -> <init>
    23:30:void <init>(java.lang.String) -> <init>
    23:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    23:39:void <init>(java.lang.String,int) -> <init>
    23:44:void <init>(java.lang.String,java.lang.Throwable,int) -> <init>
    23:48:void <init>(java.lang.Throwable) -> <init>
    23:53:void <init>(java.lang.Throwable,int) -> <init>
    56:56:int getCode() -> getCode
net.lingala.zip4j.exception.ZipExceptionConstants -> net.lingala.zip4j.exception.ZipExceptionConstants:
    int inputZipParamIsNull -> inputZipParamIsNull
    int constuctorFileNotFoundException -> constuctorFileNotFoundException
    int randomAccessFileNull -> randomAccessFileNull
    int notZipFile -> notZipFile
    int WRONG_PASSWORD -> WRONG_PASSWORD
net.lingala.zip4j.io.BaseInputStream -> net.lingala.zip4j.io.BaseInputStream:
    8:8:void <init>() -> <init>
    11:11:int read() -> read
    15:15:void seek(long) -> seek
    18:18:int available() -> available
    22:22:net.lingala.zip4j.unzip.UnzipEngine getUnzipEngine() -> getUnzipEngine
net.lingala.zip4j.io.BaseOutputStream -> net.lingala.zip4j.io.BaseOutputStream:
    22:22:void <init>() -> <init>
    25:25:void write(int) -> write
net.lingala.zip4j.io.CipherOutputStream -> net.lingala.zip4j.io.CipherOutputStream:
    java.io.OutputStream outputStream -> outputStream
    java.io.File sourceFile -> sourceFile
    net.lingala.zip4j.model.FileHeader fileHeader -> fileHeader
    net.lingala.zip4j.model.LocalFileHeader localFileHeader -> localFileHeader
    net.lingala.zip4j.crypto.IEncrypter encrypter -> encrypter
    net.lingala.zip4j.model.ZipParameters zipParameters -> zipParameters
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    long totalBytesWritten -> totalBytesWritten
    java.util.zip.CRC32 crc -> crc
    long bytesWrittenForThisFile -> bytesWrittenForThisFile
    byte[] pendingBuffer -> pendingBuffer
    int pendingBufferLength -> pendingBufferLength
    long totalBytesRead -> totalBytesRead
    58:67:void <init>(java.io.OutputStream,net.lingala.zip4j.model.ZipModel) -> <init>
    70:163:void putNextEntry(java.io.File,net.lingala.zip4j.model.ZipParameters) -> putNextEntry
    166:182:void initEncrypter() -> initEncrypter
    185:211:void initZipModel(net.lingala.zip4j.model.ZipModel) -> initZipModel
    214:217:void write(int) -> write
    220:226:void write(byte[]) -> write
    229:256:void write(byte[],int,int) -> write
    259:269:void encryptAndWrite(byte[],int,int) -> encryptAndWrite
    273:324:void closeEntry() -> closeEntry
    327:331:void finish() -> finish
    334:336:void close() -> close
    339:450:void createFileHeader() -> createFileHeader
    453:470:void createLocalFileHeader() -> createLocalFileHeader
    479:501:int getFileAttributes(java.io.File) -> getFileAttributes
    508:524:int[] generateGeneralPurposeBitArray(boolean,int) -> generateGeneralPurposeBitArray
    529:550:net.lingala.zip4j.model.AESExtraDataRecord generateAESExtraDataRecord(net.lingala.zip4j.model.ZipParameters) -> generateAESExtraDataRecord
    554:559:void decrementCompressedFileSize(int) -> decrementCompressedFileSize
    562:565:void updateTotalBytesRead(int) -> updateTotalBytesRead
    568:569:void setSourceFile(java.io.File) -> setSourceFile
    572:572:java.io.File getSourceFile() -> getSourceFile
net.lingala.zip4j.io.DeflaterOutputStream -> net.lingala.zip4j.io.DeflaterOutputStream:
    byte[] buff -> buff
    java.util.zip.Deflater deflater -> deflater
    boolean firstBytesRead -> firstBytesRead
    37:41:void <init>(java.io.OutputStream,net.lingala.zip4j.model.ZipModel) -> <init>
    45:56:void putNextEntry(java.io.File,net.lingala.zip4j.model.ZipParameters) -> putNextEntry
    59:60:void write(byte[]) -> write
    63:80:void deflate() -> deflate
    83:86:void write(int) -> write
    89:97:void write(byte[],int,int) -> write
    100:110:void closeEntry() -> closeEntry
    113:114:void finish() -> finish
net.lingala.zip4j.io.InflaterInputStream -> net.lingala.zip4j.io.InflaterInputStream:
    java.util.zip.Inflater inflater -> inflater
    byte[] buff -> buff
    byte[] oneByteBuff -> oneByteBuff
    net.lingala.zip4j.unzip.UnzipEngine unzipEngine -> unzipEngine
    long bytesWritten -> bytesWritten
    long uncompressedSize -> uncompressedSize
    33:45:void <init>(java.io.RandomAccessFile,long,long,net.lingala.zip4j.unzip.UnzipEngine) -> <init>
    48:48:int read() -> read
    52:56:int read(byte[]) -> read
    61:94:int read(byte[],int,int) -> read
    99:104:void fill() -> fill
    114:131:long skip(long) -> skip
    136:137:void seek(long) -> seek
    150:150:int available() -> available
    154:156:void close() -> close
    159:159:net.lingala.zip4j.unzip.UnzipEngine getUnzipEngine() -> getUnzipEngine
net.lingala.zip4j.io.PartInputStream -> net.lingala.zip4j.io.PartInputStream:
    java.io.RandomAccessFile raf -> raf
    long bytesRead -> bytesRead
    long length -> length
    net.lingala.zip4j.unzip.UnzipEngine unzipEngine -> unzipEngine
    net.lingala.zip4j.crypto.IDecrypter decrypter -> decrypter
    byte[] oneByteBuff -> oneByteBuff
    byte[] aesBlockByte -> aesBlockByte
    int aesBytesReturned -> aesBytesReturned
    boolean isAESEncryptedFile -> isAESEncryptedFile
    int count -> count
    35:49:void <init>(java.io.RandomAccessFile,long,long,net.lingala.zip4j.unzip.UnzipEngine) -> <init>
    52:55:int available() -> available
    59:71:int read() -> read
    76:76:int read(byte[]) -> read
    80:123:int read(byte[],int,int) -> read
    127:150:void checkAndReadAESMacBytes() -> checkAndReadAESMacBytes
    153:158:long skip(long) -> skip
    162:163:void close() -> close
    166:167:void seek(long) -> seek
    170:170:net.lingala.zip4j.unzip.UnzipEngine getUnzipEngine() -> getUnzipEngine
net.lingala.zip4j.io.SplitOutputStream -> net.lingala.zip4j.io.SplitOutputStream:
    java.io.RandomAccessFile raf -> raf
    long splitLength -> splitLength
    java.io.File zipFile -> zipFile
    java.io.File outFile -> outFile
    int currSplitFileCounter -> currSplitFileCounter
    long bytesWrittenForThisPart -> bytesWrittenForThisPart
    40:42:void <init>(java.lang.String) -> <init>
    45:46:void <init>(java.io.File) -> <init>
    49:51:void <init>(java.lang.String,long) -> <init>
    53:63:void <init>(java.io.File,long) -> <init>
    66:69:void write(int) -> write
    72:73:void write(byte[]) -> write
    76:109:void write(byte[],int,int) -> write
    113:141:void startNextSplitFile() -> startNextSplitFile
    144:160:boolean isHeaderData(byte[]) -> isHeaderData
    171:185:boolean checkBuffSizeAndStartNextSplitFile(int) -> checkBuffSizeAndStartNextSplitFile
    196:204:boolean isBuffSizeFitForCurrSplitFile(int) -> isBuffSizeFitForCurrSplitFile
    209:210:void seek(long) -> seek
    213:215:void close() -> close
    218:218:void flush() -> flush
    221:221:long getFilePointer() -> getFilePointer
    225:225:boolean isSplitZipFile() -> isSplitZipFile
    229:229:long getSplitLength() -> getSplitLength
    233:233:int getCurrSplitFileCounter() -> getCurrSplitFileCounter
net.lingala.zip4j.io.ZipInputStream -> net.lingala.zip4j.io.ZipInputStream:
    net.lingala.zip4j.io.BaseInputStream is -> is
    28:30:void <init>(net.lingala.zip4j.io.BaseInputStream) -> <init>
    33:37:int read() -> read
    41:41:int read(byte[]) -> read
    45:49:int read(byte[],int,int) -> read
    60:61:void close() -> close
    72:79:void close(boolean) -> close
    82:82:int available() -> available
    86:86:long skip(long) -> skip
net.lingala.zip4j.io.ZipOutputStream -> net.lingala.zip4j.io.ZipOutputStream:
    11:12:void <init>(java.io.OutputStream) -> <init>
    15:16:void <init>(java.io.OutputStream,net.lingala.zip4j.model.ZipModel) -> <init>
    19:22:void write(int) -> write
    25:26:void write(byte[]) -> write
    29:32:void write(byte[],int,int) -> write
net.lingala.zip4j.model.AESExtraDataRecord -> net.lingala.zip4j.model.AESExtraDataRecord:
    long signature -> signature
    int dataSize -> dataSize
    int versionNumber -> versionNumber
    java.lang.String vendorID -> vendorID
    int aesStrength -> aesStrength
    int compressionMethod -> compressionMethod
    28:35:void <init>() -> <init>
    39:39:long getSignature() -> getSignature
    44:45:void setSignature(long) -> setSignature
    49:49:int getDataSize() -> getDataSize
    54:55:void setDataSize(int) -> setDataSize
    59:59:int getVersionNumber() -> getVersionNumber
    64:65:void setVersionNumber(int) -> setVersionNumber
    69:69:java.lang.String getVendorID() -> getVendorID
    74:75:void setVendorID(java.lang.String) -> setVendorID
    79:79:int getAesStrength() -> getAesStrength
    84:85:void setAesStrength(int) -> setAesStrength
    89:89:int getCompressionMethod() -> getCompressionMethod
    94:95:void setCompressionMethod(int) -> setCompressionMethod
net.lingala.zip4j.model.ArchiveExtraDataRecord -> net.lingala.zip4j.model.ArchiveExtraDataRecord:
    int signature -> signature
    int extraFieldLength -> extraFieldLength
    java.lang.String extraFieldData -> extraFieldData
    19:19:void <init>() -> <init>
    28:28:int getSignature() -> getSignature
    32:33:void setSignature(int) -> setSignature
    36:36:int getExtraFieldLength() -> getExtraFieldLength
    40:41:void setExtraFieldLength(int) -> setExtraFieldLength
    44:44:java.lang.String getExtraFieldData() -> getExtraFieldData
    48:49:void setExtraFieldData(java.lang.String) -> setExtraFieldData
net.lingala.zip4j.model.CentralDirectory -> net.lingala.zip4j.model.CentralDirectory:
    java.util.ArrayList fileHeaders -> fileHeaders
    net.lingala.zip4j.model.DigitalSignature digitalSignature -> digitalSignature
    21:21:void <init>() -> <init>
    28:28:java.util.ArrayList getFileHeaders() -> getFileHeaders
    32:33:void setFileHeaders(java.util.ArrayList) -> setFileHeaders
    36:36:net.lingala.zip4j.model.DigitalSignature getDigitalSignature() -> getDigitalSignature
    40:41:void setDigitalSignature(net.lingala.zip4j.model.DigitalSignature) -> setDigitalSignature
net.lingala.zip4j.model.DataDescriptor -> net.lingala.zip4j.model.DataDescriptor:
    java.lang.String crc32 -> crc32
    int compressedSize -> compressedSize
    int uncompressedSize -> uncompressedSize
    19:19:void <init>() -> <init>
    28:28:java.lang.String getCrc32() -> getCrc32
    32:33:void setCrc32(java.lang.String) -> setCrc32
    36:36:int getCompressedSize() -> getCompressedSize
    40:41:void setCompressedSize(int) -> setCompressedSize
    44:44:int getUncompressedSize() -> getUncompressedSize
    48:49:void setUncompressedSize(int) -> setUncompressedSize
net.lingala.zip4j.model.DigitalSignature -> net.lingala.zip4j.model.DigitalSignature:
    int headerSignature -> headerSignature
    int sizeOfData -> sizeOfData
    java.lang.String signatureData -> signatureData
    19:19:void <init>() -> <init>
    28:28:int getHeaderSignature() -> getHeaderSignature
    32:33:void setHeaderSignature(int) -> setHeaderSignature
    36:36:int getSizeOfData() -> getSizeOfData
    40:41:void setSizeOfData(int) -> setSizeOfData
    44:44:java.lang.String getSignatureData() -> getSignatureData
    48:49:void setSignatureData(java.lang.String) -> setSignatureData
net.lingala.zip4j.model.EndCentralDirRecord -> net.lingala.zip4j.model.EndCentralDirRecord:
    long signature -> signature
    int noOfThisDisk -> noOfThisDisk
    int noOfThisDiskStartOfCentralDir -> noOfThisDiskStartOfCentralDir
    int totNoOfEntriesInCentralDirOnThisDisk -> totNoOfEntriesInCentralDirOnThisDisk
    int totNoOfEntriesInCentralDir -> totNoOfEntriesInCentralDir
    int sizeOfCentralDir -> sizeOfCentralDir
    long offsetOfStartOfCentralDir -> offsetOfStartOfCentralDir
    int commentLength -> commentLength
    java.lang.String comment -> comment
    byte[] commentBytes -> commentBytes
    19:19:void <init>() -> <init>
    42:42:long getSignature() -> getSignature
    46:47:void setSignature(long) -> setSignature
    50:50:int getNoOfThisDisk() -> getNoOfThisDisk
    54:55:void setNoOfThisDisk(int) -> setNoOfThisDisk
    58:58:int getNoOfThisDiskStartOfCentralDir() -> getNoOfThisDiskStartOfCentralDir
    62:63:void setNoOfThisDiskStartOfCentralDir(int) -> setNoOfThisDiskStartOfCentralDir
    66:66:int getTotNoOfEntriesInCentralDirOnThisDisk() -> getTotNoOfEntriesInCentralDirOnThisDisk
    71:72:void setTotNoOfEntriesInCentralDirOnThisDisk(int) -> setTotNoOfEntriesInCentralDirOnThisDisk
    75:75:int getTotNoOfEntriesInCentralDir() -> getTotNoOfEntriesInCentralDir
    79:80:void setTotNoOfEntriesInCentralDir(int) -> setTotNoOfEntriesInCentralDir
    83:83:int getSizeOfCentralDir() -> getSizeOfCentralDir
    87:88:void setSizeOfCentralDir(int) -> setSizeOfCentralDir
    91:91:long getOffsetOfStartOfCentralDir() -> getOffsetOfStartOfCentralDir
    95:96:void setOffsetOfStartOfCentralDir(long) -> setOffsetOfStartOfCentralDir
    99:99:int getCommentLength() -> getCommentLength
    103:104:void setCommentLength(int) -> setCommentLength
    107:107:java.lang.String getComment() -> getComment
    111:112:void setComment(java.lang.String) -> setComment
    115:115:byte[] getCommentBytes() -> getCommentBytes
    119:120:void setCommentBytes(byte[]) -> setCommentBytes
net.lingala.zip4j.model.ExtraDataRecord -> net.lingala.zip4j.model.ExtraDataRecord:
    long header -> header
    int sizeOfData -> sizeOfData
    byte[] data -> data
    19:19:void <init>() -> <init>
    28:28:long getHeader() -> getHeader
    32:33:void setHeader(long) -> setHeader
    36:36:int getSizeOfData() -> getSizeOfData
    40:41:void setSizeOfData(int) -> setSizeOfData
    44:44:byte[] getData() -> getData
    48:49:void setData(byte[]) -> setData
net.lingala.zip4j.model.FileHeader -> net.lingala.zip4j.model.FileHeader:
    int signature -> signature
    int versionMadeBy -> versionMadeBy
    int versionNeededToExtract -> versionNeededToExtract
    byte[] generalPurposeFlag -> generalPurposeFlag
    int compressionMethod -> compressionMethod
    int lastModFileTime -> lastModFileTime
    long crc32 -> crc32
    byte[] crcBuff -> crcBuff
    long compressedSize -> compressedSize
    long uncompressedSize -> uncompressedSize
    int fileNameLength -> fileNameLength
    int extraFieldLength -> extraFieldLength
    int fileCommentLength -> fileCommentLength
    int diskNumberStart -> diskNumberStart
    byte[] internalFileAttr -> internalFileAttr
    byte[] externalFileAttr -> externalFileAttr
    long offsetLocalHeader -> offsetLocalHeader
    java.lang.String fileName -> fileName
    java.lang.String fileComment -> fileComment
    boolean isDirectory -> isDirectory
    boolean isEncrypted -> isEncrypted
    int encryptionMethod -> encryptionMethod
    char[] password -> password
    boolean dataDescriptorExists -> dataDescriptorExists
    net.lingala.zip4j.model.Zip64ExtendedInfo zip64ExtendedInfo -> zip64ExtendedInfo
    net.lingala.zip4j.model.AESExtraDataRecord aesExtraDataRecord -> aesExtraDataRecord
    java.util.ArrayList extraDataRecords -> extraDataRecords
    boolean fileNameUTF8Encoded -> fileNameUTF8Encoded
    84:88:void <init>() -> <init>
    91:91:int getSignature() -> getSignature
    95:96:void setSignature(int) -> setSignature
    99:99:int getVersionMadeBy() -> getVersionMadeBy
    103:104:void setVersionMadeBy(int) -> setVersionMadeBy
    107:107:int getVersionNeededToExtract() -> getVersionNeededToExtract
    111:112:void setVersionNeededToExtract(int) -> setVersionNeededToExtract
    115:115:byte[] getGeneralPurposeFlag() -> getGeneralPurposeFlag
    119:120:void setGeneralPurposeFlag(byte[]) -> setGeneralPurposeFlag
    123:123:int getCompressionMethod() -> getCompressionMethod
    127:128:void setCompressionMethod(int) -> setCompressionMethod
    131:131:int getLastModFileTime() -> getLastModFileTime
    135:136:void setLastModFileTime(int) -> setLastModFileTime
    139:139:long getCrc32() -> getCrc32
    143:144:void setCrc32(long) -> setCrc32
    147:147:long getCompressedSize() -> getCompressedSize
    151:152:void setCompressedSize(long) -> setCompressedSize
    155:155:long getUncompressedSize() -> getUncompressedSize
    159:160:void setUncompressedSize(long) -> setUncompressedSize
    163:163:int getFileNameLength() -> getFileNameLength
    167:168:void setFileNameLength(int) -> setFileNameLength
    171:171:int getExtraFieldLength() -> getExtraFieldLength
    175:176:void setExtraFieldLength(int) -> setExtraFieldLength
    179:179:int getFileCommentLength() -> getFileCommentLength
    183:184:void setFileCommentLength(int) -> setFileCommentLength
    187:187:int getDiskNumberStart() -> getDiskNumberStart
    191:192:void setDiskNumberStart(int) -> setDiskNumberStart
    195:195:byte[] getInternalFileAttr() -> getInternalFileAttr
    199:200:void setInternalFileAttr(byte[]) -> setInternalFileAttr
    203:203:byte[] getExternalFileAttr() -> getExternalFileAttr
    207:208:void setExternalFileAttr(byte[]) -> setExternalFileAttr
    211:211:long getOffsetLocalHeader() -> getOffsetLocalHeader
    215:216:void setOffsetLocalHeader(long) -> setOffsetLocalHeader
    219:219:java.lang.String getFileName() -> getFileName
    223:224:void setFileName(java.lang.String) -> setFileName
    227:227:java.lang.String getFileComment() -> getFileComment
    231:232:void setFileComment(java.lang.String) -> setFileComment
    235:235:boolean isDirectory() -> isDirectory
    239:240:void setDirectory(boolean) -> setDirectory
    250:251:void extractFile(net.lingala.zip4j.model.ZipModel,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> extractFile
    263:264:void extractFile(net.lingala.zip4j.model.ZipModel,java.lang.String,net.lingala.zip4j.model.UnzipParameters,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> extractFile
    280:293:void extractFile(net.lingala.zip4j.model.ZipModel,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> extractFile
    296:296:boolean isEncrypted() -> isEncrypted
    300:301:void setEncrypted(boolean) -> setEncrypted
    304:304:int getEncryptionMethod() -> getEncryptionMethod
    308:309:void setEncryptionMethod(int) -> setEncryptionMethod
    312:312:char[] getPassword() -> getPassword
    316:317:void setPassword(char[]) -> setPassword
    320:320:byte[] getCrcBuff() -> getCrcBuff
    324:325:void setCrcBuff(byte[]) -> setCrcBuff
    328:328:java.util.ArrayList getExtraDataRecords() -> getExtraDataRecords
    332:333:void setExtraDataRecords(java.util.ArrayList) -> setExtraDataRecords
    336:336:boolean isDataDescriptorExists() -> isDataDescriptorExists
    340:341:void setDataDescriptorExists(boolean) -> setDataDescriptorExists
    344:344:net.lingala.zip4j.model.Zip64ExtendedInfo getZip64ExtendedInfo() -> getZip64ExtendedInfo
    348:349:void setZip64ExtendedInfo(net.lingala.zip4j.model.Zip64ExtendedInfo) -> setZip64ExtendedInfo
    352:352:net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord() -> getAesExtraDataRecord
    356:357:void setAesExtraDataRecord(net.lingala.zip4j.model.AESExtraDataRecord) -> setAesExtraDataRecord
    360:360:boolean isFileNameUTF8Encoded() -> isFileNameUTF8Encoded
    364:365:void setFileNameUTF8Encoded(boolean) -> setFileNameUTF8Encoded
net.lingala.zip4j.model.LocalFileHeader -> net.lingala.zip4j.model.LocalFileHeader:
    int signature -> signature
    int versionNeededToExtract -> versionNeededToExtract
    byte[] generalPurposeFlag -> generalPurposeFlag
    int compressionMethod -> compressionMethod
    int lastModFileTime -> lastModFileTime
    long crc32 -> crc32
    byte[] crcBuff -> crcBuff
    long compressedSize -> compressedSize
    long uncompressedSize -> uncompressedSize
    int fileNameLength -> fileNameLength
    int extraFieldLength -> extraFieldLength
    java.lang.String fileName -> fileName
    byte[] extraField -> extraField
    long offsetStartOfData -> offsetStartOfData
    boolean isEncrypted -> isEncrypted
    int encryptionMethod -> encryptionMethod
    char[] password -> password
    java.util.ArrayList extraDataRecords -> extraDataRecords
    net.lingala.zip4j.model.Zip64ExtendedInfo zip64ExtendedInfo -> zip64ExtendedInfo
    net.lingala.zip4j.model.AESExtraDataRecord aesExtraDataRecord -> aesExtraDataRecord
    boolean dataDescriptorExists -> dataDescriptorExists
    boolean writeComprSizeInZip64ExtraRecord -> writeComprSizeInZip64ExtraRecord
    boolean fileNameUTF8Encoded -> fileNameUTF8Encoded
    69:74:void <init>() -> <init>
    77:77:int getSignature() -> getSignature
    81:82:void setSignature(int) -> setSignature
    85:85:int getVersionNeededToExtract() -> getVersionNeededToExtract
    89:90:void setVersionNeededToExtract(int) -> setVersionNeededToExtract
    93:93:byte[] getGeneralPurposeFlag() -> getGeneralPurposeFlag
    97:98:void setGeneralPurposeFlag(byte[]) -> setGeneralPurposeFlag
    101:101:int getCompressionMethod() -> getCompressionMethod
    105:106:void setCompressionMethod(int) -> setCompressionMethod
    109:109:int getLastModFileTime() -> getLastModFileTime
    113:114:void setLastModFileTime(int) -> setLastModFileTime
    117:117:long getCrc32() -> getCrc32
    121:122:void setCrc32(long) -> setCrc32
    125:125:long getCompressedSize() -> getCompressedSize
    129:130:void setCompressedSize(long) -> setCompressedSize
    133:133:long getUncompressedSize() -> getUncompressedSize
    137:138:void setUncompressedSize(long) -> setUncompressedSize
    141:141:int getFileNameLength() -> getFileNameLength
    145:146:void setFileNameLength(int) -> setFileNameLength
    149:149:int getExtraFieldLength() -> getExtraFieldLength
    153:154:void setExtraFieldLength(int) -> setExtraFieldLength
    157:157:java.lang.String getFileName() -> getFileName
    161:162:void setFileName(java.lang.String) -> setFileName
    165:165:byte[] getExtraField() -> getExtraField
    169:170:void setExtraField(byte[]) -> setExtraField
    173:173:long getOffsetStartOfData() -> getOffsetStartOfData
    177:178:void setOffsetStartOfData(long) -> setOffsetStartOfData
    181:181:boolean isEncrypted() -> isEncrypted
    185:186:void setEncrypted(boolean) -> setEncrypted
    189:189:int getEncryptionMethod() -> getEncryptionMethod
    193:194:void setEncryptionMethod(int) -> setEncryptionMethod
    197:197:byte[] getCrcBuff() -> getCrcBuff
    201:202:void setCrcBuff(byte[]) -> setCrcBuff
    205:205:char[] getPassword() -> getPassword
    209:210:void setPassword(char[]) -> setPassword
    213:213:java.util.ArrayList getExtraDataRecords() -> getExtraDataRecords
    217:218:void setExtraDataRecords(java.util.ArrayList) -> setExtraDataRecords
    221:221:boolean isDataDescriptorExists() -> isDataDescriptorExists
    225:226:void setDataDescriptorExists(boolean) -> setDataDescriptorExists
    229:229:net.lingala.zip4j.model.Zip64ExtendedInfo getZip64ExtendedInfo() -> getZip64ExtendedInfo
    233:234:void setZip64ExtendedInfo(net.lingala.zip4j.model.Zip64ExtendedInfo) -> setZip64ExtendedInfo
    237:237:net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord() -> getAesExtraDataRecord
    241:242:void setAesExtraDataRecord(net.lingala.zip4j.model.AESExtraDataRecord) -> setAesExtraDataRecord
    245:245:boolean isWriteComprSizeInZip64ExtraRecord() -> isWriteComprSizeInZip64ExtraRecord
    250:251:void setWriteComprSizeInZip64ExtraRecord(boolean) -> setWriteComprSizeInZip64ExtraRecord
    254:254:boolean isFileNameUTF8Encoded() -> isFileNameUTF8Encoded
    258:259:void setFileNameUTF8Encoded(boolean) -> setFileNameUTF8Encoded
net.lingala.zip4j.model.UnzipEngineParameters -> net.lingala.zip4j.model.UnzipEngineParameters:
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    net.lingala.zip4j.model.FileHeader fileHeader -> fileHeader
    net.lingala.zip4j.model.LocalFileHeader localFileHeader -> localFileHeader
    net.lingala.zip4j.crypto.IDecrypter iDecryptor -> iDecryptor
    java.io.FileOutputStream outputStream -> outputStream
    net.lingala.zip4j.unzip.UnzipEngine unzipEngine -> unzipEngine
    24:24:void <init>() -> <init>
    39:39:net.lingala.zip4j.model.ZipModel getZipModel() -> getZipModel
    43:44:void setZipModel(net.lingala.zip4j.model.ZipModel) -> setZipModel
    47:47:net.lingala.zip4j.model.FileHeader getFileHeader() -> getFileHeader
    51:52:void setFileHeader(net.lingala.zip4j.model.FileHeader) -> setFileHeader
    55:55:net.lingala.zip4j.model.LocalFileHeader getLocalFileHeader() -> getLocalFileHeader
    59:60:void setLocalFileHeader(net.lingala.zip4j.model.LocalFileHeader) -> setLocalFileHeader
    63:63:net.lingala.zip4j.crypto.IDecrypter getIDecryptor() -> getIDecryptor
    67:68:void setIDecryptor(net.lingala.zip4j.crypto.IDecrypter) -> setIDecryptor
    71:71:java.io.FileOutputStream getOutputStream() -> getOutputStream
    75:76:void setOutputStream(java.io.FileOutputStream) -> setOutputStream
    79:79:net.lingala.zip4j.unzip.UnzipEngine getUnzipEngine() -> getUnzipEngine
    83:84:void setUnzipEngine(net.lingala.zip4j.unzip.UnzipEngine) -> setUnzipEngine
net.lingala.zip4j.model.UnzipParameters -> net.lingala.zip4j.model.UnzipParameters:
    boolean ignoreReadOnlyFileAttribute -> ignoreReadOnlyFileAttribute
    boolean ignoreHiddenFileAttribute -> ignoreHiddenFileAttribute
    boolean ignoreArchiveFileAttribute -> ignoreArchiveFileAttribute
    boolean ignoreSystemFileAttribute -> ignoreSystemFileAttribute
    boolean ignoreAllFileAttributes -> ignoreAllFileAttributes
    boolean ignoreDateTimeAttributes -> ignoreDateTimeAttributes
    19:19:void <init>() -> <init>
    29:29:boolean isIgnoreReadOnlyFileAttribute() -> isIgnoreReadOnlyFileAttribute
    33:34:void setIgnoreReadOnlyFileAttribute(boolean) -> setIgnoreReadOnlyFileAttribute
    37:37:boolean isIgnoreHiddenFileAttribute() -> isIgnoreHiddenFileAttribute
    41:42:void setIgnoreHiddenFileAttribute(boolean) -> setIgnoreHiddenFileAttribute
    45:45:boolean isIgnoreArchiveFileAttribute() -> isIgnoreArchiveFileAttribute
    49:50:void setIgnoreArchiveFileAttribute(boolean) -> setIgnoreArchiveFileAttribute
    53:53:boolean isIgnoreSystemFileAttribute() -> isIgnoreSystemFileAttribute
    57:58:void setIgnoreSystemFileAttribute(boolean) -> setIgnoreSystemFileAttribute
    61:61:boolean isIgnoreAllFileAttributes() -> isIgnoreAllFileAttributes
    65:66:void setIgnoreAllFileAttributes(boolean) -> setIgnoreAllFileAttributes
    69:69:boolean isIgnoreDateTimeAttributes() -> isIgnoreDateTimeAttributes
    73:74:void setIgnoreDateTimeAttributes(boolean) -> setIgnoreDateTimeAttributes
net.lingala.zip4j.model.Zip64EndCentralDirLocator -> net.lingala.zip4j.model.Zip64EndCentralDirLocator:
    long signature -> signature
    int noOfDiskStartOfZip64EndOfCentralDirRec -> noOfDiskStartOfZip64EndOfCentralDirRec
    long offsetZip64EndOfCentralDirRec -> offsetZip64EndOfCentralDirRec
    int totNumberOfDiscs -> totNumberOfDiscs
    19:19:void <init>() -> <init>
    30:30:long getSignature() -> getSignature
    34:35:void setSignature(long) -> setSignature
    38:38:int getNoOfDiskStartOfZip64EndOfCentralDirRec() -> getNoOfDiskStartOfZip64EndOfCentralDirRec
    43:44:void setNoOfDiskStartOfZip64EndOfCentralDirRec(int) -> setNoOfDiskStartOfZip64EndOfCentralDirRec
    47:47:long getOffsetZip64EndOfCentralDirRec() -> getOffsetZip64EndOfCentralDirRec
    51:52:void setOffsetZip64EndOfCentralDirRec(long) -> setOffsetZip64EndOfCentralDirRec
    55:55:int getTotNumberOfDiscs() -> getTotNumberOfDiscs
    59:60:void setTotNumberOfDiscs(int) -> setTotNumberOfDiscs
net.lingala.zip4j.model.Zip64EndCentralDirRecord -> net.lingala.zip4j.model.Zip64EndCentralDirRecord:
    long signature -> signature
    long sizeOfZip64EndCentralDirRec -> sizeOfZip64EndCentralDirRec
    int versionMadeBy -> versionMadeBy
    int versionNeededToExtract -> versionNeededToExtract
    int noOfThisDisk -> noOfThisDisk
    int noOfThisDiskStartOfCentralDir -> noOfThisDiskStartOfCentralDir
    long totNoOfEntriesInCentralDirOnThisDisk -> totNoOfEntriesInCentralDirOnThisDisk
    long totNoOfEntriesInCentralDir -> totNoOfEntriesInCentralDir
    long sizeOfCentralDir -> sizeOfCentralDir
    long offsetStartCenDirWRTStartDiskNo -> offsetStartCenDirWRTStartDiskNo
    byte[] extensibleDataSector -> extensibleDataSector
    19:19:void <init>() -> <init>
    44:44:long getSignature() -> getSignature
    48:49:void setSignature(long) -> setSignature
    52:52:long getSizeOfZip64EndCentralDirRec() -> getSizeOfZip64EndCentralDirRec
    56:57:void setSizeOfZip64EndCentralDirRec(long) -> setSizeOfZip64EndCentralDirRec
    60:60:int getVersionMadeBy() -> getVersionMadeBy
    64:65:void setVersionMadeBy(int) -> setVersionMadeBy
    68:68:int getVersionNeededToExtract() -> getVersionNeededToExtract
    72:73:void setVersionNeededToExtract(int) -> setVersionNeededToExtract
    76:76:int getNoOfThisDisk() -> getNoOfThisDisk
    80:81:void setNoOfThisDisk(int) -> setNoOfThisDisk
    84:84:int getNoOfThisDiskStartOfCentralDir() -> getNoOfThisDiskStartOfCentralDir
    88:89:void setNoOfThisDiskStartOfCentralDir(int) -> setNoOfThisDiskStartOfCentralDir
    92:92:long getTotNoOfEntriesInCentralDirOnThisDisk() -> getTotNoOfEntriesInCentralDirOnThisDisk
    97:98:void setTotNoOfEntriesInCentralDirOnThisDisk(long) -> setTotNoOfEntriesInCentralDirOnThisDisk
    101:101:long getTotNoOfEntriesInCentralDir() -> getTotNoOfEntriesInCentralDir
    105:106:void setTotNoOfEntriesInCentralDir(long) -> setTotNoOfEntriesInCentralDir
    109:109:long getSizeOfCentralDir() -> getSizeOfCentralDir
    113:114:void setSizeOfCentralDir(long) -> setSizeOfCentralDir
    117:117:long getOffsetStartCenDirWRTStartDiskNo() -> getOffsetStartCenDirWRTStartDiskNo
    122:123:void setOffsetStartCenDirWRTStartDiskNo(long) -> setOffsetStartCenDirWRTStartDiskNo
    126:126:byte[] getExtensibleDataSector() -> getExtensibleDataSector
    130:131:void setExtensibleDataSector(byte[]) -> setExtensibleDataSector
net.lingala.zip4j.model.Zip64ExtendedInfo -> net.lingala.zip4j.model.Zip64ExtendedInfo:
    int header -> header
    int size -> size
    long compressedSize -> compressedSize
    long unCompressedSize -> unCompressedSize
    long offsetLocalHeader -> offsetLocalHeader
    int diskNumberStart -> diskNumberStart
    33:38:void <init>() -> <init>
    41:41:int getHeader() -> getHeader
    45:46:void setHeader(int) -> setHeader
    49:49:int getSize() -> getSize
    53:54:void setSize(int) -> setSize
    57:57:long getCompressedSize() -> getCompressedSize
    61:62:void setCompressedSize(long) -> setCompressedSize
    65:65:long getUnCompressedSize() -> getUnCompressedSize
    69:70:void setUnCompressedSize(long) -> setUnCompressedSize
    73:73:long getOffsetLocalHeader() -> getOffsetLocalHeader
    77:78:void setOffsetLocalHeader(long) -> setOffsetLocalHeader
    81:81:int getDiskNumberStart() -> getDiskNumberStart
    85:86:void setDiskNumberStart(int) -> setDiskNumberStart
net.lingala.zip4j.model.ZipModel -> net.lingala.zip4j.model.ZipModel:
    java.util.List localFileHeaderList -> localFileHeaderList
    java.util.List dataDescriptorList -> dataDescriptorList
    net.lingala.zip4j.model.ArchiveExtraDataRecord archiveExtraDataRecord -> archiveExtraDataRecord
    net.lingala.zip4j.model.CentralDirectory centralDirectory -> centralDirectory
    net.lingala.zip4j.model.EndCentralDirRecord endCentralDirRecord -> endCentralDirRecord
    net.lingala.zip4j.model.Zip64EndCentralDirLocator zip64EndCentralDirLocator -> zip64EndCentralDirLocator
    net.lingala.zip4j.model.Zip64EndCentralDirRecord zip64EndCentralDirRecord -> zip64EndCentralDirRecord
    boolean splitArchive -> splitArchive
    long splitLength -> splitLength
    java.lang.String zipFile -> zipFile
    boolean isZip64Format -> isZip64Format
    boolean isNestedZipFile -> isNestedZipFile
    long start -> start
    long end -> end
    java.lang.String fileNameCharset -> fileNameCharset
    53:55:void <init>() -> <init>
    58:58:java.util.List getLocalFileHeaderList() -> getLocalFileHeaderList
    62:63:void setLocalFileHeaderList(java.util.List) -> setLocalFileHeaderList
    66:66:java.util.List getDataDescriptorList() -> getDataDescriptorList
    70:71:void setDataDescriptorList(java.util.List) -> setDataDescriptorList
    74:74:net.lingala.zip4j.model.CentralDirectory getCentralDirectory() -> getCentralDirectory
    78:79:void setCentralDirectory(net.lingala.zip4j.model.CentralDirectory) -> setCentralDirectory
    82:82:net.lingala.zip4j.model.EndCentralDirRecord getEndCentralDirRecord() -> getEndCentralDirRecord
    86:87:void setEndCentralDirRecord(net.lingala.zip4j.model.EndCentralDirRecord) -> setEndCentralDirRecord
    90:90:net.lingala.zip4j.model.ArchiveExtraDataRecord getArchiveExtraDataRecord() -> getArchiveExtraDataRecord
    95:96:void setArchiveExtraDataRecord(net.lingala.zip4j.model.ArchiveExtraDataRecord) -> setArchiveExtraDataRecord
    99:99:boolean isSplitArchive() -> isSplitArchive
    103:104:void setSplitArchive(boolean) -> setSplitArchive
    107:107:java.lang.String getZipFile() -> getZipFile
    111:112:void setZipFile(java.lang.String) -> setZipFile
    115:115:net.lingala.zip4j.model.Zip64EndCentralDirLocator getZip64EndCentralDirLocator() -> getZip64EndCentralDirLocator
    120:121:void setZip64EndCentralDirLocator(net.lingala.zip4j.model.Zip64EndCentralDirLocator) -> setZip64EndCentralDirLocator
    124:124:net.lingala.zip4j.model.Zip64EndCentralDirRecord getZip64EndCentralDirRecord() -> getZip64EndCentralDirRecord
    129:130:void setZip64EndCentralDirRecord(net.lingala.zip4j.model.Zip64EndCentralDirRecord) -> setZip64EndCentralDirRecord
    133:133:boolean isZip64Format() -> isZip64Format
    137:138:void setZip64Format(boolean) -> setZip64Format
    141:141:boolean isNestedZipFile() -> isNestedZipFile
    145:146:void setNestedZipFile(boolean) -> setNestedZipFile
    149:149:long getStart() -> getStart
    153:154:void setStart(long) -> setStart
    157:157:long getEnd() -> getEnd
    161:162:void setEnd(long) -> setEnd
    165:165:long getSplitLength() -> getSplitLength
    169:170:void setSplitLength(long) -> setSplitLength
    173:173:java.lang.Object clone() -> clone
    177:177:java.lang.String getFileNameCharset() -> getFileNameCharset
    181:182:void setFileNameCharset(java.lang.String) -> setFileNameCharset
net.lingala.zip4j.model.ZipParameters -> net.lingala.zip4j.model.ZipParameters:
    int compressionMethod -> compressionMethod
    int compressionLevel -> compressionLevel
    boolean encryptFiles -> encryptFiles
    int encryptionMethod -> encryptionMethod
    boolean readHiddenFiles -> readHiddenFiles
    char[] password -> password
    int aesKeyStrength -> aesKeyStrength
    boolean includeRootFolder -> includeRootFolder
    java.lang.String rootFolderInZip -> rootFolderInZip
    java.util.TimeZone timeZone -> timeZone
    int sourceFileCRC -> sourceFileCRC
    java.lang.String defaultFolderPath -> defaultFolderPath
    java.lang.String fileNameInZip -> fileNameInZip
    boolean isSourceExternalStream -> isSourceExternalStream
    42:50:void <init>() -> <init>
    53:53:int getCompressionMethod() -> getCompressionMethod
    57:58:void setCompressionMethod(int) -> setCompressionMethod
    61:61:boolean isEncryptFiles() -> isEncryptFiles
    65:66:void setEncryptFiles(boolean) -> setEncryptFiles
    69:69:int getEncryptionMethod() -> getEncryptionMethod
    73:74:void setEncryptionMethod(int) -> setEncryptionMethod
    77:77:int getCompressionLevel() -> getCompressionLevel
    81:82:void setCompressionLevel(int) -> setCompressionLevel
    85:85:boolean isReadHiddenFiles() -> isReadHiddenFiles
    89:90:void setReadHiddenFiles(boolean) -> setReadHiddenFiles
    93:93:java.lang.Object clone() -> clone
    97:97:char[] getPassword() -> getPassword
    110:112:void setPassword(java.lang.String) -> setPassword
    115:116:void setPassword(char[]) -> setPassword
    119:119:int getAesKeyStrength() -> getAesKeyStrength
    123:124:void setAesKeyStrength(int) -> setAesKeyStrength
    127:127:boolean isIncludeRootFolder() -> isIncludeRootFolder
    131:132:void setIncludeRootFolder(boolean) -> setIncludeRootFolder
    135:135:java.lang.String getRootFolderInZip() -> getRootFolderInZip
    139:153:void setRootFolderInZip(java.lang.String) -> setRootFolderInZip
    156:156:java.util.TimeZone getTimeZone() -> getTimeZone
    160:161:void setTimeZone(java.util.TimeZone) -> setTimeZone
    164:164:int getSourceFileCRC() -> getSourceFileCRC
    168:169:void setSourceFileCRC(int) -> setSourceFileCRC
    172:172:java.lang.String getDefaultFolderPath() -> getDefaultFolderPath
    176:177:void setDefaultFolderPath(java.lang.String) -> setDefaultFolderPath
    180:180:java.lang.String getFileNameInZip() -> getFileNameInZip
    184:185:void setFileNameInZip(java.lang.String) -> setFileNameInZip
    188:188:boolean isSourceExternalStream() -> isSourceExternalStream
    192:193:void setSourceExternalStream(boolean) -> setSourceExternalStream
net.lingala.zip4j.progress.ProgressMonitor -> net.lingala.zip4j.progress.ProgressMonitor:
    int state -> state
    long totalWork -> totalWork
    long workCompleted -> workCompleted
    int percentDone -> percentDone
    int currentOperation -> currentOperation
    java.lang.String fileName -> fileName
    int result -> result
    java.lang.Throwable exception -> exception
    boolean cancelAllTasks -> cancelAllTasks
    boolean pause -> pause
    int STATE_READY -> STATE_READY
    int STATE_BUSY -> STATE_BUSY
    int RESULT_SUCCESS -> RESULT_SUCCESS
    int RESULT_WORKING -> RESULT_WORKING
    int RESULT_ERROR -> RESULT_ERROR
    int RESULT_CANCELLED -> RESULT_CANCELLED
    int OPERATION_NONE -> OPERATION_NONE
    int OPERATION_ADD -> OPERATION_ADD
    int OPERATION_EXTRACT -> OPERATION_EXTRACT
    int OPERATION_REMOVE -> OPERATION_REMOVE
    int OPERATION_CALC_CRC -> OPERATION_CALC_CRC
    int OPERATION_MERGE -> OPERATION_MERGE
    56:59:void <init>() -> <init>
    62:62:int getState() -> getState
    66:67:void setState(int) -> setState
    70:70:long getTotalWork() -> getTotalWork
    74:75:void setTotalWork(long) -> setTotalWork
    78:78:long getWorkCompleted() -> getWorkCompleted
    82:94:void updateWorkCompleted(long) -> updateWorkCompleted
    97:97:int getPercentDone() -> getPercentDone
    101:102:void setPercentDone(int) -> setPercentDone
    105:105:int getResult() -> getResult
    109:110:void setResult(int) -> setResult
    113:113:java.lang.String getFileName() -> getFileName
    117:118:void setFileName(java.lang.String) -> setFileName
    121:121:int getCurrentOperation() -> getCurrentOperation
    125:126:void setCurrentOperation(int) -> setCurrentOperation
    129:129:java.lang.Throwable getException() -> getException
    133:134:void setException(java.lang.Throwable) -> setException
    137:139:void endProgressMonitorSuccess() -> endProgressMonitorSuccess
    142:145:void endProgressMonitorError(java.lang.Throwable) -> endProgressMonitorError
    148:153:void reset() -> reset
    156:160:void fullReset() -> fullReset
    163:163:boolean isCancelAllTasks() -> isCancelAllTasks
    167:168:void cancelAllTasks() -> cancelAllTasks
    171:171:boolean isPause() -> isPause
    175:176:void setPause(boolean) -> setPause
net.lingala.zip4j.unzip.Unzip -> net.lingala.zip4j.unzip.Unzip:
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    36:43:void <init>(net.lingala.zip4j.model.ZipModel) -> <init>
    48:76:void extractAll(net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> extractAll
    81:90:void initExtractAll(java.util.ArrayList,net.lingala.zip4j.model.UnzipParameters,net.lingala.zip4j.progress.ProgressMonitor,java.lang.String) -> initExtractAll
    95:121:void extractFile(net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> extractFile
    126:173:void initExtractFile(net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor) -> initExtractFile
    176:177:net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader) -> getInputStream
    181:207:void checkOutputDirectoryStructure(net.lingala.zip4j.model.FileHeader,java.lang.String,java.lang.String) -> checkOutputDirectoryStructure
    211:228:long calculateTotalWork(java.util.ArrayList) -> calculateTotalWork
    78:78:void access$0(net.lingala.zip4j.unzip.Unzip,java.util.ArrayList,net.lingala.zip4j.model.UnzipParameters,net.lingala.zip4j.progress.ProgressMonitor,java.lang.String) -> access$0
    123:123:void access$1(net.lingala.zip4j.unzip.Unzip,net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor) -> access$1
net.lingala.zip4j.unzip.Unzip$1 -> net.lingala.zip4j.unzip.Unzip$1:
    net.lingala.zip4j.unzip.Unzip this$0 -> this$0
    java.util.ArrayList val$fileHeaders -> val$fileHeaders
    net.lingala.zip4j.model.UnzipParameters val$unzipParameters -> val$unzipParameters
    net.lingala.zip4j.progress.ProgressMonitor val$progressMonitor -> val$progressMonitor
    java.lang.String val$outPath -> val$outPath
    1:62:void <init>(net.lingala.zip4j.unzip.Unzip,java.lang.String,java.util.ArrayList,net.lingala.zip4j.model.UnzipParameters,net.lingala.zip4j.progress.ProgressMonitor,java.lang.String) -> <init>
    65:69:void run() -> run
net.lingala.zip4j.unzip.Unzip$2 -> net.lingala.zip4j.unzip.Unzip$2:
    net.lingala.zip4j.unzip.Unzip this$0 -> this$0
    net.lingala.zip4j.model.FileHeader val$fileHeader -> val$fileHeader
    java.lang.String val$outPath -> val$outPath
    net.lingala.zip4j.model.UnzipParameters val$unzipParameters -> val$unzipParameters
    java.lang.String val$newFileName -> val$newFileName
    net.lingala.zip4j.progress.ProgressMonitor val$progressMonitor -> val$progressMonitor
    1:106:void <init>(net.lingala.zip4j.unzip.Unzip,java.lang.String,net.lingala.zip4j.model.FileHeader,java.lang.String,net.lingala.zip4j.model.UnzipParameters,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor) -> <init>
    109:113:void run() -> run
net.lingala.zip4j.unzip.UnzipEngine -> net.lingala.zip4j.unzip.UnzipEngine:
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    net.lingala.zip4j.model.FileHeader fileHeader -> fileHeader
    int currSplitFileCounter -> currSplitFileCounter
    net.lingala.zip4j.model.LocalFileHeader localFileHeader -> localFileHeader
    net.lingala.zip4j.crypto.IDecrypter decrypter -> decrypter
    java.util.zip.CRC32 crc -> crc
    52:65:void <init>(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader) -> <init>
    69:102:void unzipFile(net.lingala.zip4j.progress.ProgressMonitor,java.lang.String,java.lang.String,net.lingala.zip4j.model.UnzipParameters) -> unzipFile
    105:173:net.lingala.zip4j.io.ZipInputStream getInputStream() -> getInputStream
    180:191:void init(java.io.RandomAccessFile) -> init
    194:207:void initDecrypter(java.io.RandomAccessFile) -> initDecrypter
    211:218:byte[] getStandardDecrypterHeaderBytes(java.io.RandomAccessFile) -> getStandardDecrypterHeaderBytes
    223:233:byte[] getAESSalt(java.io.RandomAccessFile) -> getAESSalt
    239:243:byte[] getAESPasswordVerifier(java.io.RandomAccessFile) -> getAESPasswordVerifier
    248:259:int calculateAESSaltLength(net.lingala.zip4j.model.AESExtraDataRecord) -> calculateAESSaltLength
    264:293:void checkCRC() -> checkCRC
    324:357:boolean checkLocalHeader() -> checkLocalHeader
    361:393:java.io.RandomAccessFile checkSplitFile() -> checkSplitFile
    397:412:java.io.RandomAccessFile createFileHandler(java.lang.String) -> createFileHandler
    417:435:java.io.FileOutputStream getOutputStream(java.lang.String,java.lang.String) -> getOutputStream
    440:446:java.lang.String getOutputFileNameWithPath(java.lang.String,java.lang.String) -> getOutputFileNameWithPath
    450:469:java.io.RandomAccessFile startNextSplitFile() -> startNextSplitFile
    474:494:void closeStreams(java.io.InputStream,java.io.OutputStream) -> closeStreams
    497:498:void updateCRC(int) -> updateCRC
    501:504:void updateCRC(byte[],int,int) -> updateCRC
    507:507:net.lingala.zip4j.model.FileHeader getFileHeader() -> getFileHeader
    511:511:net.lingala.zip4j.crypto.IDecrypter getDecrypter() -> getDecrypter
    515:515:net.lingala.zip4j.model.ZipModel getZipModel() -> getZipModel
    519:519:net.lingala.zip4j.model.LocalFileHeader getLocalFileHeader() -> getLocalFileHeader
net.lingala.zip4j.unzip.UnzipUtil -> net.lingala.zip4j.unzip.UnzipUtil:
    11:11:void <init>() -> <init>
    14:15:void applyFileAttributes(net.lingala.zip4j.model.FileHeader,java.io.File) -> applyFileAttributes
    20:48:void applyFileAttributes(net.lingala.zip4j.model.FileHeader,java.io.File,net.lingala.zip4j.model.UnzipParameters) -> applyFileAttributes
    52:101:void setFileAttributes(net.lingala.zip4j.model.FileHeader,java.io.File,boolean,boolean,boolean,boolean) -> setFileAttributes
    104:111:void setFileLastModifiedTime(net.lingala.zip4j.model.FileHeader,java.io.File) -> setFileLastModifiedTime
net.lingala.zip4j.util.ArchiveMaintainer -> net.lingala.zip4j.util.ArchiveMaintainer:
    42:43:void <init>() -> <init>
    48:63:java.util.HashMap removeZipFile(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> removeZipFile
    71:223:java.util.HashMap initRemoveZipFile(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader,net.lingala.zip4j.progress.ProgressMonitor) -> initRemoveZipFile
    227:236:void restoreFileName(java.io.File,java.lang.String) -> restoreFileName
    241:304:void copyFile(java.io.RandomAccessFile,java.io.OutputStream,long,long,net.lingala.zip4j.progress.ProgressMonitor) -> copyFile
    307:314:java.io.RandomAccessFile createFileHandler(net.lingala.zip4j.model.ZipModel,java.lang.String) -> createFileHandler
    325:338:void mergeSplitZipFiles(net.lingala.zip4j.model.ZipModel,java.io.File,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> mergeSplitZipFiles
    342:442:void initMergeSplitZipFile(net.lingala.zip4j.model.ZipModel,java.io.File,net.lingala.zip4j.progress.ProgressMonitor) -> initMergeSplitZipFile
    451:481:java.io.RandomAccessFile createSplitZipFileHandler(net.lingala.zip4j.model.ZipModel,int) -> createSplitZipFileHandler
    487:496:java.io.OutputStream prepareOutputStreamForMerge(java.io.File) -> prepareOutputStreamForMerge
    501:512:void updateSplitZipModel(net.lingala.zip4j.model.ZipModel,java.util.ArrayList,boolean) -> updateSplitZipModel
    517:543:void updateSplitFileHeader(net.lingala.zip4j.model.ZipModel,java.util.ArrayList,boolean) -> updateSplitFileHeader
    547:567:void updateSplitEndCentralDirectory(net.lingala.zip4j.model.ZipModel) -> updateSplitEndCentralDirectory
    570:588:void updateSplitZip64EndCentralDirLocator(net.lingala.zip4j.model.ZipModel,java.util.ArrayList) -> updateSplitZip64EndCentralDirLocator
    591:613:void updateSplitZip64EndCentralDirRec(net.lingala.zip4j.model.ZipModel,java.util.ArrayList) -> updateSplitZip64EndCentralDirRec
    616:674:void setComment(net.lingala.zip4j.model.ZipModel,java.lang.String) -> setComment
    678:686:void initProgressMonitorForRemoveOp(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader,net.lingala.zip4j.progress.ProgressMonitor) -> initProgressMonitorForRemoveOp
    689:689:long calculateTotalWorkForRemoveOp(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader) -> calculateTotalWorkForRemoveOp
    693:701:void initProgressMonitorForMergeOp(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.progress.ProgressMonitor) -> initProgressMonitorForMergeOp
    704:725:long calculateTotalWorkForMergeOp(net.lingala.zip4j.model.ZipModel) -> calculateTotalWorkForMergeOp
    340:340:void access$0(net.lingala.zip4j.util.ArchiveMaintainer,net.lingala.zip4j.model.ZipModel,java.io.File,net.lingala.zip4j.progress.ProgressMonitor) -> access$0
net.lingala.zip4j.util.ArchiveMaintainer$1 -> net.lingala.zip4j.util.ArchiveMaintainer$1:
    net.lingala.zip4j.util.ArchiveMaintainer this$0 -> this$0
    net.lingala.zip4j.model.ZipModel val$zipModel -> val$zipModel
    net.lingala.zip4j.model.FileHeader val$fileHeader -> val$fileHeader
    net.lingala.zip4j.progress.ProgressMonitor val$progressMonitor -> val$progressMonitor
    1:49:void <init>(net.lingala.zip4j.util.ArchiveMaintainer,java.lang.String,net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader,net.lingala.zip4j.progress.ProgressMonitor) -> <init>
    52:56:void run() -> run
net.lingala.zip4j.util.ArchiveMaintainer$2 -> net.lingala.zip4j.util.ArchiveMaintainer$2:
    net.lingala.zip4j.util.ArchiveMaintainer this$0 -> this$0
    net.lingala.zip4j.model.ZipModel val$zipModel -> val$zipModel
    java.io.File val$outputZipFile -> val$outputZipFile
    net.lingala.zip4j.progress.ProgressMonitor val$progressMonitor -> val$progressMonitor
    1:326:void <init>(net.lingala.zip4j.util.ArchiveMaintainer,java.lang.String,net.lingala.zip4j.model.ZipModel,java.io.File,net.lingala.zip4j.progress.ProgressMonitor) -> <init>
    329:332:void run() -> run
net.lingala.zip4j.util.CRCUtil -> net.lingala.zip4j.util.CRCUtil:
    int BUF_SIZE -> BUF_SIZE
    28:28:void <init>() -> <init>
    33:33:long computeFileCRC(java.lang.String) -> computeFileCRC
    44:83:long computeFileCRC(java.lang.String,net.lingala.zip4j.progress.ProgressMonitor) -> computeFileCRC
net.lingala.zip4j.util.InternalZipConstants -> net.lingala.zip4j.util.InternalZipConstants:
    long LOCSIG -> LOCSIG
    long EXTSIG -> EXTSIG
    long CENSIG -> CENSIG
    long ENDSIG -> ENDSIG
    long DIGSIG -> DIGSIG
    long ARCEXTDATREC -> ARCEXTDATREC
    long SPLITSIG -> SPLITSIG
    long ZIP64ENDCENDIRLOC -> ZIP64ENDCENDIRLOC
    long ZIP64ENDCENDIRREC -> ZIP64ENDCENDIRREC
    int EXTRAFIELDZIP64LENGTH -> EXTRAFIELDZIP64LENGTH
    int AESSIG -> AESSIG
    int LOCHDR -> LOCHDR
    int EXTHDR -> EXTHDR
    int CENHDR -> CENHDR
    int ENDHDR -> ENDHDR
    int LOCVER -> LOCVER
    int LOCFLG -> LOCFLG
    int LOCHOW -> LOCHOW
    int LOCTIM -> LOCTIM
    int LOCCRC -> LOCCRC
    int LOCSIZ -> LOCSIZ
    int LOCLEN -> LOCLEN
    int LOCNAM -> LOCNAM
    int LOCEXT -> LOCEXT
    int EXTCRC -> EXTCRC
    int EXTSIZ -> EXTSIZ
    int EXTLEN -> EXTLEN
    int CENVEM -> CENVEM
    int CENVER -> CENVER
    int CENFLG -> CENFLG
    int CENHOW -> CENHOW
    int CENTIM -> CENTIM
    int CENCRC -> CENCRC
    int CENSIZ -> CENSIZ
    int CENLEN -> CENLEN
    int CENNAM -> CENNAM
    int CENEXT -> CENEXT
    int CENCOM -> CENCOM
    int CENDSK -> CENDSK
    int CENATT -> CENATT
    int CENATX -> CENATX
    int CENOFF -> CENOFF
    int ENDSUB -> ENDSUB
    int ENDTOT -> ENDTOT
    int ENDSIZ -> ENDSIZ
    int ENDOFF -> ENDOFF
    int ENDCOM -> ENDCOM
    int STD_DEC_HDR_SIZE -> STD_DEC_HDR_SIZE
    int AES_AUTH_LENGTH -> AES_AUTH_LENGTH
    int AES_BLOCK_SIZE -> AES_BLOCK_SIZE
    int MIN_SPLIT_LENGTH -> MIN_SPLIT_LENGTH
    long ZIP_64_LIMIT -> ZIP_64_LIMIT
    java.lang.String OFFSET_CENTRAL_DIR -> OFFSET_CENTRAL_DIR
    java.lang.String VERSION -> VERSION
    int MODE_ZIP -> MODE_ZIP
    int MODE_UNZIP -> MODE_UNZIP
    java.lang.String WRITE_MODE -> WRITE_MODE
    java.lang.String READ_MODE -> READ_MODE
    int BUFF_SIZE -> BUFF_SIZE
    int FILE_MODE_NONE -> FILE_MODE_NONE
    int FILE_MODE_READ_ONLY -> FILE_MODE_READ_ONLY
    int FILE_MODE_HIDDEN -> FILE_MODE_HIDDEN
    int FILE_MODE_ARCHIVE -> FILE_MODE_ARCHIVE
    int FILE_MODE_READ_ONLY_HIDDEN -> FILE_MODE_READ_ONLY_HIDDEN
    int FILE_MODE_READ_ONLY_ARCHIVE -> FILE_MODE_READ_ONLY_ARCHIVE
    int FILE_MODE_HIDDEN_ARCHIVE -> FILE_MODE_HIDDEN_ARCHIVE
    int FILE_MODE_READ_ONLY_HIDDEN_ARCHIVE -> FILE_MODE_READ_ONLY_HIDDEN_ARCHIVE
    int FILE_MODE_SYSTEM -> FILE_MODE_SYSTEM
    int FOLDER_MODE_NONE -> FOLDER_MODE_NONE
    int FOLDER_MODE_HIDDEN -> FOLDER_MODE_HIDDEN
    int FOLDER_MODE_ARCHIVE -> FOLDER_MODE_ARCHIVE
    int FOLDER_MODE_HIDDEN_ARCHIVE -> FOLDER_MODE_HIDDEN_ARCHIVE
    int UPDATE_LFH_CRC -> UPDATE_LFH_CRC
    int UPDATE_LFH_COMP_SIZE -> UPDATE_LFH_COMP_SIZE
    int UPDATE_LFH_UNCOMP_SIZE -> UPDATE_LFH_UNCOMP_SIZE
    int LIST_TYPE_FILE -> LIST_TYPE_FILE
    int LIST_TYPE_STRING -> LIST_TYPE_STRING
    int UFT8_NAMES_FLAG -> UFT8_NAMES_FLAG
    java.lang.String CHARSET_UTF8 -> CHARSET_UTF8
    java.lang.String CHARSET_CP850 -> CHARSET_CP850
    java.lang.String CHARSET_COMMENTS_DEFAULT -> CHARSET_COMMENTS_DEFAULT
    java.lang.String CHARSET_DEFAULT -> CHARSET_DEFAULT
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String ZIP_FILE_SEPARATOR -> ZIP_FILE_SEPARATOR
    java.lang.String THREAD_NAME -> THREAD_NAME
    int MAX_ALLOWED_ZIP_COMMENT_LENGTH -> MAX_ALLOWED_ZIP_COMMENT_LENGTH
    19:167:void <clinit>() -> <clinit>
net.lingala.zip4j.util.Raw -> net.lingala.zip4j.util.Raw:
    24:24:void <init>() -> <init>
    27:43:long readLongLittleEndian(byte[],int) -> readLongLittleEndian
    48:53:int readLeInt(java.io.DataInput,byte[]) -> readLeInt
    57:57:int readShortLittleEndian(byte[],int) -> readShortLittleEndian
    61:65:short readShortBigEndian(byte[],int) -> readShortBigEndian
    69:70:int readIntLittleEndian(byte[],int) -> readIntLittleEndian
    74:79:byte[] toByteArray(int,int) -> toByteArray
    83:90:byte[] toByteArray(int) -> toByteArray
    95:98:void writeShortLittleEndian(byte[],int,short) -> writeShortLittleEndian
    101:106:void writeIntLittleEndian(byte[],int,int) -> writeIntLittleEndian
    109:117:void writeLongLittleEndian(byte[],int,long) -> writeLongLittleEndian
    120:137:byte bitArrayToByte(int[]) -> bitArrayToByte
    141:146:boolean checkBits(int[]) -> checkBits
    150:166:void prepareBuffAESIVBytes(byte[],int,int) -> prepareBuffAESIVBytes
    174:182:byte[] convertCharArrayToByteArray(char[]) -> convertCharArrayToByteArray
net.lingala.zip4j.util.Zip4jConstants -> net.lingala.zip4j.util.Zip4jConstants:
    int COMP_STORE -> COMP_STORE
    int COMP_DEFLATE -> COMP_DEFLATE
    int COMP_AES_ENC -> COMP_AES_ENC
    int DEFLATE_LEVEL_FASTEST -> DEFLATE_LEVEL_FASTEST
    int DEFLATE_LEVEL_FAST -> DEFLATE_LEVEL_FAST
    int DEFLATE_LEVEL_NORMAL -> DEFLATE_LEVEL_NORMAL
    int DEFLATE_LEVEL_MAXIMUM -> DEFLATE_LEVEL_MAXIMUM
    int DEFLATE_LEVEL_ULTRA -> DEFLATE_LEVEL_ULTRA
    int ENC_NO_ENCRYPTION -> ENC_NO_ENCRYPTION
    int ENC_METHOD_STANDARD -> ENC_METHOD_STANDARD
    int ENC_METHOD_AES -> ENC_METHOD_AES
    int AES_STRENGTH_128 -> AES_STRENGTH_128
    int AES_STRENGTH_192 -> AES_STRENGTH_192
    int AES_STRENGTH_256 -> AES_STRENGTH_256
net.lingala.zip4j.util.Zip4jUtil -> net.lingala.zip4j.util.Zip4jUtil:
    33:33:void <init>() -> <init>
    36:40:boolean isStringNotNullAndNotEmpty(java.lang.String) -> isStringNotNullAndNotEmpty
    44:82:boolean checkOutputFolder(java.lang.String) -> checkOutputFolder
    86:98:boolean checkFileReadAccess(java.lang.String) -> checkFileReadAccess
    103:115:boolean checkFileWriteAccess(java.lang.String) -> checkFileWriteAccess
    120:125:boolean checkFileExists(java.lang.String) -> checkFileExists
    129:132:boolean checkFileExists(java.io.File) -> checkFileExists
    136:137:boolean isWindows() -> isWindows
    141:148:void setFileReadOnly(java.io.File) -> setFileReadOnly
    151:167:void setFileHidden(java.io.File) -> setFileHidden
    170:191:void setFileArchive(java.io.File) -> setFileArchive
    194:210:void setFileSystemMode(java.io.File) -> setFileSystemMode
    213:221:long getLastModifiedFileTime(java.io.File,java.util.TimeZone) -> getLastModifiedFileTime
    225:233:java.lang.String getFileNameFromFilePath(java.io.File) -> getFileNameFromFilePath
    237:241:long getFileLengh(java.lang.String) -> getFileLengh
    245:253:long getFileLengh(java.io.File) -> getFileLengh
    263:272:long javaToDosTime(long) -> javaToDosTime
    281:291:long dosToJavaTme(int) -> dosToJavaTme
    295:316:net.lingala.zip4j.model.FileHeader getFileHeader(net.lingala.zip4j.model.ZipModel,java.lang.String) -> getFileHeader
    320:352:net.lingala.zip4j.model.FileHeader getFileHeaderWithExactMatch(net.lingala.zip4j.model.ZipModel,java.lang.String) -> getFileHeaderWithExactMatch
    358:391:int getIndexOfFileHeader(net.lingala.zip4j.model.ZipModel,net.lingala.zip4j.model.FileHeader) -> getIndexOfFileHeader
    397:420:java.util.ArrayList getFilesInDirectoryRec(java.io.File,boolean) -> getFilesInDirectoryRec
    424:435:java.lang.String getZipFileNameWithoutExt(java.lang.String) -> getZipFileNameWithoutExt
    440:454:byte[] convertCharset(java.lang.String) -> convertCharset
    468:475:java.lang.String decodeFileName(byte[],boolean) -> decodeFileName
    487:490:java.lang.String getCp850EncodedString(byte[]) -> getCp850EncodedString
    500:505:java.lang.String getAbsoluteFilePath(java.lang.String) -> getAbsoluteFilePath
    516:546:boolean checkArrayListTypes(java.util.ArrayList,int) -> checkArrayListTypes
    557:580:java.lang.String detectCharSet(java.lang.String) -> detectCharSet
    593:598:int getEncodedStringLength(java.lang.String) -> getEncodedStringLength
    609:633:int getEncodedStringLength(java.lang.String,java.lang.String) -> getEncodedStringLength
    643:653:boolean isSupportedCharset(java.lang.String) -> isSupportedCharset
    658:699:java.util.ArrayList getSplitZipFiles(net.lingala.zip4j.model.ZipModel) -> getSplitZipFiles
    703:753:java.lang.String getRelativeFileName(java.lang.String,java.lang.String,java.lang.String) -> getRelativeFileName
    757:771:long[] getAllHeaderSignatures() -> getAllHeaderSignatures
net.lingala.zip4j.zip.ZipEngine -> net.lingala.zip4j.zip.ZipEngine:
    net.lingala.zip4j.model.ZipModel zipModel -> zipModel
    46:53:void <init>(net.lingala.zip4j.model.ZipModel) -> <init>
    58:86:void addFiles(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> addFiles
    91:183:void initAddFiles(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor) -> initAddFiles
    186:235:void addStreamToZip(java.io.InputStream,net.lingala.zip4j.model.ZipParameters) -> addStreamToZip
    239:278:void addFolderToZip(java.io.File,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor,boolean) -> addFolderToZip
    283:312:void checkParameters(net.lingala.zip4j.model.ZipParameters) -> checkParameters
    327:403:void removeFilesIfExists(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor) -> removeFilesIfExists
    406:418:java.io.RandomAccessFile prepareFileOutputStream() -> prepareFileOutputStream
    423:429:net.lingala.zip4j.model.EndCentralDirRecord createEndOfCentralDirectoryRecord() -> createEndOfCentralDirectoryRecord
    433:463:long calculateTotalWork(java.util.ArrayList,net.lingala.zip4j.model.ZipParameters) -> calculateTotalWork
    88:88:void access$0(net.lingala.zip4j.zip.ZipEngine,java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor) -> access$0
net.lingala.zip4j.zip.ZipEngine$1 -> net.lingala.zip4j.zip.ZipEngine$1:
    net.lingala.zip4j.zip.ZipEngine this$0 -> this$0
    java.util.ArrayList val$fileList -> val$fileList
    net.lingala.zip4j.model.ZipParameters val$parameters -> val$parameters
    net.lingala.zip4j.progress.ProgressMonitor val$progressMonitor -> val$progressMonitor
    1:73:void <init>(net.lingala.zip4j.zip.ZipEngine,java.lang.String,java.util.ArrayList,net.lingala.zip4j.model.ZipParameters,net.lingala.zip4j.progress.ProgressMonitor) -> <init>
    76:79:void run() -> run
org.apache.commons.lang3.AnnotationUtils -> org.apache.commons.lang3.AnnotationUtils:
    org.apache.commons.lang3.builder.ToStringStyle TO_STRING_STYLE -> TO_STRING_STYLE
    107:108:void <init>() -> <init>
    123:152:boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation) -> equals
    168:184:int hashCode(java.lang.annotation.Annotation) -> hashCode
    196:209:java.lang.String toString(java.lang.annotation.Annotation) -> toString
    224:230:boolean isValidAnnotationMemberType(java.lang.Class) -> isValidAnnotationMemberType
    243:250:int hashMember(java.lang.String,java.lang.Object) -> hashMember
    264:276:boolean memberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> memberEquals
    288:315:boolean arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object) -> arrayMemberEquals
    326:334:boolean annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]) -> annotationArrayMemberEquals
    345:369:int arrayMemberHash(java.lang.Class,java.lang.Object) -> arrayMemberHash
    51:51:void <clinit>() -> <clinit>
org.apache.commons.lang3.AnnotationUtils$1 -> org.apache.commons.lang3.AnnotationUtils$1:
    long serialVersionUID -> serialVersionUID
    56:91:void <init>() -> <init>
    73:83:java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    92:96:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
org.apache.commons.lang3.ArrayUtils -> org.apache.commons.lang3.ArrayUtils:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> EMPTY_OBJECT_ARRAY
    java.lang.Class[] EMPTY_CLASS_ARRAY -> EMPTY_CLASS_ARRAY
    java.lang.String[] EMPTY_STRING_ARRAY -> EMPTY_STRING_ARRAY
    long[] EMPTY_LONG_ARRAY -> EMPTY_LONG_ARRAY
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> EMPTY_LONG_OBJECT_ARRAY
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> EMPTY_INTEGER_OBJECT_ARRAY
    short[] EMPTY_SHORT_ARRAY -> EMPTY_SHORT_ARRAY
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> EMPTY_SHORT_OBJECT_ARRAY
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> EMPTY_BYTE_OBJECT_ARRAY
    double[] EMPTY_DOUBLE_ARRAY -> EMPTY_DOUBLE_ARRAY
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> EMPTY_DOUBLE_OBJECT_ARRAY
    float[] EMPTY_FLOAT_ARRAY -> EMPTY_FLOAT_ARRAY
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> EMPTY_FLOAT_OBJECT_ARRAY
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> EMPTY_BOOLEAN_OBJECT_ARRAY
    char[] EMPTY_CHAR_ARRAY -> EMPTY_CHAR_ARRAY
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> EMPTY_CHARACTER_OBJECT_ARRAY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    135:136:void <init>() -> <init>
    156:156:java.lang.String toString(java.lang.Object) -> toString
    172:175:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    187:187:int hashCode(java.lang.Object) -> hashCode
    201:201:boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    232:255:java.util.Map toMap(java.lang.Object[]) -> toMap
    298:298:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    317:320:java.lang.Object[] clone(java.lang.Object[]) -> clone
    333:336:long[] clone(long[]) -> clone
    349:352:int[] clone(int[]) -> clone
    365:368:short[] clone(short[]) -> clone
    381:384:char[] clone(char[]) -> clone
    397:400:byte[] clone(byte[]) -> clone
    413:416:double[] clone(double[]) -> clone
    429:432:float[] clone(float[]) -> clone
    445:448:boolean[] clone(boolean[]) -> clone
    467:470:java.lang.Object[] nullToEmpty(java.lang.Object[]) -> nullToEmpty
    487:490:java.lang.String[] nullToEmpty(java.lang.String[]) -> nullToEmpty
    507:510:long[] nullToEmpty(long[]) -> nullToEmpty
    527:530:int[] nullToEmpty(int[]) -> nullToEmpty
    547:550:short[] nullToEmpty(short[]) -> nullToEmpty
    567:570:char[] nullToEmpty(char[]) -> nullToEmpty
    587:590:byte[] nullToEmpty(byte[]) -> nullToEmpty
    607:610:double[] nullToEmpty(double[]) -> nullToEmpty
    627:630:float[] nullToEmpty(float[]) -> nullToEmpty
    647:650:boolean[] nullToEmpty(boolean[]) -> nullToEmpty
    667:670:java.lang.Long[] nullToEmpty(java.lang.Long[]) -> nullToEmpty
    687:690:java.lang.Integer[] nullToEmpty(java.lang.Integer[]) -> nullToEmpty
    707:710:java.lang.Short[] nullToEmpty(java.lang.Short[]) -> nullToEmpty
    727:730:java.lang.Character[] nullToEmpty(java.lang.Character[]) -> nullToEmpty
    747:750:java.lang.Byte[] nullToEmpty(java.lang.Byte[]) -> nullToEmpty
    767:770:java.lang.Double[] nullToEmpty(java.lang.Double[]) -> nullToEmpty
    787:790:java.lang.Float[] nullToEmpty(java.lang.Float[]) -> nullToEmpty
    807:810:java.lang.Boolean[] nullToEmpty(java.lang.Boolean[]) -> nullToEmpty
    844:863:java.lang.Object[] subarray(java.lang.Object[],int,int) -> subarray
    886:902:long[] subarray(long[],int,int) -> subarray
    925:941:int[] subarray(int[],int,int) -> subarray
    964:980:short[] subarray(short[],int,int) -> subarray
    1003:1019:char[] subarray(char[],int,int) -> subarray
    1042:1058:byte[] subarray(byte[],int,int) -> subarray
    1081:1097:double[] subarray(double[],int,int) -> subarray
    1120:1136:float[] subarray(float[],int,int) -> subarray
    1159:1175:boolean[] subarray(boolean[],int,int) -> subarray
    1192:1197:boolean isSameLength(java.lang.Object[],java.lang.Object[]) -> isSameLength
    1210:1215:boolean isSameLength(long[],long[]) -> isSameLength
    1228:1233:boolean isSameLength(int[],int[]) -> isSameLength
    1246:1251:boolean isSameLength(short[],short[]) -> isSameLength
    1264:1269:boolean isSameLength(char[],char[]) -> isSameLength
    1282:1287:boolean isSameLength(byte[],byte[]) -> isSameLength
    1300:1305:boolean isSameLength(double[],double[]) -> isSameLength
    1318:1323:boolean isSameLength(float[],float[]) -> isSameLength
    1336:1341:boolean isSameLength(boolean[],boolean[]) -> isSameLength
    1366:1369:int getLength(java.lang.Object) -> getLength
    1382:1385:boolean isSameType(java.lang.Object,java.lang.Object) -> isSameType
    1400:1413:void reverse(java.lang.Object[]) -> reverse
    1423:1436:void reverse(long[]) -> reverse
    1446:1459:void reverse(int[]) -> reverse
    1469:1482:void reverse(short[]) -> reverse
    1492:1505:void reverse(char[]) -> reverse
    1515:1528:void reverse(byte[]) -> reverse
    1538:1551:void reverse(double[]) -> reverse
    1561:1574:void reverse(float[]) -> reverse
    1584:1597:void reverse(boolean[]) -> reverse
    1615:1615:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    1633:1652:int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
    1666:1666:int lastIndexOf(java.lang.Object[],java.lang.Object) -> lastIndexOf
    1684:1705:int lastIndexOf(java.lang.Object[],java.lang.Object,int) -> lastIndexOf
    1718:1718:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    1734:1734:int indexOf(long[],long) -> indexOf
    1752:1763:int indexOf(long[],long,int) -> indexOf
    1777:1777:int lastIndexOf(long[],long) -> lastIndexOf
    1795:1808:int lastIndexOf(long[],long,int) -> lastIndexOf
    1821:1821:boolean contains(long[],long) -> contains
    1837:1837:int indexOf(int[],int) -> indexOf
    1855:1866:int indexOf(int[],int,int) -> indexOf
    1880:1880:int lastIndexOf(int[],int) -> lastIndexOf
    1898:1911:int lastIndexOf(int[],int,int) -> lastIndexOf
    1924:1924:boolean contains(int[],int) -> contains
    1940:1940:int indexOf(short[],short) -> indexOf
    1958:1969:int indexOf(short[],short,int) -> indexOf
    1983:1983:int lastIndexOf(short[],short) -> lastIndexOf
    2001:2014:int lastIndexOf(short[],short,int) -> lastIndexOf
    2027:2027:boolean contains(short[],short) -> contains
    2044:2044:int indexOf(char[],char) -> indexOf
    2063:2074:int indexOf(char[],char,int) -> indexOf
    2089:2089:int lastIndexOf(char[],char) -> lastIndexOf
    2108:2121:int lastIndexOf(char[],char,int) -> lastIndexOf
    2135:2135:boolean contains(char[],char) -> contains
    2151:2151:int indexOf(byte[],byte) -> indexOf
    2169:2180:int indexOf(byte[],byte,int) -> indexOf
    2194:2194:int lastIndexOf(byte[],byte) -> lastIndexOf
    2212:2225:int lastIndexOf(byte[],byte,int) -> lastIndexOf
    2238:2238:boolean contains(byte[],byte) -> contains
    2254:2254:int indexOf(double[],double) -> indexOf
    2271:2271:int indexOf(double[],double,double) -> indexOf
    2289:2300:int indexOf(double[],double,int) -> indexOf
    2321:2334:int indexOf(double[],double,int,double) -> indexOf
    2348:2348:int lastIndexOf(double[],double) -> lastIndexOf
    2365:2365:int lastIndexOf(double[],double,double) -> lastIndexOf
    2383:2396:int lastIndexOf(double[],double,int) -> lastIndexOf
    2417:2432:int lastIndexOf(double[],double,int,double) -> lastIndexOf
    2445:2445:boolean contains(double[],double) -> contains
    2462:2462:boolean contains(double[],double,double) -> contains
    2478:2478:int indexOf(float[],float) -> indexOf
    2496:2507:int indexOf(float[],float,int) -> indexOf
    2521:2521:int lastIndexOf(float[],float) -> lastIndexOf
    2539:2552:int lastIndexOf(float[],float,int) -> lastIndexOf
    2565:2565:boolean contains(float[],float) -> contains
    2581:2581:int indexOf(boolean[],boolean) -> indexOf
    2600:2611:int indexOf(boolean[],boolean,int) -> indexOf
    2626:2626:int lastIndexOf(boolean[],boolean) -> lastIndexOf
    2644:2657:int lastIndexOf(boolean[],boolean,int) -> lastIndexOf
    2670:2670:boolean contains(boolean[],boolean) -> contains
    2688:2697:char[] toPrimitive(java.lang.Character[]) -> toPrimitive
    2710:2720:char[] toPrimitive(java.lang.Character[],char) -> toPrimitive
    2732:2741:java.lang.Character[] toObject(char[]) -> toObject
    2756:2765:long[] toPrimitive(java.lang.Long[]) -> toPrimitive
    2778:2788:long[] toPrimitive(java.lang.Long[],long) -> toPrimitive
    2800:2809:java.lang.Long[] toObject(long[]) -> toObject
    2824:2833:int[] toPrimitive(java.lang.Integer[]) -> toPrimitive
    2846:2856:int[] toPrimitive(java.lang.Integer[],int) -> toPrimitive
    2868:2877:java.lang.Integer[] toObject(int[]) -> toObject
    2892:2901:short[] toPrimitive(java.lang.Short[]) -> toPrimitive
    2914:2924:short[] toPrimitive(java.lang.Short[],short) -> toPrimitive
    2936:2945:java.lang.Short[] toObject(short[]) -> toObject
    2960:2969:byte[] toPrimitive(java.lang.Byte[]) -> toPrimitive
    2982:2992:byte[] toPrimitive(java.lang.Byte[],byte) -> toPrimitive
    3004:3013:java.lang.Byte[] toObject(byte[]) -> toObject
    3028:3037:double[] toPrimitive(java.lang.Double[]) -> toPrimitive
    3050:3060:double[] toPrimitive(java.lang.Double[],double) -> toPrimitive
    3072:3081:java.lang.Double[] toObject(double[]) -> toObject
    3096:3105:float[] toPrimitive(java.lang.Float[]) -> toPrimitive
    3118:3128:float[] toPrimitive(java.lang.Float[],float) -> toPrimitive
    3140:3149:java.lang.Float[] toObject(float[]) -> toObject
    3164:3173:boolean[] toPrimitive(java.lang.Boolean[]) -> toPrimitive
    3186:3196:boolean[] toPrimitive(java.lang.Boolean[],boolean) -> toPrimitive
    3208:3217:java.lang.Boolean[] toObject(boolean[]) -> toObject
    3229:3229:boolean isEmpty(java.lang.Object[]) -> isEmpty
    3240:3240:boolean isEmpty(long[]) -> isEmpty
    3251:3251:boolean isEmpty(int[]) -> isEmpty
    3262:3262:boolean isEmpty(short[]) -> isEmpty
    3273:3273:boolean isEmpty(char[]) -> isEmpty
    3284:3284:boolean isEmpty(byte[]) -> isEmpty
    3295:3295:boolean isEmpty(double[]) -> isEmpty
    3306:3306:boolean isEmpty(float[]) -> isEmpty
    3317:3317:boolean isEmpty(boolean[]) -> isEmpty
    3330:3330:boolean isNotEmpty(java.lang.Object[]) -> isNotEmpty
    3341:3341:boolean isNotEmpty(long[]) -> isNotEmpty
    3352:3352:boolean isNotEmpty(int[]) -> isNotEmpty
    3363:3363:boolean isNotEmpty(short[]) -> isNotEmpty
    3374:3374:boolean isNotEmpty(char[]) -> isNotEmpty
    3385:3385:boolean isNotEmpty(byte[]) -> isNotEmpty
    3396:3396:boolean isNotEmpty(double[]) -> isNotEmpty
    3407:3407:boolean isNotEmpty(float[]) -> isNotEmpty
    3418:3418:boolean isNotEmpty(boolean[]) -> isNotEmpty
    3446:3471:java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    3492:3500:boolean[] addAll(boolean[],boolean[]) -> addAll
    3521:3529:char[] addAll(char[],char[]) -> addAll
    3550:3558:byte[] addAll(byte[],byte[]) -> addAll
    3579:3587:short[] addAll(short[],short[]) -> addAll
    3608:3616:int[] addAll(int[],int[]) -> addAll
    3637:3645:long[] addAll(long[],long[]) -> addAll
    3666:3674:float[] addAll(float[],float[]) -> addAll
    3695:3703:double[] addAll(double[],double[]) -> addAll
    3737:3747:java.lang.Object[] add(java.lang.Object[],java.lang.Object) -> add
    3772:3774:boolean[] add(boolean[],boolean) -> add
    3799:3801:byte[] add(byte[],byte) -> add
    3826:3828:char[] add(char[],char) -> add
    3853:3855:double[] add(double[],double) -> add
    3880:3882:float[] add(float[],float) -> add
    3907:3909:int[] add(int[],int) -> add
    3934:3936:long[] add(long[],long) -> add
    3961:3963:short[] add(short[],short) -> add
    3976:3982:java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class) -> copyArrayGrow1
    4016:4026:java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    4057:4057:boolean[] add(boolean[],int,boolean) -> add
    4089:4089:char[] add(char[],int,char) -> add
    4120:4120:byte[] add(byte[],int,byte) -> add
    4151:4151:short[] add(short[],int,short) -> add
    4182:4182:int[] add(int[],int,int) -> add
    4213:4213:long[] add(long[],int,long) -> add
    4244:4244:float[] add(float[],int,float) -> add
    4275:4275:double[] add(double[],int,double) -> add
    4290:4308:java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class) -> add
    4342:4342:java.lang.Object[] remove(java.lang.Object[],int) -> remove
    4372:4376:java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object) -> removeElement
    4408:4408:boolean[] remove(boolean[],int) -> remove
    4437:4441:boolean[] removeElement(boolean[],boolean) -> removeElement
    4473:4473:byte[] remove(byte[],int) -> remove
    4502:4506:byte[] removeElement(byte[],byte) -> removeElement
    4538:4538:char[] remove(char[],int) -> remove
    4567:4571:char[] removeElement(char[],char) -> removeElement
    4603:4603:double[] remove(double[],int) -> remove
    4632:4636:double[] removeElement(double[],double) -> removeElement
    4668:4668:float[] remove(float[],int) -> remove
    4697:4701:float[] removeElement(float[],float) -> removeElement
    4733:4733:int[] remove(int[],int) -> remove
    4762:4766:int[] removeElement(int[],int) -> removeElement
    4798:4798:long[] remove(long[],int) -> remove
    4827:4831:long[] removeElement(long[],long) -> removeElement
    4863:4863:short[] remove(short[],int) -> remove
    4892:4896:short[] removeElement(short[],short) -> removeElement
    4921:4932:java.lang.Object remove(java.lang.Object,int) -> remove
    46:118:void <clinit>() -> <clinit>
org.apache.commons.lang3.BitField -> org.apache.commons.lang3.BitField:
    int _mask -> _mask
    int _shift_count -> _shift_count
    37:49:void <init>(int) -> <init>
    66:66:int getValue(int) -> getValue
    84:84:short getShortValue(short) -> getShortValue
    95:95:int getRawValue(int) -> getRawValue
    106:106:short getShortRawValue(short) -> getShortRawValue
    123:123:boolean isSet(int) -> isSet
    139:139:boolean isAllSet(int) -> isAllSet
    153:153:int setValue(int,int) -> setValue
    167:167:short setShortValue(short,short) -> setShortValue
    179:179:int clear(int) -> clear
    191:191:short clearShort(short) -> clearShort
    204:204:byte clearByte(byte) -> clearByte
    216:216:int set(int) -> set
    228:228:short setShort(short) -> setShort
    241:241:byte setByte(byte) -> setByte
    254:254:int setBoolean(int,boolean) -> setBoolean
    267:267:short setShortBoolean(short,boolean) -> setShortBoolean
    280:280:byte setByteBoolean(byte,boolean) -> setByteBoolean
org.apache.commons.lang3.BooleanUtils -> org.apache.commons.lang3.BooleanUtils:
    42:43:void <init>() -> <init>
    64:67:java.lang.Boolean negate(java.lang.Boolean) -> negate
    87:87:boolean isTrue(java.lang.Boolean) -> isTrue
    105:105:boolean isNotTrue(java.lang.Boolean) -> isNotTrue
    123:123:boolean isFalse(java.lang.Boolean) -> isFalse
    141:141:boolean isNotFalse(java.lang.Boolean) -> isNotFalse
    159:159:boolean toBoolean(java.lang.Boolean) -> toBoolean
    176:179:boolean toBooleanDefaultIfNull(java.lang.Boolean,boolean) -> toBooleanDefaultIfNull
    199:199:boolean toBoolean(int) -> toBoolean
    217:217:java.lang.Boolean toBooleanObject(int) -> toBooleanObject
    239:242:java.lang.Boolean toBooleanObject(java.lang.Integer) -> toBooleanObject
    262:269:boolean toBoolean(int,int,int) -> toBoolean
    290:303:boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBoolean
    325:335:java.lang.Boolean toBooleanObject(int,int,int,int) -> toBooleanObject
    357:375:java.lang.Boolean toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toBooleanObject
    393:393:int toInteger(boolean) -> toInteger
    409:409:java.lang.Integer toIntegerObject(boolean) -> toIntegerObject
    427:430:java.lang.Integer toIntegerObject(java.lang.Boolean) -> toIntegerObject
    447:447:int toInteger(boolean,int,int) -> toInteger
    466:469:int toInteger(java.lang.Boolean,int,int,int) -> toInteger
    486:486:java.lang.Integer toIntegerObject(boolean,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    505:508:java.lang.Integer toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> toIntegerObject
    545:623:java.lang.Boolean toBooleanObject(java.lang.String) -> toBooleanObject
    646:664:java.lang.Boolean toBooleanObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toBooleanObject
    695:695:boolean toBoolean(java.lang.String) -> toBoolean
    713:725:boolean toBoolean(java.lang.String,java.lang.String,java.lang.String) -> toBoolean
    744:744:java.lang.String toStringTrueFalse(java.lang.Boolean) -> toStringTrueFalse
    761:761:java.lang.String toStringOnOff(java.lang.Boolean) -> toStringOnOff
    778:778:java.lang.String toStringYesNo(java.lang.Boolean) -> toStringYesNo
    797:800:java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String) -> toString
    818:818:java.lang.String toStringTrueFalse(boolean) -> toStringTrueFalse
    834:834:java.lang.String toStringOnOff(boolean) -> toStringOnOff
    850:850:java.lang.String toStringYesNo(boolean) -> toStringYesNo
    867:867:java.lang.String toString(boolean,java.lang.String,java.lang.String) -> toString
    888:910:boolean xor(boolean[]) -> xor
    929:941:java.lang.Boolean xor(java.lang.Boolean[]) -> xor
org.apache.commons.lang3.CharEncoding -> org.apache.commons.lang3.CharEncoding:
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String UTF_16 -> UTF_16
    java.lang.String UTF_16BE -> UTF_16BE
    java.lang.String UTF_16LE -> UTF_16LE
    java.lang.String UTF_8 -> UTF_8
    37:37:void <init>() -> <init>
    95:101:boolean isSupported(java.lang.String) -> isSupported
org.apache.commons.lang3.CharRange -> org.apache.commons.lang3.CharRange:
    long serialVersionUID -> serialVersionUID
    char start -> start
    char end -> end
    boolean negated -> negated
    java.lang.String iToString -> iToString
    68:78:void <init>(char,char,boolean) -> <init>
    89:89:org.apache.commons.lang3.CharRange is(char) -> is
    101:101:org.apache.commons.lang3.CharRange isNot(char) -> isNot
    114:114:org.apache.commons.lang3.CharRange isIn(char,char) -> isIn
    127:127:org.apache.commons.lang3.CharRange isNotIn(char,char) -> isNotIn
    138:138:char getStart() -> getStart
    147:147:char getEnd() -> getEnd
    159:159:boolean isNegated() -> isNegated
    171:171:boolean contains(char) -> contains
    183:195:boolean contains(org.apache.commons.lang3.CharRange) -> contains
    209:216:boolean equals(java.lang.Object) -> equals
    226:226:int hashCode() -> hashCode
    236:248:java.lang.String toString() -> toString
    261:261:java.util.Iterator iterator() -> iterator
    34:34:boolean access$100(org.apache.commons.lang3.CharRange) -> access$100
    34:34:char access$200(org.apache.commons.lang3.CharRange) -> access$200
    34:34:char access$300(org.apache.commons.lang3.CharRange) -> access$300
org.apache.commons.lang3.CharRange$1 -> org.apache.commons.lang3.CharRange$1:
org.apache.commons.lang3.CharRange$CharacterIterator -> org.apache.commons.lang3.CharRange$CharacterIterator:
    char current -> current
    org.apache.commons.lang3.CharRange range -> range
    boolean hasNext -> hasNext
    280:298:void <init>(org.apache.commons.lang3.CharRange) -> <init>
    304:321:void prepareNext() -> prepareNext
    329:329:boolean hasNext() -> hasNext
    338:343:java.lang.Character next() -> next
    353:353:void remove() -> remove
    268:268:java.lang.Object next() -> next
    268:268:void <init>(org.apache.commons.lang3.CharRange,org.apache.commons.lang3.CharRange$1) -> <init>
org.apache.commons.lang3.CharSequenceUtils -> org.apache.commons.lang3.CharSequenceUtils:
    37:38:void <init>() -> <init>
    56:56:java.lang.CharSequence subSequence(java.lang.CharSequence,int) -> subSequence
    70:82:int indexOf(java.lang.CharSequence,int,int) -> indexOf
    95:95:int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    117:132:int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    145:145:int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    164:172:char[] toCharArray(java.lang.CharSequence) -> toCharArray
    189:193:boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> regionMatches
org.apache.commons.lang3.CharSet -> org.apache.commons.lang3.CharSet:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.CharSet EMPTY -> EMPTY
    org.apache.commons.lang3.CharSet ASCII_ALPHA -> ASCII_ALPHA
    org.apache.commons.lang3.CharSet ASCII_ALPHA_LOWER -> ASCII_ALPHA_LOWER
    org.apache.commons.lang3.CharSet ASCII_ALPHA_UPPER -> ASCII_ALPHA_UPPER
    org.apache.commons.lang3.CharSet ASCII_NUMERIC -> ASCII_NUMERIC
    java.util.Map COMMON -> COMMON
    java.util.Set set -> set
    139:148:org.apache.commons.lang3.CharSet getInstance(java.lang.String[]) -> getInstance
    92:165:void <init>(java.lang.String[]) -> <init>
    174:200:void add(java.lang.String) -> add
    212:212:org.apache.commons.lang3.CharRange[] getCharRanges() -> getCharRanges
    224:229:boolean contains(char) -> contains
    247:254:boolean equals(java.lang.Object) -> equals
    265:265:int hashCode() -> hashCode
    275:275:java.lang.String toString() -> toString
    48:89:void <clinit>() -> <clinit>
org.apache.commons.lang3.CharSetUtils -> org.apache.commons.lang3.CharSetUtils:
    41:42:void <init>() -> <init>
    65:83:java.lang.String squeeze(java.lang.String,java.lang.String[]) -> squeeze
    107:117:int count(java.lang.String,java.lang.String[]) -> count
    142:148:java.lang.String keep(java.lang.String,java.lang.String[]) -> keep
    172:175:java.lang.String delete(java.lang.String,java.lang.String[]) -> delete
    188:197:java.lang.String modify(java.lang.String,java.lang.String[],boolean) -> modify
    208:215:boolean deepEmpty(java.lang.String[]) -> deepEmpty
org.apache.commons.lang3.CharUtils -> org.apache.commons.lang3.CharUtils:
    java.lang.String CHAR_STRING -> CHAR_STRING
    java.lang.String[] CHAR_STRING_ARRAY -> CHAR_STRING_ARRAY
    java.lang.Character[] CHAR_ARRAY -> CHAR_ARRAY
    char LF -> LF
    char CR -> CR
    87:88:void <init>() -> <init>
    106:109:java.lang.Character toCharacterObject(char) -> toCharacterObject
    130:133:java.lang.Character toCharacterObject(java.lang.String) -> toCharacterObject
    151:154:char toChar(java.lang.Character) -> toChar
    171:174:char toChar(java.lang.Character,char) -> toChar
    194:197:char toChar(java.lang.String) -> toChar
    216:219:char toChar(java.lang.String,char) -> toChar
    239:242:int toIntValue(char) -> toIntValue
    261:264:int toIntValue(char,int) -> toIntValue
    284:287:int toIntValue(java.lang.Character) -> toIntValue
    307:310:int toIntValue(java.lang.Character,int) -> toIntValue
    329:332:java.lang.String toString(char) -> toString
    353:356:java.lang.String toString(java.lang.Character) -> toString
    374:381:java.lang.String unicodeEscaped(char) -> unicodeEscaped
    401:404:java.lang.String unicodeEscaped(java.lang.Character) -> unicodeEscaped
    424:424:boolean isAscii(char) -> isAscii
    443:443:boolean isAsciiPrintable(char) -> isAsciiPrintable
    462:462:boolean isAsciiControl(char) -> isAsciiControl
    481:481:boolean isAsciiAlpha(char) -> isAsciiAlpha
    500:500:boolean isAsciiAlphaUpper(char) -> isAsciiAlphaUpper
    519:519:boolean isAsciiAlphaLower(char) -> isAsciiAlphaLower
    538:538:boolean isAsciiNumeric(char) -> isAsciiNumeric
    557:557:boolean isAsciiAlphanumeric(char) -> isAsciiAlphanumeric
    50:77:void <clinit>() -> <clinit>
org.apache.commons.lang3.ClassUtils -> org.apache.commons.lang3.ClassUtils:
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    java.lang.String PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR_CHAR -> INNER_CLASS_SEPARATOR_CHAR
    java.lang.String INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    java.util.Map primitiveWrapperMap -> primitiveWrapperMap
    java.util.Map wrapperPrimitiveMap -> wrapperPrimitiveMap
    java.util.Map abbreviationMap -> abbreviationMap
    java.util.Map reverseAbbreviationMap -> reverseAbbreviationMap
    111:113:void addAbbreviation(java.lang.String,java.lang.String) -> addAbbreviation
    138:139:void <init>() -> <init>
    151:154:java.lang.String getShortClassName(java.lang.Object,java.lang.String) -> getShortClassName
    168:171:java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    187:219:java.lang.String getShortClassName(java.lang.String) -> getShortClassName
    231:234:java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    247:250:java.lang.String getSimpleName(java.lang.Object,java.lang.String) -> getSimpleName
    263:266:java.lang.String getPackageName(java.lang.Object,java.lang.String) -> getPackageName
    276:279:java.lang.String getPackageName(java.lang.Class) -> getPackageName
    292:309:java.lang.String getPackageName(java.lang.String) -> getPackageName
    322:331:java.util.List getAllSuperclasses(java.lang.Class) -> getAllSuperclasses
    348:355:java.util.List getAllInterfaces(java.lang.Class) -> getAllInterfaces
    365:376:void getAllInterfaces(java.lang.Class,java.util.HashSet) -> getAllInterfaces
    393:404:java.util.List convertClassNamesToClasses(java.util.List) -> convertClassNamesToClasses
    420:431:java.util.List convertClassesToClassNames(java.util.List) -> convertClassesToClassNames
    473:473:boolean isAssignable(java.lang.Class[],java.lang.Class[]) -> isAssignable
    509:523:boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean) -> isAssignable
    558:558:boolean isAssignable(java.lang.Class,java.lang.Class) -> isAssignable
    589:658:boolean isAssignable(java.lang.Class,java.lang.Class,boolean) -> isAssignable
    674:678:java.lang.Class primitiveToWrapper(java.lang.Class) -> primitiveToWrapper
    692:704:java.lang.Class[] primitivesToWrappers(java.lang.Class[]) -> primitivesToWrappers
    724:724:java.lang.Class wrapperToPrimitive(java.lang.Class) -> wrapperToPrimitive
    742:754:java.lang.Class[] wrappersToPrimitives(java.lang.Class[]) -> wrappersToPrimitives
    767:767:boolean isInnerClass(java.lang.Class) -> isInnerClass
    788:809:java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean) -> getClass
    826:826:java.lang.Class getClass(java.lang.ClassLoader,java.lang.String) -> getClass
    841:841:java.lang.Class getClass(java.lang.String) -> getClass
    856:858:java.lang.Class getClass(java.lang.String,boolean) -> getClass
    887:911:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    923:940:java.lang.String toCanonicalName(java.lang.String) -> toCanonicalName
    954:963:java.lang.Class[] toClass(java.lang.Object[]) -> toClass
    977:980:java.lang.String getShortCanonicalName(java.lang.Object,java.lang.String) -> getShortCanonicalName
    991:994:java.lang.String getShortCanonicalName(java.lang.Class) -> getShortCanonicalName
    1007:1007:java.lang.String getShortCanonicalName(java.lang.String) -> getShortCanonicalName
    1021:1024:java.lang.String getPackageCanonicalName(java.lang.Object,java.lang.String) -> getPackageCanonicalName
    1035:1038:java.lang.String getPackageCanonicalName(java.lang.Class) -> getPackageCanonicalName
    1052:1052:java.lang.String getPackageCanonicalName(java.lang.String) -> getPackageCanonicalName
    1072:1099:java.lang.String getCanonicalName(java.lang.String) -> getCanonicalName
    53:127:void <clinit>() -> <clinit>
org.apache.commons.lang3.EnumUtils -> org.apache.commons.lang3.EnumUtils:
    39:40:void <init>() -> <init>
    52:56:java.util.Map getEnumMap(java.lang.Class) -> getEnumMap
    69:69:java.util.List getEnumList(java.lang.Class) -> getEnumList
    84:91:boolean isValidEnum(java.lang.Class,java.lang.String) -> isValidEnum
    107:113:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
org.apache.commons.lang3.JavaVersion -> org.apache.commons.lang3.JavaVersion:
    org.apache.commons.lang3.JavaVersion JAVA_0_9 -> JAVA_0_9
    org.apache.commons.lang3.JavaVersion JAVA_1_1 -> JAVA_1_1
    org.apache.commons.lang3.JavaVersion JAVA_1_2 -> JAVA_1_2
    org.apache.commons.lang3.JavaVersion JAVA_1_3 -> JAVA_1_3
    org.apache.commons.lang3.JavaVersion JAVA_1_4 -> JAVA_1_4
    org.apache.commons.lang3.JavaVersion JAVA_1_5 -> JAVA_1_5
    org.apache.commons.lang3.JavaVersion JAVA_1_6 -> JAVA_1_6
    org.apache.commons.lang3.JavaVersion JAVA_1_7 -> JAVA_1_7
    org.apache.commons.lang3.JavaVersion JAVA_1_8 -> JAVA_1_8
    float value -> value
    java.lang.String name -> name
    org.apache.commons.lang3.JavaVersion[] $VALUES -> $VALUES
    27:27:org.apache.commons.lang3.JavaVersion[] values() -> values
    27:27:org.apache.commons.lang3.JavaVersion valueOf(java.lang.String) -> valueOf
    56:59:void <init>(java.lang.String,int,float,java.lang.String) -> <init>
    72:72:boolean atLeast(org.apache.commons.lang3.JavaVersion) -> atLeast
    86:86:org.apache.commons.lang3.JavaVersion getJavaVersion(java.lang.String) -> getJavaVersion
    99:118:org.apache.commons.lang3.JavaVersion get(java.lang.String) -> get
    132:132:java.lang.String toString() -> toString
    27:39:void <clinit>() -> <clinit>
org.apache.commons.lang3.LocaleUtils -> org.apache.commons.lang3.LocaleUtils:
    java.util.concurrent.ConcurrentMap cLanguagesByCountry -> cLanguagesByCountry
    java.util.concurrent.ConcurrentMap cCountriesByLanguage -> cCountriesByLanguage
    57:58:void <init>() -> <init>
    89:121:java.util.Locale toLocale(java.lang.String) -> toLocale
    140:140:java.util.List localeLookupList(java.util.Locale) -> localeLookupList
    162:175:java.util.List localeLookupList(java.util.Locale,java.util.Locale) -> localeLookupList
    189:189:java.util.List availableLocaleList() -> availableLocaleList
    203:203:java.util.Set availableLocaleSet() -> availableLocaleSet
    214:214:boolean isAvailableLocale(java.util.Locale) -> isAvailableLocale
    228:246:java.util.List languagesByCountry(java.lang.String) -> languagesByCountry
    260:279:java.util.List countriesByLanguage(java.lang.String) -> countriesByLanguage
    42:46:void <clinit>() -> <clinit>
org.apache.commons.lang3.LocaleUtils$SyncAvoid -> org.apache.commons.lang3.LocaleUtils$SyncAvoid:
    java.util.List AVAILABLE_LOCALE_LIST -> AVAILABLE_LOCALE_LIST
    java.util.Set AVAILABLE_LOCALE_SET -> AVAILABLE_LOCALE_SET
    284:284:void <init>() -> <init>
    284:284:java.util.List access$000() -> access$000
    284:284:java.util.Set access$100() -> access$100
    291:294:void <clinit>() -> <clinit>
org.apache.commons.lang3.ObjectUtils -> org.apache.commons.lang3.ObjectUtils:
    org.apache.commons.lang3.ObjectUtils$Null NULL -> NULL
    66:67:void <init>() -> <init>
    88:88:java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object) -> defaultIfNull
    114:121:java.lang.Object firstNonNull(java.lang.Object[]) -> firstNonNull
    146:152:boolean equals(java.lang.Object,java.lang.Object) -> equals
    175:175:boolean notEqual(java.lang.Object,java.lang.Object) -> notEqual
    193:193:int hashCode(java.lang.Object) -> hashCode
    217:223:int hashCodeMulti(java.lang.Object[]) -> hashCodeMulti
    245:250:java.lang.String identityToString(java.lang.Object) -> identityToString
    269:275:void identityToString(java.lang.StringBuffer,java.lang.Object) -> identityToString
    297:297:java.lang.String toString(java.lang.Object) -> toString
    320:320:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    339:347:java.lang.Comparable min(java.lang.Comparable[]) -> min
    364:372:java.lang.Comparable max(java.lang.Comparable[]) -> max
    386:386:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    403:410:int compare(java.lang.Comparable,java.lang.Comparable,boolean) -> compare
    423:457:java.lang.Object clone(java.lang.Object) -> clone
    477:478:java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
    55:55:void <clinit>() -> <clinit>
org.apache.commons.lang3.ObjectUtils$Null -> org.apache.commons.lang3.ObjectUtils$Null:
    long serialVersionUID -> serialVersionUID
    508:509:void <init>() -> <init>
    517:517:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.RandomStringUtils -> org.apache.commons.lang3.RandomStringUtils:
    java.util.Random RANDOM -> RANDOM
    54:55:void <init>() -> <init>
    69:69:java.lang.String random(int) -> random
    83:83:java.lang.String randomAscii(int) -> randomAscii
    97:97:java.lang.String randomAlphabetic(int) -> randomAlphabetic
    111:111:java.lang.String randomAlphanumeric(int) -> randomAlphanumeric
    125:125:java.lang.String randomNumeric(int) -> randomNumeric
    143:143:java.lang.String random(int,boolean,boolean) -> random
    163:163:java.lang.String random(int,int,int,boolean,boolean) -> random
    187:187:java.lang.String random(int,int,int,boolean,boolean,char[]) -> random
    225:280:java.lang.String random(int,int,int,boolean,boolean,char[],java.util.Random) -> random
    297:300:java.lang.String random(int,java.lang.String) -> random
    316:319:java.lang.String random(int,char[]) -> random
    43:43:void <clinit>() -> <clinit>
org.apache.commons.lang3.Range -> org.apache.commons.lang3.Range:
    long serialVersionUID -> serialVersionUID
    java.util.Comparator comparator -> comparator
    java.lang.Object minimum -> minimum
    java.lang.Object maximum -> maximum
    int hashCode -> hashCode
    java.lang.String toString -> toString
    76:76:org.apache.commons.lang3.Range is(java.lang.Comparable) -> is
    94:94:org.apache.commons.lang3.Range is(java.lang.Object,java.util.Comparator) -> is
    114:114:org.apache.commons.lang3.Range between(java.lang.Comparable,java.lang.Comparable) -> between
    135:135:org.apache.commons.lang3.Range between(java.lang.Object,java.lang.Object,java.util.Comparator) -> between
    146:162:void <init>(java.lang.Object,java.lang.Object,java.util.Comparator) -> <init>
    173:173:java.lang.Object getMinimum() -> getMinimum
    182:182:java.lang.Object getMaximum() -> getMaximum
    194:194:java.util.Comparator getComparator() -> getComparator
    206:206:boolean isNaturalOrdering() -> isNaturalOrdering
    219:222:boolean contains(java.lang.Object) -> contains
    232:235:boolean isAfter(java.lang.Object) -> isAfter
    245:248:boolean isStartedBy(java.lang.Object) -> isStartedBy
    258:261:boolean isEndedBy(java.lang.Object) -> isEndedBy
    271:274:boolean isBefore(java.lang.Object) -> isBefore
    288:297:int elementCompareTo(java.lang.Object) -> elementCompareTo
    314:317:boolean containsRange(org.apache.commons.lang3.Range) -> containsRange
    331:334:boolean isAfterRange(org.apache.commons.lang3.Range) -> isAfterRange
    350:353:boolean isOverlappedBy(org.apache.commons.lang3.Range) -> isOverlappedBy
    368:371:boolean isBeforeRange(org.apache.commons.lang3.Range) -> isBeforeRange
    388:395:boolean equals(java.lang.Object) -> equals
    407:415:int hashCode() -> hashCode
    427:438:java.lang.String toString() -> toString
    454:454:java.lang.String toString(java.lang.String) -> toString
org.apache.commons.lang3.Range$ComparableComparator -> org.apache.commons.lang3.Range$ComparableComparator:
    org.apache.commons.lang3.Range$ComparableComparator INSTANCE -> INSTANCE
    org.apache.commons.lang3.Range$ComparableComparator[] $VALUES -> $VALUES
    459:459:org.apache.commons.lang3.Range$ComparableComparator[] values() -> values
    459:459:org.apache.commons.lang3.Range$ComparableComparator valueOf(java.lang.String) -> valueOf
    459:459:void <init>(java.lang.String,int) -> <init>
    469:469:int compare(java.lang.Object,java.lang.Object) -> compare
    459:460:void <clinit>() -> <clinit>
org.apache.commons.lang3.SerializationException -> org.apache.commons.lang3.SerializationException:
    long serialVersionUID -> serialVersionUID
    42:43:void <init>() -> <init>
    52:53:void <init>(java.lang.String) -> <init>
    63:64:void <init>(java.lang.Throwable) -> <init>
    75:76:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang3.SerializationUtils -> org.apache.commons.lang3.SerializationUtils:
    56:57:void <init>() -> <init>
    82:83:java.io.Serializable clone(java.io.Serializable) -> clone
    104:124:void serialize(java.io.Serializable,java.io.OutputStream) -> serialize
    135:137:byte[] serialize(java.io.Serializable) -> serialize
    158:178:java.lang.Object deserialize(java.io.InputStream) -> deserialize
    191:195:java.lang.Object deserialize(byte[]) -> deserialize
org.apache.commons.lang3.StringEscapeUtils -> org.apache.commons.lang3.StringEscapeUtils:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> ESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> ESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> ESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> ESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> ESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> ESCAPE_CSV
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> UNESCAPE_JAVA
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> UNESCAPE_ECMASCRIPT
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> UNESCAPE_HTML3
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> UNESCAPE_HTML4
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> UNESCAPE_XML
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> UNESCAPE_CSV
    314:315:void <init>() -> <init>
    341:341:java.lang.String escapeJava(java.lang.String) -> escapeJava
    370:370:java.lang.String escapeEcmaScript(java.lang.String) -> escapeEcmaScript
    383:383:java.lang.String unescapeJava(java.lang.String) -> unescapeJava
    400:400:java.lang.String unescapeEcmaScript(java.lang.String) -> unescapeEcmaScript
    433:433:java.lang.String escapeHtml4(java.lang.String) -> escapeHtml4
    446:446:java.lang.String escapeHtml3(java.lang.String) -> escapeHtml3
    468:468:java.lang.String unescapeHtml4(java.lang.String) -> unescapeHtml4
    482:482:java.lang.String unescapeHtml3(java.lang.String) -> unescapeHtml3
    506:506:java.lang.String escapeXml(java.lang.String) -> escapeXml
    527:527:java.lang.String unescapeXml(java.lang.String) -> unescapeXml
    556:556:java.lang.String escapeCsv(java.lang.String) -> escapeCsv
    582:582:java.lang.String unescapeCsv(java.lang.String) -> unescapeCsv
    52:266:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> org.apache.commons.lang3.StringEscapeUtils$CsvEscaper:
    char CSV_DELIMITER -> CSV_DELIMITER
    char CSV_QUOTE -> CSV_QUOTE
    java.lang.String CSV_QUOTE_STR -> CSV_QUOTE_STR
    char[] CSV_SEARCH_CHARS -> CSV_SEARCH_CHARS
    145:145:void <init>() -> <init>
    156:167:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    149:150:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper:
    char CSV_DELIMITER -> CSV_DELIMITER
    char CSV_QUOTE -> CSV_QUOTE
    java.lang.String CSV_QUOTE_STR -> CSV_QUOTE_STR
    char[] CSV_SEARCH_CHARS -> CSV_SEARCH_CHARS
    268:268:void <init>() -> <init>
    279:297:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    272:273:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringUtils -> org.apache.commons.lang3.StringUtils:
    java.lang.String EMPTY -> EMPTY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    int PAD_LIMIT -> PAD_LIMIT
    java.util.regex.Pattern WHITESPACE_BLOCK -> WHITESPACE_BLOCK
    boolean sunAvailable -> sunAvailable
    java.lang.reflect.Method sunDecomposeMethod -> sunDecomposeMethod
    java.util.regex.Pattern sunPattern -> sunPattern
    boolean java6Available -> java6Available
    java.lang.reflect.Method java6NormalizeMethod -> java6NormalizeMethod
    java.lang.Object java6NormalizerFormNFD -> java6NormalizerFormNFD
    java.util.regex.Pattern java6Pattern -> java6Pattern
    158:159:void <init>() -> <init>
    183:183:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    202:202:boolean isNotEmpty(java.lang.CharSequence) -> isNotEmpty
    223:231:boolean isBlank(java.lang.CharSequence) -> isBlank
    252:252:boolean isNotBlank(java.lang.CharSequence) -> isNotBlank
    281:281:java.lang.String trim(java.lang.String) -> trim
    307:308:java.lang.String trimToNull(java.lang.String) -> trimToNull
    333:333:java.lang.String trimToEmpty(java.lang.String) -> trimToEmpty
    361:361:java.lang.String strip(java.lang.String) -> strip
    388:392:java.lang.String stripToNull(java.lang.String) -> stripToNull
    418:418:java.lang.String stripToEmpty(java.lang.String) -> stripToEmpty
    448:452:java.lang.String strip(java.lang.String,java.lang.String) -> strip
    481:496:java.lang.String stripStart(java.lang.String,java.lang.String) -> stripStart
    526:541:java.lang.String stripEnd(java.lang.String,java.lang.String) -> stripEnd
    566:566:java.lang.String[] stripAll(java.lang.String[]) -> stripAll
    596:603:java.lang.String[] stripAll(java.lang.String[],java.lang.String) -> stripAll
    628:650:java.lang.String stripAccents(java.lang.String) -> stripAccents
    670:676:java.lang.String removeAccentsJava6(java.lang.CharSequence) -> removeAccentsJava6
    694:700:java.lang.String removeAccentsSUN(java.lang.CharSequence) -> removeAccentsSUN
    773:773:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    798:801:boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    828:831:int indexOf(java.lang.CharSequence,int) -> indexOf
    861:864:int indexOf(java.lang.CharSequence,int,int) -> indexOf
    892:895:int indexOf(java.lang.CharSequence,java.lang.CharSequence) -> indexOf
    932:935:int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOf
    973:973:int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> ordinalIndexOf
    991:1010:int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean) -> ordinalIndexOf
    1039:1039:int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> indexOfIgnoreCase
    1075:1093:int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOfIgnoreCase
    1119:1122:int lastIndexOf(java.lang.CharSequence,int) -> lastIndexOf
    1154:1157:int lastIndexOf(java.lang.CharSequence,int,int) -> lastIndexOf
    1184:1187:int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOf
    1225:1225:int lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastOrdinalIndexOf
    1258:1261:int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOf
    1288:1291:int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> lastIndexOfIgnoreCase
    1324:1342:int lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> lastIndexOfIgnoreCase
    1368:1371:boolean contains(java.lang.CharSequence,int) -> contains
    1397:1400:boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    1428:1438:boolean containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> containsIgnoreCase
    1451:1460:boolean containsWhitespace(java.lang.CharSequence) -> containsWhitespace
    1489:1511:int indexOfAny(java.lang.CharSequence,char[]) -> indexOfAny
    1538:1541:int indexOfAny(java.lang.CharSequence,java.lang.String) -> indexOfAny
    1571:1597:boolean containsAny(java.lang.CharSequence,char[]) -> containsAny
    1629:1632:boolean containsAny(java.lang.CharSequence,java.lang.CharSequence) -> containsAny
    1662:1685:int indexOfAnyBut(java.lang.CharSequence,char[]) -> indexOfAnyBut
    1712:1730:int indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence) -> indexOfAnyBut
    1759:1768:boolean containsOnly(java.lang.CharSequence,char[]) -> containsOnly
    1795:1798:boolean containsOnly(java.lang.CharSequence,java.lang.String) -> containsOnly
    1827:1853:boolean containsNone(java.lang.CharSequence,char[]) -> containsNone
    1880:1883:boolean containsNone(java.lang.CharSequence,java.lang.String) -> containsNone
    1916:1940:int indexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> indexOfAny
    1970:1986:int lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[]) -> lastIndexOfAny
    2016:2032:java.lang.String substring(java.lang.String,int) -> substring
    2071:2100:java.lang.String substring(java.lang.String,int,int) -> substring
    2126:2135:java.lang.String left(java.lang.String,int) -> left
    2159:2168:java.lang.String right(java.lang.String,int) -> right
    2197:2209:java.lang.String mid(java.lang.String,int,int) -> mid
    2242:2252:java.lang.String substringBefore(java.lang.String,java.lang.String) -> substringBefore
    2284:2294:java.lang.String substringAfter(java.lang.String,java.lang.String) -> substringAfter
    2325:2332:java.lang.String substringBeforeLast(java.lang.String,java.lang.String) -> substringBeforeLast
    2365:2375:java.lang.String substringAfterLast(java.lang.String,java.lang.String) -> substringAfterLast
    2402:2402:java.lang.String substringBetween(java.lang.String,java.lang.String) -> substringBetween
    2433:2443:java.lang.String substringBetween(java.lang.String,java.lang.String,java.lang.String) -> substringBetween
    2469:2496:java.lang.String[] substringsBetween(java.lang.String,java.lang.String,java.lang.String) -> substringsBetween
    2527:2527:java.lang.String[] split(java.lang.String) -> split
    2555:2555:java.lang.String[] split(java.lang.String,char) -> split
    2584:2584:java.lang.String[] split(java.lang.String,java.lang.String) -> split
    2618:2618:java.lang.String[] split(java.lang.String,java.lang.String,int) -> split
    2645:2645:java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String) -> splitByWholeSeparator
    2676:2676:java.lang.String[] splitByWholeSeparator(java.lang.String,java.lang.String,int) -> splitByWholeSeparator
    2705:2705:java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String) -> splitByWholeSeparatorPreserveAllTokens
    2738:2738:java.lang.String[] splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitByWholeSeparatorPreserveAllTokens
    2757:2818:java.lang.String[] splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean) -> splitByWholeSeparatorWorker
    2847:2847:java.lang.String[] splitPreserveAllTokens(java.lang.String) -> splitPreserveAllTokens
    2883:2883:java.lang.String[] splitPreserveAllTokens(java.lang.String,char) -> splitPreserveAllTokens
    2901:2929:java.lang.String[] splitWorker(java.lang.String,char,boolean) -> splitWorker
    2966:2966:java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String) -> splitPreserveAllTokens
    3006:3006:java.lang.String[] splitPreserveAllTokens(java.lang.String,java.lang.String,int) -> splitPreserveAllTokens
    3028:3105:java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean) -> splitWorker
    3128:3128:java.lang.String[] splitByCharacterType(java.lang.String) -> splitByCharacterType
    3156:3156:java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String) -> splitByCharacterTypeCamelCase
    3174:3202:java.lang.String[] splitByCharacterType(java.lang.String,boolean) -> splitByCharacterType
    3230:3230:java.lang.String join(java.lang.Object[]) -> join
    3256:3260:java.lang.String join(java.lang.Object[],char) -> join
    3290:3308:java.lang.String join(java.lang.Object[],char,int,int) -> join
    3335:3338:java.lang.String join(java.lang.Object[],java.lang.String) -> join
    3369:3393:java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    3413:3438:java.lang.String join(java.util.Iterator,char) -> join
    3457:3483:java.lang.String join(java.util.Iterator,java.lang.String) -> join
    3501:3504:java.lang.String join(java.lang.Iterable,char) -> join
    3522:3525:java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    3545:3559:java.lang.String deleteWhitespace(java.lang.String) -> deleteWhitespace
    3589:3595:java.lang.String removeStart(java.lang.String,java.lang.String) -> removeStart
    3624:3630:java.lang.String removeStartIgnoreCase(java.lang.String,java.lang.String) -> removeStartIgnoreCase
    3658:3664:java.lang.String removeEnd(java.lang.String,java.lang.String) -> removeEnd
    3694:3700:java.lang.String removeEndIgnoreCase(java.lang.String,java.lang.String) -> removeEndIgnoreCase
    3727:3730:java.lang.String remove(java.lang.String,java.lang.String) -> remove
    3753:3763:java.lang.String remove(java.lang.String,char) -> remove
    3792:3792:java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> replaceOnce
    3819:3819:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    3851:3873:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> replace
    3916:3916:java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEach
    3967:3968:java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]) -> replaceEachRepeatedly
    4025:4143:java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int) -> replaceEach
    4169:4172:java.lang.String replaceChars(java.lang.String,char,char) -> replaceChars
    4212:4237:java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String) -> replaceChars
    4272:4296:java.lang.String overlay(java.lang.String,java.lang.String,int,int) -> overlay
    4331:4353:java.lang.String chomp(java.lang.String) -> chomp
    4383:4389:java.lang.String chomp(java.lang.String,java.lang.String) -> chomp
    4418:4433:java.lang.String chop(java.lang.String) -> chop
    4462:4494:java.lang.String repeat(java.lang.String,int) -> repeat
    4519:4524:java.lang.String repeat(java.lang.String,java.lang.String,int) -> repeat
    4551:4555:java.lang.String repeat(char,int) -> repeat
    4578:4578:java.lang.String rightPad(java.lang.String,int) -> rightPad
    4603:4613:java.lang.String rightPad(java.lang.String,int,char) -> rightPad
    4640:4666:java.lang.String rightPad(java.lang.String,int,java.lang.String) -> rightPad
    4690:4690:java.lang.String leftPad(java.lang.String,int) -> leftPad
    4715:4725:java.lang.String leftPad(java.lang.String,int,char) -> leftPad
    4752:4778:java.lang.String leftPad(java.lang.String,int,java.lang.String) -> leftPad
    4794:4794:int length(java.lang.CharSequence) -> length
    4823:4823:java.lang.String center(java.lang.String,int) -> center
    4851:4861:java.lang.String center(java.lang.String,int,char) -> center
    4891:4904:java.lang.String center(java.lang.String,int,java.lang.String) -> center
    4929:4932:java.lang.String upperCase(java.lang.String) -> upperCase
    4952:4955:java.lang.String upperCase(java.lang.String,java.util.Locale) -> upperCase
    4978:4981:java.lang.String lowerCase(java.lang.String) -> lowerCase
    5001:5004:java.lang.String lowerCase(java.lang.String,java.util.Locale) -> lowerCase
    5029:5032:java.lang.String capitalize(java.lang.String) -> capitalize
    5060:5063:java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    5097:5113:java.lang.String swapCase(java.lang.String) -> swapCase
    5139:5148:int countMatches(java.lang.CharSequence,java.lang.CharSequence) -> countMatches
    5174:5183:boolean isAlpha(java.lang.CharSequence) -> isAlpha
    5209:5218:boolean isAlphaSpace(java.lang.CharSequence) -> isAlphaSpace
    5244:5253:boolean isAlphanumeric(java.lang.CharSequence) -> isAlphanumeric
    5279:5288:boolean isAlphanumericSpace(java.lang.CharSequence) -> isAlphanumericSpace
    5318:5327:boolean isAsciiPrintable(java.lang.CharSequence) -> isAsciiPrintable
    5354:5363:boolean isNumeric(java.lang.CharSequence) -> isNumeric
    5391:5400:boolean isNumericSpace(java.lang.CharSequence) -> isNumericSpace
    5424:5433:boolean isWhitespace(java.lang.CharSequence) -> isWhitespace
    5456:5465:boolean isAllLowerCase(java.lang.CharSequence) -> isAllLowerCase
    5488:5497:boolean isAllUpperCase(java.lang.CharSequence) -> isAllUpperCase
    5519:5519:java.lang.String defaultString(java.lang.String) -> defaultString
    5540:5540:java.lang.String defaultString(java.lang.String,java.lang.String) -> defaultString
    5562:5562:java.lang.CharSequence defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfBlank
    5583:5583:java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence) -> defaultIfEmpty
    5603:5606:java.lang.String reverse(java.lang.String) -> reverse
    5629:5636:java.lang.String reverseDelimited(java.lang.String,char) -> reverseDelimited
    5674:5674:java.lang.String abbreviate(java.lang.String,int) -> abbreviate
    5713:5738:java.lang.String abbreviate(java.lang.String,int,int) -> abbreviate
    5771:5788:java.lang.String abbreviateMiddle(java.lang.String,java.lang.String,int) -> abbreviateMiddle
    5819:5829:java.lang.String difference(java.lang.String,java.lang.String) -> difference
    5858:5873:int indexOfDifference(java.lang.CharSequence,java.lang.CharSequence) -> indexOfDifference
    5909:5963:int indexOfDifference(java.lang.CharSequence[]) -> indexOfDifference
    6000:6015:java.lang.String getCommonPrefix(java.lang.String[]) -> getCommonPrefix
    6058:6131:int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence) -> getLevenshteinDistance
    6167:6292:int getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int) -> getLevenshteinDistance
    6322:6322:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    6348:6348:boolean startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> startsWithIgnoreCase
    6363:6369:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    6392:6400:boolean startsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> startsWithAny
    6430:6430:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence) -> endsWith
    6457:6457:boolean endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> endsWithIgnoreCase
    6472:6479:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    6524:6527:java.lang.String normalizeSpace(java.lang.String) -> normalizeSpace
    6549:6557:boolean endsWithAny(java.lang.CharSequence,java.lang.CharSequence[]) -> endsWithAny
    147:747:void <clinit>() -> <clinit>
org.apache.commons.lang3.SystemUtils -> org.apache.commons.lang3.SystemUtils:
    java.lang.String OS_NAME_WINDOWS_PREFIX -> OS_NAME_WINDOWS_PREFIX
    java.lang.String USER_HOME_KEY -> USER_HOME_KEY
    java.lang.String USER_DIR_KEY -> USER_DIR_KEY
    java.lang.String JAVA_IO_TMPDIR_KEY -> JAVA_IO_TMPDIR_KEY
    java.lang.String JAVA_HOME_KEY -> JAVA_HOME_KEY
    java.lang.String AWT_TOOLKIT -> AWT_TOOLKIT
    java.lang.String FILE_ENCODING -> FILE_ENCODING
    java.lang.String FILE_SEPARATOR -> FILE_SEPARATOR
    java.lang.String JAVA_AWT_FONTS -> JAVA_AWT_FONTS
    java.lang.String JAVA_AWT_GRAPHICSENV -> JAVA_AWT_GRAPHICSENV
    java.lang.String JAVA_AWT_HEADLESS -> JAVA_AWT_HEADLESS
    java.lang.String JAVA_AWT_PRINTERJOB -> JAVA_AWT_PRINTERJOB
    java.lang.String JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    java.lang.String JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    java.lang.String JAVA_COMPILER -> JAVA_COMPILER
    java.lang.String JAVA_ENDORSED_DIRS -> JAVA_ENDORSED_DIRS
    java.lang.String JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    java.lang.String JAVA_HOME -> JAVA_HOME
    java.lang.String JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    java.lang.String JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    java.lang.String JAVA_RUNTIME_NAME -> JAVA_RUNTIME_NAME
    java.lang.String JAVA_RUNTIME_VERSION -> JAVA_RUNTIME_VERSION
    java.lang.String JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    java.lang.String JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    java.lang.String JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM -> JAVA_SPECIFICATION_VERSION_AS_ENUM
    java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY -> JAVA_UTIL_PREFS_PREFERENCES_FACTORY
    java.lang.String JAVA_VENDOR -> JAVA_VENDOR
    java.lang.String JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    java.lang.String JAVA_VERSION -> JAVA_VERSION
    java.lang.String JAVA_VM_INFO -> JAVA_VM_INFO
    java.lang.String JAVA_VM_NAME -> JAVA_VM_NAME
    java.lang.String JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    java.lang.String JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    java.lang.String JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    java.lang.String JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    java.lang.String JAVA_VM_VERSION -> JAVA_VM_VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    java.lang.String OS_ARCH -> OS_ARCH
    java.lang.String OS_NAME -> OS_NAME
    java.lang.String OS_VERSION -> OS_VERSION
    java.lang.String PATH_SEPARATOR -> PATH_SEPARATOR
    java.lang.String USER_COUNTRY -> USER_COUNTRY
    java.lang.String USER_DIR -> USER_DIR
    java.lang.String USER_HOME -> USER_HOME
    java.lang.String USER_LANGUAGE -> USER_LANGUAGE
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_TIMEZONE -> USER_TIMEZONE
    boolean IS_JAVA_1_1 -> IS_JAVA_1_1
    boolean IS_JAVA_1_2 -> IS_JAVA_1_2
    boolean IS_JAVA_1_3 -> IS_JAVA_1_3
    boolean IS_JAVA_1_4 -> IS_JAVA_1_4
    boolean IS_JAVA_1_5 -> IS_JAVA_1_5
    boolean IS_JAVA_1_6 -> IS_JAVA_1_6
    boolean IS_JAVA_1_7 -> IS_JAVA_1_7
    boolean IS_OS_AIX -> IS_OS_AIX
    boolean IS_OS_HP_UX -> IS_OS_HP_UX
    boolean IS_OS_IRIX -> IS_OS_IRIX
    boolean IS_OS_LINUX -> IS_OS_LINUX
    boolean IS_OS_MAC -> IS_OS_MAC
    boolean IS_OS_MAC_OSX -> IS_OS_MAC_OSX
    boolean IS_OS_OS2 -> IS_OS_OS2
    boolean IS_OS_SOLARIS -> IS_OS_SOLARIS
    boolean IS_OS_SUN_OS -> IS_OS_SUN_OS
    boolean IS_OS_UNIX -> IS_OS_UNIX
    boolean IS_OS_WINDOWS -> IS_OS_WINDOWS
    boolean IS_OS_WINDOWS_2000 -> IS_OS_WINDOWS_2000
    boolean IS_OS_WINDOWS_95 -> IS_OS_WINDOWS_95
    boolean IS_OS_WINDOWS_98 -> IS_OS_WINDOWS_98
    boolean IS_OS_WINDOWS_ME -> IS_OS_WINDOWS_ME
    boolean IS_OS_WINDOWS_NT -> IS_OS_WINDOWS_NT
    boolean IS_OS_WINDOWS_XP -> IS_OS_WINDOWS_XP
    boolean IS_OS_WINDOWS_VISTA -> IS_OS_WINDOWS_VISTA
    boolean IS_OS_WINDOWS_7 -> IS_OS_WINDOWS_7
    1178:1178:java.io.File getJavaHome() -> getJavaHome
    1193:1193:java.io.File getJavaIoTmpDir() -> getJavaIoTmpDir
    1205:1205:boolean getJavaVersionMatches(java.lang.String) -> getJavaVersionMatches
    1216:1216:boolean getOSMatches(java.lang.String,java.lang.String) -> getOSMatches
    1226:1226:boolean getOSMatchesName(java.lang.String) -> getOSMatchesName
    1244:1249:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    1265:1265:java.io.File getUserDir() -> getUserDir
    1280:1280:java.io.File getUserHome() -> getUserHome
    1292:1292:boolean isJavaAwtHeadless() -> isJavaAwtHeadless
    1311:1311:boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion) -> isJavaVersionAtLeast
    1327:1330:boolean isJavaVersionMatch(java.lang.String,java.lang.String) -> isJavaVersionMatch
    1346:1349:boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> isOSMatch
    1363:1366:boolean isOSNameMatch(java.lang.String,java.lang.String) -> isOSNameMatch
    1380:1381:void <init>() -> <init>
    89:1164:void <clinit>() -> <clinit>
org.apache.commons.lang3.Validate -> org.apache.commons.lang3.Validate:
    java.lang.String DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE -> DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE
    java.lang.String DEFAULT_MATCHES_PATTERN_EX -> DEFAULT_MATCHES_PATTERN_EX
    java.lang.String DEFAULT_IS_NULL_EX_MESSAGE -> DEFAULT_IS_NULL_EX_MESSAGE
    java.lang.String DEFAULT_IS_TRUE_EX_MESSAGE -> DEFAULT_IS_TRUE_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE -> DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_BLANK_EX_MESSAGE -> DEFAULT_NOT_BLANK_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE -> DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE -> DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE -> DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE -> DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE -> DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE
    java.lang.String DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE -> DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE
    java.lang.String DEFAULT_VALID_STATE_EX_MESSAGE -> DEFAULT_VALID_STATE_EX_MESSAGE
    java.lang.String DEFAULT_IS_ASSIGNABLE_EX_MESSAGE -> DEFAULT_IS_ASSIGNABLE_EX_MESSAGE
    java.lang.String DEFAULT_IS_INSTANCE_OF_EX_MESSAGE -> DEFAULT_IS_INSTANCE_OF_EX_MESSAGE
    80:81:void <init>() -> <init>
    106:109:void isTrue(boolean,java.lang.String,long) -> isTrue
    131:134:void isTrue(boolean,java.lang.String,double) -> isTrue
    155:158:void isTrue(boolean,java.lang.String,java.lang.Object[]) -> isTrue
    180:183:void isTrue(boolean) -> isTrue
    204:204:java.lang.Object notNull(java.lang.Object) -> notNull
    222:225:java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> notNull
    248:254:java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[]) -> notEmpty
    274:274:java.lang.Object[] notEmpty(java.lang.Object[]) -> notEmpty
    297:303:java.util.Collection notEmpty(java.util.Collection,java.lang.String,java.lang.Object[]) -> notEmpty
    323:323:java.util.Collection notEmpty(java.util.Collection) -> notEmpty
    346:352:java.util.Map notEmpty(java.util.Map,java.lang.String,java.lang.Object[]) -> notEmpty
    372:372:java.util.Map notEmpty(java.util.Map) -> notEmpty
    395:401:java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notEmpty
    422:422:java.lang.CharSequence notEmpty(java.lang.CharSequence) -> notEmpty
    448:454:java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> notBlank
    477:477:java.lang.CharSequence notBlank(java.lang.CharSequence) -> notBlank
    507:514:java.lang.Object[] noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[]) -> noNullElements
    539:539:java.lang.Object[] noNullElements(java.lang.Object[]) -> noNullElements
    569:577:java.lang.Iterable noNullElements(java.lang.Iterable,java.lang.String,java.lang.Object[]) -> noNullElements
    602:602:java.lang.Iterable noNullElements(java.lang.Iterable) -> noNullElements
    630:634:java.lang.Object[] validIndex(java.lang.Object[],int,java.lang.String,java.lang.Object[]) -> validIndex
    661:661:java.lang.Object[] validIndex(java.lang.Object[],int) -> validIndex
    689:693:java.util.Collection validIndex(java.util.Collection,int,java.lang.String,java.lang.Object[]) -> validIndex
    717:717:java.util.Collection validIndex(java.util.Collection,int) -> validIndex
    746:750:java.lang.CharSequence validIndex(java.lang.CharSequence,int,java.lang.String,java.lang.Object[]) -> validIndex
    778:778:java.lang.CharSequence validIndex(java.lang.CharSequence,int) -> validIndex
    804:807:void validState(boolean) -> validState
    826:829:void validState(boolean,java.lang.String,java.lang.Object[]) -> validState
    850:853:void matchesPattern(java.lang.CharSequence,java.lang.String) -> matchesPattern
    873:876:void matchesPattern(java.lang.CharSequence,java.lang.String,java.lang.String,java.lang.Object[]) -> matchesPattern
    897:900:void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> inclusiveBetween
    921:924:void inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> inclusiveBetween
    945:948:void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable) -> exclusiveBetween
    969:972:void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]) -> exclusiveBetween
    995:998:void isInstanceOf(java.lang.Class,java.lang.Object) -> isInstanceOf
    1018:1021:void isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[]) -> isInstanceOf
    1044:1047:void isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    1067:1070:void isAssignableFrom(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[]) -> isAssignableFrom
org.apache.commons.lang3.builder.Builder -> org.apache.commons.lang3.builder.Builder:
    java.lang.Object build() -> build
org.apache.commons.lang3.builder.CompareToBuilder -> org.apache.commons.lang3.builder.CompareToBuilder:
    int comparison -> comparison
    103:105:void <init>() -> <init>
    135:135:int reflectionCompare(java.lang.Object,java.lang.Object) -> reflectionCompare
    167:167:int reflectionCompare(java.lang.Object,java.lang.Object,boolean) -> reflectionCompare
    200:200:int reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionCompare
    233:233:int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionCompare
    275:291:int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionCompare
    313:330:void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[]) -> reflectionAppend
    342:346:org.apache.commons.lang3.builder.CompareToBuilder appendSuper(int) -> appendSuper
    370:370:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object) -> append
    399:450:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator) -> append
    463:467:org.apache.commons.lang3.builder.CompareToBuilder append(long,long) -> append
    479:483:org.apache.commons.lang3.builder.CompareToBuilder append(int,int) -> append
    495:499:org.apache.commons.lang3.builder.CompareToBuilder append(short,short) -> append
    511:515:org.apache.commons.lang3.builder.CompareToBuilder append(char,char) -> append
    527:531:org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte) -> append
    548:552:org.apache.commons.lang3.builder.CompareToBuilder append(double,double) -> append
    569:573:org.apache.commons.lang3.builder.CompareToBuilder append(float,float) -> append
    585:596:org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean) -> append
    621:621:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    648:669:org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator) -> append
    688:709:org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[]) -> append
    728:749:org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[]) -> append
    768:789:org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[]) -> append
    808:829:org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[]) -> append
    848:869:org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[]) -> append
    888:909:org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[]) -> append
    928:949:org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[]) -> append
    968:989:org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[]) -> append
    1002:1002:int toComparison() -> toComparison
    1016:1016:java.lang.Integer build() -> build
    88:88:java.lang.Object build() -> build
org.apache.commons.lang3.builder.EqualsBuilder -> org.apache.commons.lang3.builder.EqualsBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean isEquals -> isEquals
    121:121:java.util.Set getRegistry() -> getRegistry
    135:137:org.apache.commons.lang3.tuple.Pair getRegisterPair(java.lang.Object,java.lang.Object) -> getRegisterPair
    154:158:boolean isRegistered(java.lang.Object,java.lang.Object) -> isRegistered
    172:181:void register(java.lang.Object,java.lang.Object) -> register
    196:208:void unregister(java.lang.Object,java.lang.Object) -> unregister
    214:224:void <init>() -> <init>
    248:248:boolean reflectionEquals(java.lang.Object,java.lang.Object,java.util.Collection) -> reflectionEquals
    271:271:boolean reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[]) -> reflectionEquals
    295:295:boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean) -> reflectionEquals
    326:370:boolean reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionEquals
    392:418:void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[]) -> reflectionAppend
    430:434:org.apache.commons.lang3.builder.EqualsBuilder appendSuper(boolean) -> appendSuper
    448:488:org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object,java.lang.Object) -> append
    503:507:org.apache.commons.lang3.builder.EqualsBuilder append(long,long) -> append
    518:522:org.apache.commons.lang3.builder.EqualsBuilder append(int,int) -> append
    533:537:org.apache.commons.lang3.builder.EqualsBuilder append(short,short) -> append
    548:552:org.apache.commons.lang3.builder.EqualsBuilder append(char,char) -> append
    563:567:org.apache.commons.lang3.builder.EqualsBuilder append(byte,byte) -> append
    584:587:org.apache.commons.lang3.builder.EqualsBuilder append(double,double) -> append
    604:607:org.apache.commons.lang3.builder.EqualsBuilder append(float,float) -> append
    618:622:org.apache.commons.lang3.builder.EqualsBuilder append(boolean,boolean) -> append
    636:653:org.apache.commons.lang3.builder.EqualsBuilder append(java.lang.Object[],java.lang.Object[]) -> append
    667:684:org.apache.commons.lang3.builder.EqualsBuilder append(long[],long[]) -> append
    698:715:org.apache.commons.lang3.builder.EqualsBuilder append(int[],int[]) -> append
    729:746:org.apache.commons.lang3.builder.EqualsBuilder append(short[],short[]) -> append
    760:777:org.apache.commons.lang3.builder.EqualsBuilder append(char[],char[]) -> append
    791:808:org.apache.commons.lang3.builder.EqualsBuilder append(byte[],byte[]) -> append
    822:839:org.apache.commons.lang3.builder.EqualsBuilder append(double[],double[]) -> append
    853:870:org.apache.commons.lang3.builder.EqualsBuilder append(float[],float[]) -> append
    884:901:org.apache.commons.lang3.builder.EqualsBuilder append(boolean[],boolean[]) -> append
    911:911:boolean isEquals() -> isEquals
    924:924:java.lang.Boolean build() -> build
    934:935:void setEquals(boolean) -> setEquals
    942:943:void reset() -> reset
    83:83:java.lang.Object build() -> build
    92:92:void <clinit>() -> <clinit>
org.apache.commons.lang3.builder.HashCodeBuilder -> org.apache.commons.lang3.builder.HashCodeBuilder:
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    int iConstant -> iConstant
    int iTotal -> iTotal
    136:136:java.util.Set getRegistry() -> getRegistry
    151:152:boolean isRegistered(java.lang.Object) -> isRegistered
    173:198:void reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[]) -> reflectionAppend
    238:238:int reflectionHashCode(int,int,java.lang.Object) -> reflectionHashCode
    282:282:int reflectionHashCode(int,int,java.lang.Object,boolean) -> reflectionHashCode
    335:345:int reflectionHashCode(int,int,java.lang.Object,boolean,java.lang.Class,java.lang.String[]) -> reflectionHashCode
    381:381:int reflectionHashCode(java.lang.Object,boolean) -> reflectionHashCode
    417:417:int reflectionHashCode(java.lang.Object,java.util.Collection) -> reflectionHashCode
    455:455:int reflectionHashCode(java.lang.Object,java.lang.String[]) -> reflectionHashCode
    467:473:void register(java.lang.Object) -> register
    488:499:void unregister(java.lang.Object) -> unregister
    509:519:void <init>() -> <init>
    509:553:void <init>(int,int) -> <init>
    577:578:org.apache.commons.lang3.builder.HashCodeBuilder append(boolean) -> append
    591:598:org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]) -> append
    613:614:org.apache.commons.lang3.builder.HashCodeBuilder append(byte) -> append
    629:636:org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]) -> append
    649:650:org.apache.commons.lang3.builder.HashCodeBuilder append(char) -> append
    663:670:org.apache.commons.lang3.builder.HashCodeBuilder append(char[]) -> append
    683:683:org.apache.commons.lang3.builder.HashCodeBuilder append(double) -> append
    696:703:org.apache.commons.lang3.builder.HashCodeBuilder append(double[]) -> append
    716:717:org.apache.commons.lang3.builder.HashCodeBuilder append(float) -> append
    730:737:org.apache.commons.lang3.builder.HashCodeBuilder append(float[]) -> append
    750:751:org.apache.commons.lang3.builder.HashCodeBuilder append(int) -> append
    764:771:org.apache.commons.lang3.builder.HashCodeBuilder append(int[]) -> append
    788:789:org.apache.commons.lang3.builder.HashCodeBuilder append(long) -> append
    802:809:org.apache.commons.lang3.builder.HashCodeBuilder append(long[]) -> append
    822:853:org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object) -> append
    866:873:org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]) -> append
    886:887:org.apache.commons.lang3.builder.HashCodeBuilder append(short) -> append
    900:907:org.apache.commons.lang3.builder.HashCodeBuilder append(short[]) -> append
    921:922:org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(int) -> appendSuper
    933:933:int toHashCode() -> toHashCode
    944:944:java.lang.Integer build() -> build
    958:958:int hashCode() -> hashCode
    100:100:java.lang.Object build() -> build
    108:108:void <clinit>() -> <clinit>
org.apache.commons.lang3.builder.IDKey -> org.apache.commons.lang3.builder.IDKey:
    java.lang.Object value -> value
    int id -> id
    39:46:void <init>(java.lang.Object) -> <init>
    54:54:int hashCode() -> hashCode
    64:72:boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.builder.ReflectionToStringBuilder -> org.apache.commons.lang3.builder.ReflectionToStringBuilder:
    boolean appendStatics -> appendStatics
    boolean appendTransients -> appendTransients
    java.lang.String[] excludeFieldNames -> excludeFieldNames
    java.lang.Class upToClass -> upToClass
    119:119:java.lang.String toString(java.lang.Object) -> toString
    151:151:java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> toString
    189:189:java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> toString
    235:235:java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean) -> toString
    288:288:java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class) -> toString
    302:302:java.lang.String toStringExclude(java.lang.Object,java.util.Collection) -> toStringExclude
    315:318:java.lang.String[] toNoNullStringArray(java.util.Collection) -> toNoNullStringArray
    331:337:java.lang.String[] toNoNullStringArray(java.lang.Object[]) -> toNoNullStringArray
    351:351:java.lang.String toStringExclude(java.lang.Object,java.lang.String[]) -> toStringExclude
    357:392:void <init>(java.lang.Object) -> <init>
    357:412:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> <init>
    357:438:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer) -> <init>
    357:466:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean) -> <init>
    481:498:boolean accept(java.lang.reflect.Field) -> accept
    515:538:void appendFieldsIn(java.lang.Class) -> appendFieldsIn
    544:544:java.lang.String[] getExcludeFieldNames() -> getExcludeFieldNames
    555:555:java.lang.Class getUpToClass() -> getUpToClass
    575:575:java.lang.Object getValue(java.lang.reflect.Field) -> getValue
    587:587:boolean isAppendStatics() -> isAppendStatics
    598:598:boolean isAppendTransients() -> isAppendTransients
    611:612:org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object) -> reflectionAppendArray
    625:626:void setAppendStatics(boolean) -> setAppendStatics
    637:638:void setAppendTransients(boolean) -> setAppendTransients
    648:655:org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]) -> setExcludeFieldNames
    667:674:void setUpToClass(java.lang.Class) -> setUpToClass
    685:694:java.lang.String toString() -> toString
org.apache.commons.lang3.builder.StandardToStringStyle -> org.apache.commons.lang3.builder.StandardToStringStyle:
    long serialVersionUID -> serialVersionUID
    44:45:void <init>() -> <init>
    56:56:boolean isUseClassName() -> isUseClassName
    66:67:void setUseClassName(boolean) -> setUseClassName
    79:79:boolean isUseShortClassName() -> isUseShortClassName
    90:91:void setUseShortClassName(boolean) -> setUseShortClassName
    101:101:boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    111:112:void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    123:123:boolean isUseFieldNames() -> isUseFieldNames
    133:134:void setUseFieldNames(boolean) -> setUseFieldNames
    146:146:boolean isDefaultFullDetail() -> isDefaultFullDetail
    157:158:void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    169:169:boolean isArrayContentDetail() -> isArrayContentDetail
    179:180:void setArrayContentDetail(boolean) -> setArrayContentDetail
    191:191:java.lang.String getArrayStart() -> getArrayStart
    204:205:void setArrayStart(java.lang.String) -> setArrayStart
    216:216:java.lang.String getArrayEnd() -> getArrayEnd
    229:230:void setArrayEnd(java.lang.String) -> setArrayEnd
    241:241:java.lang.String getArraySeparator() -> getArraySeparator
    254:255:void setArraySeparator(java.lang.String) -> setArraySeparator
    266:266:java.lang.String getContentStart() -> getContentStart
    279:280:void setContentStart(java.lang.String) -> setContentStart
    291:291:java.lang.String getContentEnd() -> getContentEnd
    304:305:void setContentEnd(java.lang.String) -> setContentEnd
    316:316:java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    329:330:void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    341:341:java.lang.String getFieldSeparator() -> getFieldSeparator
    354:355:void setFieldSeparator(java.lang.String) -> setFieldSeparator
    368:368:boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    380:381:void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    394:394:boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    406:407:void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    418:418:java.lang.String getNullText() -> getNullText
    431:432:void setNullText(java.lang.String) -> setNullText
    446:446:java.lang.String getSizeStartText() -> getSizeStartText
    462:463:void setSizeStartText(java.lang.String) -> setSizeStartText
    477:477:java.lang.String getSizeEndText() -> getSizeEndText
    493:494:void setSizeEndText(java.lang.String) -> setSizeEndText
    508:508:java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    524:525:void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    539:539:java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    555:556:void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
org.apache.commons.lang3.builder.ToStringBuilder -> org.apache.commons.lang3.builder.ToStringBuilder:
    org.apache.commons.lang3.builder.ToStringStyle defaultStyle -> defaultStyle
    java.lang.StringBuffer buffer -> buffer
    java.lang.Object object -> object
    org.apache.commons.lang3.builder.ToStringStyle style -> style
    117:117:org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle() -> getDefaultStyle
    136:140:void setDefaultStyle(org.apache.commons.lang3.builder.ToStringStyle) -> setDefaultStyle
    152:152:java.lang.String reflectionToString(java.lang.Object) -> reflectionToString
    165:165:java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> reflectionToString
    179:179:java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean) -> reflectionToString
    200:200:java.lang.String reflectionToString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,java.lang.Class) -> reflectionToString
    226:227:void <init>(java.lang.Object) -> <init>
    238:239:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle) -> <init>
    252:264:void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer) -> <init>
    276:277:org.apache.commons.lang3.builder.ToStringBuilder append(boolean) -> append
    290:291:org.apache.commons.lang3.builder.ToStringBuilder append(boolean[]) -> append
    304:305:org.apache.commons.lang3.builder.ToStringBuilder append(byte) -> append
    318:319:org.apache.commons.lang3.builder.ToStringBuilder append(byte[]) -> append
    332:333:org.apache.commons.lang3.builder.ToStringBuilder append(char) -> append
    346:347:org.apache.commons.lang3.builder.ToStringBuilder append(char[]) -> append
    360:361:org.apache.commons.lang3.builder.ToStringBuilder append(double) -> append
    374:375:org.apache.commons.lang3.builder.ToStringBuilder append(double[]) -> append
    388:389:org.apache.commons.lang3.builder.ToStringBuilder append(float) -> append
    402:403:org.apache.commons.lang3.builder.ToStringBuilder append(float[]) -> append
    416:417:org.apache.commons.lang3.builder.ToStringBuilder append(int) -> append
    430:431:org.apache.commons.lang3.builder.ToStringBuilder append(int[]) -> append
    444:445:org.apache.commons.lang3.builder.ToStringBuilder append(long) -> append
    458:459:org.apache.commons.lang3.builder.ToStringBuilder append(long[]) -> append
    472:473:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object) -> append
    486:487:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object[]) -> append
    500:501:org.apache.commons.lang3.builder.ToStringBuilder append(short) -> append
    514:515:org.apache.commons.lang3.builder.ToStringBuilder append(short[]) -> append
    527:528:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean) -> append
    540:541:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[]) -> append
    560:561:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,boolean[],boolean) -> append
    573:574:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte) -> append
    585:586:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[]) -> append
    605:606:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,byte[],boolean) -> append
    618:619:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char) -> append
    631:632:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[]) -> append
    651:652:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,char[],boolean) -> append
    664:665:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double) -> append
    677:678:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[]) -> append
    697:698:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,double[],boolean) -> append
    710:711:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float) -> append
    723:724:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[]) -> append
    743:744:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,float[],boolean) -> append
    756:757:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int) -> append
    769:770:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[]) -> append
    789:790:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,int[],boolean) -> append
    802:803:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long) -> append
    815:816:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[]) -> append
    835:836:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,long[],boolean) -> append
    848:849:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object) -> append
    863:864:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object,boolean) -> append
    876:877:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[]) -> append
    896:897:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object[],boolean) -> append
    909:910:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short) -> append
    922:923:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[]) -> append
    942:943:org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,short[],boolean) -> append
    956:957:org.apache.commons.lang3.builder.ToStringBuilder appendAsObjectToString(java.lang.Object) -> appendAsObjectToString
    975:978:org.apache.commons.lang3.builder.ToStringBuilder appendSuper(java.lang.String) -> appendSuper
    1009:1012:org.apache.commons.lang3.builder.ToStringBuilder appendToString(java.lang.String) -> appendToString
    1022:1022:java.lang.Object getObject() -> getObject
    1031:1031:java.lang.StringBuffer getStringBuffer() -> getStringBuffer
    1043:1043:org.apache.commons.lang3.builder.ToStringStyle getStyle() -> getStyle
    1058:1063:java.lang.String toString() -> toString
    1077:1077:java.lang.String build() -> build
    89:89:java.lang.Object build() -> build
    94:94:void <clinit>() -> <clinit>
org.apache.commons.lang3.builder.ToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.builder.ToStringStyle DEFAULT_STYLE -> DEFAULT_STYLE
    org.apache.commons.lang3.builder.ToStringStyle MULTI_LINE_STYLE -> MULTI_LINE_STYLE
    org.apache.commons.lang3.builder.ToStringStyle NO_FIELD_NAMES_STYLE -> NO_FIELD_NAMES_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SHORT_PREFIX_STYLE -> SHORT_PREFIX_STYLE
    org.apache.commons.lang3.builder.ToStringStyle SIMPLE_STYLE -> SIMPLE_STYLE
    java.lang.ThreadLocal REGISTRY -> REGISTRY
    boolean useFieldNames -> useFieldNames
    boolean useClassName -> useClassName
    boolean useShortClassName -> useShortClassName
    boolean useIdentityHashCode -> useIdentityHashCode
    java.lang.String contentStart -> contentStart
    java.lang.String contentEnd -> contentEnd
    java.lang.String fieldNameValueSeparator -> fieldNameValueSeparator
    boolean fieldSeparatorAtStart -> fieldSeparatorAtStart
    boolean fieldSeparatorAtEnd -> fieldSeparatorAtEnd
    java.lang.String fieldSeparator -> fieldSeparator
    java.lang.String arrayStart -> arrayStart
    java.lang.String arraySeparator -> arraySeparator
    boolean arrayContentDetail -> arrayContentDetail
    java.lang.String arrayEnd -> arrayEnd
    boolean defaultFullDetail -> defaultFullDetail
    java.lang.String nullText -> nullText
    java.lang.String sizeStartText -> sizeStartText
    java.lang.String sizeEndText -> sizeEndText
    java.lang.String summaryObjectStartText -> summaryObjectStartText
    java.lang.String summaryObjectEndText -> summaryObjectEndText
    148:148:java.util.Map getRegistry() -> getRegistry
    163:164:boolean isRegistered(java.lang.Object) -> isRegistered
    177:184:void register(java.lang.Object) -> register
    199:208:void unregister(java.lang.Object) -> unregister
    213:318:void <init>() -> <init>
    333:334:void appendSuper(java.lang.StringBuffer,java.lang.String) -> appendSuper
    347:359:void appendToString(java.lang.StringBuffer,java.lang.String) -> appendToString
    368:376:void appendStart(java.lang.StringBuffer,java.lang.Object) -> appendStart
    386:391:void appendEnd(java.lang.StringBuffer,java.lang.Object) -> appendEnd
    400:414:void removeLastFieldSeparator(java.lang.StringBuffer) -> removeLastFieldSeparator
    430:440:void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean) -> append
    462:558:void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> appendInternal
    573:574:void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendCyclicObject
    586:587:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendDetail
    598:599:void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection) -> appendDetail
    610:611:void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map) -> appendDetail
    623:626:void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> appendSummary
    639:642:void append(java.lang.StringBuffer,java.lang.String,long) -> append
    653:654:void appendDetail(java.lang.StringBuffer,java.lang.String,long) -> appendDetail
    667:670:void append(java.lang.StringBuffer,java.lang.String,int) -> append
    681:682:void appendDetail(java.lang.StringBuffer,java.lang.String,int) -> appendDetail
    695:698:void append(java.lang.StringBuffer,java.lang.String,short) -> append
    709:710:void appendDetail(java.lang.StringBuffer,java.lang.String,short) -> appendDetail
    723:726:void append(java.lang.StringBuffer,java.lang.String,byte) -> append
    737:738:void appendDetail(java.lang.StringBuffer,java.lang.String,byte) -> appendDetail
    751:754:void append(java.lang.StringBuffer,java.lang.String,char) -> append
    765:766:void appendDetail(java.lang.StringBuffer,java.lang.String,char) -> appendDetail
    779:782:void append(java.lang.StringBuffer,java.lang.String,double) -> append
    793:794:void appendDetail(java.lang.StringBuffer,java.lang.String,double) -> appendDetail
    807:810:void append(java.lang.StringBuffer,java.lang.String,float) -> append
    821:822:void appendDetail(java.lang.StringBuffer,java.lang.String,float) -> appendDetail
    835:838:void append(java.lang.StringBuffer,java.lang.String,boolean) -> append
    849:850:void appendDetail(java.lang.StringBuffer,java.lang.String,boolean) -> appendDetail
    863:876:void append(java.lang.StringBuffer,java.lang.String,java.lang.Object[],java.lang.Boolean) -> append
    890:904:void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendDetail
    916:931:void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object) -> reflectionAppendArrayDetail
    943:944:void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]) -> appendSummary
    959:972:void append(java.lang.StringBuffer,java.lang.String,long[],java.lang.Boolean) -> append
    984:992:void appendDetail(java.lang.StringBuffer,java.lang.String,long[]) -> appendDetail
    1004:1005:void appendSummary(java.lang.StringBuffer,java.lang.String,long[]) -> appendSummary
    1020:1033:void append(java.lang.StringBuffer,java.lang.String,int[],java.lang.Boolean) -> append
    1045:1053:void appendDetail(java.lang.StringBuffer,java.lang.String,int[]) -> appendDetail
    1065:1066:void appendSummary(java.lang.StringBuffer,java.lang.String,int[]) -> appendSummary
    1081:1094:void append(java.lang.StringBuffer,java.lang.String,short[],java.lang.Boolean) -> append
    1106:1114:void appendDetail(java.lang.StringBuffer,java.lang.String,short[]) -> appendDetail
    1126:1127:void appendSummary(java.lang.StringBuffer,java.lang.String,short[]) -> appendSummary
    1142:1155:void append(java.lang.StringBuffer,java.lang.String,byte[],java.lang.Boolean) -> append
    1167:1175:void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]) -> appendDetail
    1187:1188:void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]) -> appendSummary
    1203:1216:void append(java.lang.StringBuffer,java.lang.String,char[],java.lang.Boolean) -> append
    1228:1236:void appendDetail(java.lang.StringBuffer,java.lang.String,char[]) -> appendDetail
    1248:1249:void appendSummary(java.lang.StringBuffer,java.lang.String,char[]) -> appendSummary
    1264:1277:void append(java.lang.StringBuffer,java.lang.String,double[],java.lang.Boolean) -> append
    1289:1297:void appendDetail(java.lang.StringBuffer,java.lang.String,double[]) -> appendDetail
    1309:1310:void appendSummary(java.lang.StringBuffer,java.lang.String,double[]) -> appendSummary
    1325:1338:void append(java.lang.StringBuffer,java.lang.String,float[],java.lang.Boolean) -> append
    1350:1358:void appendDetail(java.lang.StringBuffer,java.lang.String,float[]) -> appendDetail
    1370:1371:void appendSummary(java.lang.StringBuffer,java.lang.String,float[]) -> appendSummary
    1386:1399:void append(java.lang.StringBuffer,java.lang.String,boolean[],java.lang.Boolean) -> append
    1411:1419:void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendDetail
    1431:1432:void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]) -> appendSummary
    1443:1451:void appendClassName(java.lang.StringBuffer,java.lang.Object) -> appendClassName
    1460:1465:void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object) -> appendIdentityHashCode
    1473:1474:void appendContentStart(java.lang.StringBuffer) -> appendContentStart
    1482:1483:void appendContentEnd(java.lang.StringBuffer) -> appendContentEnd
    1494:1495:void appendNullText(java.lang.StringBuffer,java.lang.String) -> appendNullText
    1503:1504:void appendFieldSeparator(java.lang.StringBuffer) -> appendFieldSeparator
    1513:1517:void appendFieldStart(java.lang.StringBuffer,java.lang.String) -> appendFieldStart
    1526:1527:void appendFieldEnd(java.lang.StringBuffer,java.lang.String) -> appendFieldEnd
    1545:1548:void appendSummarySize(java.lang.StringBuffer,java.lang.String,int) -> appendSummarySize
    1565:1568:boolean isFullDetail(java.lang.Boolean) -> isFullDetail
    1581:1581:java.lang.String getShortClassName(java.lang.Class) -> getShortClassName
    1595:1595:boolean isUseClassName() -> isUseClassName
    1604:1605:void setUseClassName(boolean) -> setUseClassName
    1616:1616:boolean isUseShortClassName() -> isUseShortClassName
    1626:1627:void setUseShortClassName(boolean) -> setUseShortClassName
    1637:1637:boolean isUseIdentityHashCode() -> isUseIdentityHashCode
    1646:1647:void setUseIdentityHashCode(boolean) -> setUseIdentityHashCode
    1657:1657:boolean isUseFieldNames() -> isUseFieldNames
    1666:1667:void setUseFieldNames(boolean) -> setUseFieldNames
    1678:1678:boolean isDefaultFullDetail() -> isDefaultFullDetail
    1688:1689:void setDefaultFullDetail(boolean) -> setDefaultFullDetail
    1699:1699:boolean isArrayContentDetail() -> isArrayContentDetail
    1708:1709:void setArrayContentDetail(boolean) -> setArrayContentDetail
    1719:1719:java.lang.String getArrayStart() -> getArrayStart
    1731:1735:void setArrayStart(java.lang.String) -> setArrayStart
    1745:1745:java.lang.String getArrayEnd() -> getArrayEnd
    1757:1761:void setArrayEnd(java.lang.String) -> setArrayEnd
    1771:1771:java.lang.String getArraySeparator() -> getArraySeparator
    1783:1787:void setArraySeparator(java.lang.String) -> setArraySeparator
    1797:1797:java.lang.String getContentStart() -> getContentStart
    1809:1813:void setContentStart(java.lang.String) -> setContentStart
    1823:1823:java.lang.String getContentEnd() -> getContentEnd
    1835:1839:void setContentEnd(java.lang.String) -> setContentEnd
    1849:1849:java.lang.String getFieldNameValueSeparator() -> getFieldNameValueSeparator
    1861:1865:void setFieldNameValueSeparator(java.lang.String) -> setFieldNameValueSeparator
    1875:1875:java.lang.String getFieldSeparator() -> getFieldSeparator
    1887:1891:void setFieldSeparator(java.lang.String) -> setFieldSeparator
    1903:1903:boolean isFieldSeparatorAtStart() -> isFieldSeparatorAtStart
    1914:1915:void setFieldSeparatorAtStart(boolean) -> setFieldSeparatorAtStart
    1927:1927:boolean isFieldSeparatorAtEnd() -> isFieldSeparatorAtEnd
    1938:1939:void setFieldSeparatorAtEnd(boolean) -> setFieldSeparatorAtEnd
    1949:1949:java.lang.String getNullText() -> getNullText
    1961:1965:void setNullText(java.lang.String) -> setNullText
    1978:1978:java.lang.String getSizeStartText() -> getSizeStartText
    1993:1997:void setSizeStartText(java.lang.String) -> setSizeStartText
    2010:2010:java.lang.String getSizeEndText() -> getSizeEndText
    2025:2029:void setSizeEndText(java.lang.String) -> setSizeEndText
    2042:2042:java.lang.String getSummaryObjectStartText() -> getSummaryObjectStartText
    2057:2061:void setSummaryObjectStartText(java.lang.String) -> setSummaryObjectStartText
    2074:2074:java.lang.String getSummaryObjectEndText() -> getSummaryObjectEndText
    2089:2093:void setSummaryObjectEndText(java.lang.String) -> setSummaryObjectEndText
    81:136:void <clinit>() -> <clinit>
org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle:
    long serialVersionUID -> serialVersionUID
    2118:2119:void <init>() -> <init>
    2127:2127:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle:
    long serialVersionUID -> serialVersionUID
    2253:2258:void <init>() -> <init>
    2266:2266:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle:
    long serialVersionUID -> serialVersionUID
    2151:2153:void <init>() -> <init>
    2161:2161:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle:
    long serialVersionUID -> serialVersionUID
    2185:2188:void <init>() -> <init>
    2195:2195:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle -> org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle:
    long serialVersionUID -> serialVersionUID
    2217:2223:void <init>() -> <init>
    2230:2230:java.lang.Object readResolve() -> readResolve
org.apache.commons.lang3.concurrent.AtomicInitializer -> org.apache.commons.lang3.concurrent.AtomicInitializer:
    java.util.concurrent.atomic.AtomicReference reference -> reference
    67:69:void <init>() -> <init>
    81:91:java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.AtomicSafeInitializer -> org.apache.commons.lang3.concurrent.AtomicSafeInitializer:
    java.util.concurrent.atomic.AtomicReference factory -> factory
    java.util.concurrent.atomic.AtomicReference reference -> reference
    56:63:void <init>() -> <init>
    75:81:java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.BackgroundInitializer -> org.apache.commons.lang3.concurrent.BackgroundInitializer:
    java.util.concurrent.ExecutorService externalExecutor -> externalExecutor
    java.util.concurrent.ExecutorService executor -> executor
    java.util.concurrent.Future future -> future
    102:103:void <init>() -> <init>
    115:117:void <init>(java.util.concurrent.ExecutorService) -> <init>
    125:125:java.util.concurrent.ExecutorService getExternalExecutor() -> getExternalExecutor
    136:136:boolean isStarted() -> isStarted
    155:161:void setExternalExecutor(java.util.concurrent.ExecutorService) -> setExternalExecutor
    175:192:boolean start() -> start
    211:218:java.lang.Object get() -> get
    231:235:java.util.concurrent.Future getFuture() -> getFuture
    248:248:java.util.concurrent.ExecutorService getActiveExecutor() -> getActiveExecutor
    263:263:int getTaskCount() -> getTaskCount
    java.lang.Object initialize() -> initialize
    290:290:java.util.concurrent.Callable createTask(java.util.concurrent.ExecutorService) -> createTask
    300:300:java.util.concurrent.ExecutorService createExecutor() -> createExecutor
org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask -> org.apache.commons.lang3.concurrent.BackgroundInitializer$InitializationTask:
    java.util.concurrent.ExecutorService execFinally -> execFinally
    org.apache.commons.lang3.concurrent.BackgroundInitializer this$0 -> this$0
    313:315:void <init>(org.apache.commons.lang3.concurrent.BackgroundInitializer,java.util.concurrent.ExecutorService) -> <init>
    325:328:java.lang.Object call() -> call
org.apache.commons.lang3.concurrent.BasicThreadFactory -> org.apache.commons.lang3.concurrent.BasicThreadFactory:
    java.util.concurrent.atomic.AtomicLong threadCounter -> threadCounter
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> uncaughtExceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    115:128:void <init>(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> <init>
    139:139:java.util.concurrent.ThreadFactory getWrappedFactory() -> getWrappedFactory
    149:149:java.lang.String getNamingPattern() -> getNamingPattern
    161:161:java.lang.Boolean getDaemonFlag() -> getDaemonFlag
    171:171:java.lang.Integer getPriority() -> getPriority
    181:181:java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler() -> getUncaughtExceptionHandler
    192:192:long getThreadCount() -> getThreadCount
    204:207:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    220:236:void initializeThread(java.lang.Thread) -> initializeThread
    90:90:void <init>(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder,org.apache.commons.lang3.concurrent.BasicThreadFactory$1) -> <init>
org.apache.commons.lang3.concurrent.BasicThreadFactory$1 -> org.apache.commons.lang3.concurrent.BasicThreadFactory$1:
org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder -> org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder:
    java.util.concurrent.ThreadFactory wrappedFactory -> wrappedFactory
    java.lang.Thread$UncaughtExceptionHandler exceptionHandler -> exceptionHandler
    java.lang.String namingPattern -> namingPattern
    java.lang.Integer priority -> priority
    java.lang.Boolean daemonFlag -> daemonFlag
    253:253:void <init>() -> <init>
    282:288:org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder wrappedFactory(java.util.concurrent.ThreadFactory) -> wrappedFactory
    300:306:org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder namingPattern(java.lang.String) -> namingPattern
    318:319:org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder daemon(boolean) -> daemon
    330:331:org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder priority(int) -> priority
    345:351:org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder uncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> uncaughtExceptionHandler
    361:366:void reset() -> reset
    376:378:org.apache.commons.lang3.concurrent.BasicThreadFactory build() -> build
    253:253:java.lang.Object build() -> build
    253:253:java.util.concurrent.ThreadFactory access$000(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$000
    253:253:java.lang.String access$100(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$100
    253:253:java.lang.Integer access$200(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$200
    253:253:java.lang.Boolean access$300(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$300
    253:253:java.lang.Thread$UncaughtExceptionHandler access$400(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder) -> access$400
org.apache.commons.lang3.concurrent.CallableBackgroundInitializer -> org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:
    java.util.concurrent.Callable callable -> callable
    79:82:void <init>(java.util.concurrent.Callable) -> <init>
    96:99:void <init>(java.util.concurrent.Callable,java.util.concurrent.ExecutorService) -> <init>
    111:111:java.lang.Object initialize() -> initialize
    122:125:void checkCallable(java.util.concurrent.Callable) -> checkCallable
org.apache.commons.lang3.concurrent.ConcurrentException -> org.apache.commons.lang3.concurrent.ConcurrentException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>() -> <init>
    56:57:void <init>(java.lang.Throwable) -> <init>
    68:69:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang3.concurrent.ConcurrentInitializer -> org.apache.commons.lang3.concurrent.ConcurrentInitializer:
    java.lang.Object get() -> get
org.apache.commons.lang3.concurrent.ConcurrentRuntimeException -> org.apache.commons.lang3.concurrent.ConcurrentRuntimeException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
    58:59:void <init>(java.lang.Throwable) -> <init>
    70:71:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang3.concurrent.ConcurrentUtils -> org.apache.commons.lang3.concurrent.ConcurrentUtils:
    39:40:void <init>() -> <init>
    61:66:org.apache.commons.lang3.concurrent.ConcurrentException extractCause(java.util.concurrent.ExecutionException) -> extractCause
    83:88:org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException) -> extractCauseUnchecked
    106:111:void handleCause(java.util.concurrent.ExecutionException) -> handleCause
    127:132:void handleCauseUnchecked(java.util.concurrent.ExecutionException) -> handleCauseUnchecked
    144:148:java.lang.Throwable checkedException(java.lang.Throwable) -> checkedException
    159:166:void throwCause(java.util.concurrent.ExecutionException) -> throwCause
    184:184:java.lang.Object initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initialize
    202:204:java.lang.Object initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> initializeUnchecked
    242:247:java.lang.Object putIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,java.lang.Object) -> putIfAbsent
    272:280:java.lang.Object createIfAbsent(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsent
    301:303:java.lang.Object createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap,java.lang.Object,org.apache.commons.lang3.concurrent.ConcurrentInitializer) -> createIfAbsentUnchecked
    324:324:java.util.concurrent.Future constantFuture(java.lang.Object) -> constantFuture
org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture -> org.apache.commons.lang3.concurrent.ConcurrentUtils$ConstantFuture:
    java.lang.Object value -> value
    341:343:void <init>(java.lang.Object) -> <init>
    351:351:boolean isDone() -> isDone
    358:358:java.lang.Object get() -> get
    366:366:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    374:374:boolean isCancelled() -> isCancelled
    382:382:boolean cancel(boolean) -> cancel
org.apache.commons.lang3.concurrent.ConstantInitializer -> org.apache.commons.lang3.concurrent.ConstantInitializer:
    java.lang.String FMT_TO_STRING -> FMT_TO_STRING
    java.lang.Object object -> object
    57:59:void <init>(java.lang.Object) -> <init>
    69:69:java.lang.Object getObject() -> getObject
    80:80:java.lang.Object get() -> get
    91:91:int hashCode() -> hashCode
    105:113:boolean equals(java.lang.Object) -> equals
    125:125:java.lang.String toString() -> toString
org.apache.commons.lang3.concurrent.LazyInitializer -> org.apache.commons.lang3.concurrent.LazyInitializer:
    java.lang.Object object -> object
    79:79:void <init>() -> <init>
    94:105:java.lang.Object get() -> get
    java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:
    java.util.Map childInitializers -> childInitializers
    101:109:void <init>() -> <init>
    101:120:void <init>(java.util.concurrent.ExecutorService) -> <init>
    135:151:void addInitializer(java.lang.String,org.apache.commons.lang3.concurrent.BackgroundInitializer) -> addInitializer
    165:171:int getTaskCount() -> getTaskCount
    187:214:org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults initialize() -> initialize
    97:97:java.lang.Object initialize() -> initialize
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1 -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1:
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults -> org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults:
    java.util.Map initializers -> initializers
    java.util.Map resultObjects -> resultObjects
    java.util.Map exceptions -> exceptions
    249:253:void <init>(java.util.Map,java.util.Map,java.util.Map) -> <init>
    264:264:org.apache.commons.lang3.concurrent.BackgroundInitializer getInitializer(java.lang.String) -> getInitializer
    280:281:java.lang.Object getResultObject(java.lang.String) -> getResultObject
    293:294:boolean isException(java.lang.String) -> isException
    308:309:org.apache.commons.lang3.concurrent.ConcurrentException getException(java.lang.String) -> getException
    320:320:java.util.Set initializerNames() -> initializerNames
    330:330:boolean isSuccessful() -> isSuccessful
    343:349:org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String) -> checkName
    227:227:void <init>(java.util.Map,java.util.Map,java.util.Map,org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$1) -> <init>
org.apache.commons.lang3.concurrent.TimedSemaphore -> org.apache.commons.lang3.concurrent.TimedSemaphore:
    int NO_LIMIT -> NO_LIMIT
    int THREAD_POOL_SIZE -> THREAD_POOL_SIZE
    java.util.concurrent.ScheduledExecutorService executorService -> executorService
    long period -> period
    java.util.concurrent.TimeUnit unit -> unit
    boolean ownExecutor -> ownExecutor
    java.util.concurrent.ScheduledFuture task -> task
    long totalAcquireCount -> totalAcquireCount
    long periodCount -> periodCount
    int limit -> limit
    int acquireCount -> acquireCount
    int lastCallsPerPeriod -> lastCallsPerPeriod
    boolean shutdown -> shutdown
    185:186:void <init>(long,java.util.concurrent.TimeUnit,int) -> <init>
    201:222:void <init>(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int) -> <init>
    232:232:int getLimit() -> getLimit
    246:247:void setLimit(int) -> setLimit
    255:268:void shutdown() -> shutdown
    278:278:boolean isShutdown() -> isShutdown
    293:310:void acquire() -> acquire
    323:323:int getLastAcquiresPerPeriod() -> getLastAcquiresPerPeriod
    333:333:int getAcquireCount() -> getAcquireCount
    348:348:int getAvailablePermits() -> getAvailablePermits
    361:361:double getAverageCallsPerPeriod() -> getAverageCallsPerPeriod
    373:373:long getPeriod() -> getPeriod
    382:382:java.util.concurrent.TimeUnit getUnit() -> getUnit
    391:391:java.util.concurrent.ScheduledExecutorService getExecutorService() -> getExecutorService
    402:402:java.util.concurrent.ScheduledFuture startTimer() -> startTimer
    415:420:void endOfPeriod() -> endOfPeriod
org.apache.commons.lang3.concurrent.TimedSemaphore$1 -> org.apache.commons.lang3.concurrent.TimedSemaphore$1:
    org.apache.commons.lang3.concurrent.TimedSemaphore this$0 -> this$0
    403:403:void <init>(org.apache.commons.lang3.concurrent.TimedSemaphore) -> <init>
    404:405:void run() -> run
org.apache.commons.lang3.event.EventListenerSupport -> org.apache.commons.lang3.event.EventListenerSupport:
    long serialVersionUID -> serialVersionUID
    java.util.List listeners -> listeners
    java.lang.Object proxy -> proxy
    java.lang.Object[] prototypeArray -> prototypeArray
    106:106:org.apache.commons.lang3.event.EventListenerSupport create(java.lang.Class) -> create
    122:123:void <init>(java.lang.Class) -> <init>
    139:145:void <init>(java.lang.Class,java.lang.ClassLoader) -> <init>
    76:152:void <init>() -> <init>
    163:163:java.lang.Object fire() -> fire
    179:181:void addListener(java.lang.Object) -> addListener
    189:189:int getListenerCount() -> getListenerCount
    201:203:void removeListener(java.lang.Object) -> removeListener
    212:212:java.lang.Object[] getListeners() -> getListeners
    221:239:void writeObject(java.io.ObjectOutputStream) -> writeObject
    249:257:void readObject(java.io.ObjectInputStream) -> readObject
    266:269:void initializeTransientFields(java.lang.Class,java.lang.ClassLoader) -> initializeTransientFields
    277:279:void createProxy(java.lang.Class,java.lang.ClassLoader) -> createProxy
    287:287:java.lang.reflect.InvocationHandler createInvocationHandler() -> createInvocationHandler
    66:66:java.util.List access$000(org.apache.commons.lang3.event.EventListenerSupport) -> access$000
org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler -> org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.event.EventListenerSupport this$0 -> this$0
    293:293:void <init>(org.apache.commons.lang3.event.EventListenerSupport) -> <init>
    310:313:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.apache.commons.lang3.event.EventUtils -> org.apache.commons.lang3.event.EventUtils:
    36:82:void <init>() -> <init>
    50:62:void addEventListener(java.lang.Object,java.lang.Class,java.lang.Object) -> addEventListener
    77:80:void bindEventsToMethod(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class,java.lang.String[]) -> bindEventsToMethod
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler -> org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler:
    java.lang.Object target -> target
    java.lang.String methodName -> methodName
    java.util.Set eventTypes -> eventTypes
    94:98:void <init>(java.lang.Object,java.lang.String,java.lang.String[]) -> <init>
    110:117:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    127:127:boolean hasMatchingParametersMethod(java.lang.reflect.Method) -> hasMatchingParametersMethod
org.apache.commons.lang3.exception.CloneFailedException -> org.apache.commons.lang3.exception.CloneFailedException:
    long serialVersionUID -> serialVersionUID
    39:40:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
    60:61:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.commons.lang3.exception.ContextedException -> org.apache.commons.lang3.exception.ContextedException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    97:99:void <init>() -> <init>
    109:111:void <init>(java.lang.String) -> <init>
    121:123:void <init>(java.lang.Throwable) -> <init>
    134:136:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    146:151:void <init>(java.lang.String,java.lang.Throwable,org.apache.commons.lang3.exception.ExceptionContext) -> <init>
    168:169:org.apache.commons.lang3.exception.ContextedException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    186:187:org.apache.commons.lang3.exception.ContextedException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    194:194:java.util.List getContextValues(java.lang.String) -> getContextValues
    201:201:java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    208:208:java.util.List getContextEntries() -> getContextEntries
    215:215:java.util.Set getContextLabels() -> getContextLabels
    226:226:java.lang.String getMessage() -> getMessage
    233:233:java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    84:84:org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    84:84:org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ContextedRuntimeException -> org.apache.commons.lang3.exception.ContextedRuntimeException:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.exception.ExceptionContext exceptionContext -> exceptionContext
    97:99:void <init>() -> <init>
    109:111:void <init>(java.lang.String) -> <init>
    121:123:void <init>(java.lang.Throwable) -> <init>
    134:136:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    146:151:void <init>(java.lang.String,java.lang.Throwable,org.apache.commons.lang3.exception.ExceptionContext) -> <init>
    168:169:org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    186:187:org.apache.commons.lang3.exception.ContextedRuntimeException setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    194:194:java.util.List getContextValues(java.lang.String) -> getContextValues
    201:201:java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    208:208:java.util.List getContextEntries() -> getContextEntries
    215:215:java.util.Set getContextLabels() -> getContextLabels
    226:226:java.lang.String getMessage() -> getMessage
    233:233:java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    84:84:org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    84:84:org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.DefaultExceptionContext -> org.apache.commons.lang3.exception.DefaultExceptionContext:
    long serialVersionUID -> serialVersionUID
    java.util.List contextValues -> contextValues
    41:47:void <init>() -> <init>
    53:54:org.apache.commons.lang3.exception.DefaultExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    61:68:org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    75:81:java.util.List getContextValues(java.lang.String) -> getContextValues
    88:93:java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    100:104:java.util.Set getContextLabels() -> getContextLabels
    111:111:java.util.List getContextEntries() -> getContextEntries
    121:155:java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
    41:41:org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    41:41:org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
org.apache.commons.lang3.exception.ExceptionContext -> org.apache.commons.lang3.exception.ExceptionContext:
    org.apache.commons.lang3.exception.ExceptionContext addContextValue(java.lang.String,java.lang.Object) -> addContextValue
    org.apache.commons.lang3.exception.ExceptionContext setContextValue(java.lang.String,java.lang.Object) -> setContextValue
    java.util.List getContextValues(java.lang.String) -> getContextValues
    java.lang.Object getFirstContextValue(java.lang.String) -> getFirstContextValue
    java.util.Set getContextLabels() -> getContextLabels
    java.util.List getContextEntries() -> getContextEntries
    java.lang.String getFormattedExceptionMessage(java.lang.String) -> getFormattedExceptionMessage
org.apache.commons.lang3.exception.ExceptionUtils -> org.apache.commons.lang3.exception.ExceptionUtils:
    java.lang.String WRAPPED_MARKER -> WRAPPED_MARKER
    java.lang.String[] CAUSE_METHOD_NAMES -> CAUSE_METHOD_NAMES
    76:77:void <init>() -> <init>
    91:91:java.lang.String[] getDefaultCauseMethodNames() -> getDefaultCauseMethodNames
    124:124:java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    142:159:java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    180:181:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    193:213:java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> getCauseUsingMethodName
    234:234:int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    257:258:java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    281:286:java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    305:305:int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    328:328:int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    348:348:int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    372:372:int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    387:410:int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> indexOf
    433:434:void printRootCauseStackTrace(java.lang.Throwable) -> printRootCauseStackTrace
    456:467:void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintStream) -> printRootCauseStackTrace
    489:500:void printRootCauseStackTrace(java.lang.Throwable,java.io.PrintWriter) -> printRootCauseStackTrace
    517:539:java.lang.String[] getRootCauseStackTrace(java.lang.Throwable) -> getRootCauseStackTrace
    551:567:void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    583:586:java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    603:606:java.lang.String[] getStackFrames(java.lang.Throwable) -> getStackFrames
    619:625:java.lang.String[] getStackFrames(java.lang.String) -> getStackFrames
    641:657:java.util.List getStackFrameList(java.lang.Throwable) -> getStackFrameList
    672:677:java.lang.String getMessage(java.lang.Throwable) -> getMessage
    692:694:java.lang.String getRootCauseMessage(java.lang.Throwable) -> getRootCauseMessage
    54:54:void <clinit>() -> <clinit>
org.apache.commons.lang3.math.Fraction -> org.apache.commons.lang3.math.Fraction:
    long serialVersionUID -> serialVersionUID
    org.apache.commons.lang3.math.Fraction ZERO -> ZERO
    org.apache.commons.lang3.math.Fraction ONE -> ONE
    org.apache.commons.lang3.math.Fraction ONE_HALF -> ONE_HALF
    org.apache.commons.lang3.math.Fraction ONE_THIRD -> ONE_THIRD
    org.apache.commons.lang3.math.Fraction TWO_THIRDS -> TWO_THIRDS
    org.apache.commons.lang3.math.Fraction ONE_QUARTER -> ONE_QUARTER
    org.apache.commons.lang3.math.Fraction TWO_QUARTERS -> TWO_QUARTERS
    org.apache.commons.lang3.math.Fraction THREE_QUARTERS -> THREE_QUARTERS
    org.apache.commons.lang3.math.Fraction ONE_FIFTH -> ONE_FIFTH
    org.apache.commons.lang3.math.Fraction TWO_FIFTHS -> TWO_FIFTHS
    org.apache.commons.lang3.math.Fraction THREE_FIFTHS -> THREE_FIFTHS
    org.apache.commons.lang3.math.Fraction FOUR_FIFTHS -> FOUR_FIFTHS
    int numerator -> numerator
    int denominator -> denominator
    int hashCode -> hashCode
    java.lang.String toString -> toString
    java.lang.String toProperString -> toProperString
    106:127:void <init>(int,int) -> <init>
    142:153:org.apache.commons.lang3.math.Fraction getFraction(int,int) -> getFraction
    173:192:org.apache.commons.lang3.math.Fraction getFraction(int,int,int) -> getFraction
    210:232:org.apache.commons.lang3.math.Fraction getReducedFraction(int,int) -> getReducedFraction
    250:298:org.apache.commons.lang3.math.Fraction getFraction(double) -> getFraction
    320:352:org.apache.commons.lang3.math.Fraction getFraction(java.lang.String) -> getFraction
    368:368:int getNumerator() -> getNumerator
    377:377:int getDenominator() -> getDenominator
    392:392:int getProperNumerator() -> getProperNumerator
    407:407:int getProperWhole() -> getProperWhole
    421:421:int intValue() -> intValue
    432:432:long longValue() -> longValue
    443:443:float floatValue() -> floatValue
    454:454:double doubleValue() -> doubleValue
    470:477:org.apache.commons.lang3.math.Fraction reduce() -> reduce
    490:499:org.apache.commons.lang3.math.Fraction invert() -> invert
    512:515:org.apache.commons.lang3.math.Fraction negate() -> negate
    528:531:org.apache.commons.lang3.math.Fraction abs() -> abs
    547:561:org.apache.commons.lang3.math.Fraction pow(int) -> pow
    578:624:int greatestCommonDivisor(int,int) -> greatestCommonDivisor
    640:645:int mulAndCheck(int,int) -> mulAndCheck
    659:663:int mulPosAndCheck(int,int) -> mulPosAndCheck
    676:681:int addAndCheck(int,int) -> addAndCheck
    694:699:int subAndCheck(int,int) -> subAndCheck
    713:713:org.apache.commons.lang3.math.Fraction add(org.apache.commons.lang3.math.Fraction) -> add
    727:727:org.apache.commons.lang3.math.Fraction subtract(org.apache.commons.lang3.math.Fraction) -> subtract
    741:781:org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction,boolean) -> addSub
    797:807:org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction) -> multiplyBy
    823:829:org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction) -> divideBy
    845:852:boolean equals(java.lang.Object) -> equals
    863:867:int hashCode() -> hashCode
    883:898:int compareTo(org.apache.commons.lang3.math.Fraction) -> compareTo
    911:917:java.lang.String toString() -> toString
    930:957:java.lang.String toProperString() -> toProperString
    35:35:int compareTo(java.lang.Object) -> compareTo
    47:91:void <clinit>() -> <clinit>
org.apache.commons.lang3.math.IEEE754rUtils -> org.apache.commons.lang3.math.IEEE754rUtils:
    27:27:void <init>() -> <init>
    39:51:double min(double[]) -> min
    64:76:float min(float[]) -> min
    90:90:double min(double,double,double) -> min
    103:109:double min(double,double) -> min
    124:124:float min(float,float,float) -> min
    137:143:float min(float,float) -> min
    157:169:double max(double[]) -> max
    182:194:float max(float[]) -> max
    208:208:double max(double,double,double) -> max
    221:227:double max(double,double) -> max
    242:242:float max(float,float,float) -> max
    255:261:float max(float,float) -> max
org.apache.commons.lang3.math.NumberUtils -> org.apache.commons.lang3.math.NumberUtils:
    java.lang.Long LONG_ZERO -> LONG_ZERO
    java.lang.Long LONG_ONE -> LONG_ONE
    java.lang.Long LONG_MINUS_ONE -> LONG_MINUS_ONE
    java.lang.Integer INTEGER_ZERO -> INTEGER_ZERO
    java.lang.Integer INTEGER_ONE -> INTEGER_ONE
    java.lang.Integer INTEGER_MINUS_ONE -> INTEGER_MINUS_ONE
    java.lang.Short SHORT_ZERO -> SHORT_ZERO
    java.lang.Short SHORT_ONE -> SHORT_ONE
    java.lang.Short SHORT_MINUS_ONE -> SHORT_MINUS_ONE
    java.lang.Byte BYTE_ZERO -> BYTE_ZERO
    java.lang.Byte BYTE_ONE -> BYTE_ONE
    java.lang.Byte BYTE_MINUS_ONE -> BYTE_MINUS_ONE
    java.lang.Double DOUBLE_ZERO -> DOUBLE_ZERO
    java.lang.Double DOUBLE_ONE -> DOUBLE_ONE
    java.lang.Double DOUBLE_MINUS_ONE -> DOUBLE_MINUS_ONE
    java.lang.Float FLOAT_ZERO -> FLOAT_ZERO
    java.lang.Float FLOAT_ONE -> FLOAT_ONE
    java.lang.Float FLOAT_MINUS_ONE -> FLOAT_MINUS_ONE
    77:78:void <init>() -> <init>
    99:99:int toInt(java.lang.String) -> toInt
    120:126:int toInt(java.lang.String,int) -> toInt
    148:148:long toLong(java.lang.String) -> toLong
    169:175:long toLong(java.lang.String,long) -> toLong
    198:198:float toFloat(java.lang.String) -> toFloat
    221:227:float toFloat(java.lang.String,float) -> toFloat
    250:250:double toDouble(java.lang.String) -> toDouble
    273:279:double toDouble(java.lang.String,double) -> toDouble
    302:302:byte toByte(java.lang.String) -> toByte
    323:329:byte toByte(java.lang.String,byte) -> toByte
    351:351:short toShort(java.lang.String) -> toShort
    372:378:short toShort(java.lang.String,short) -> toShort
    445:590:java.lang.Number createNumber(java.lang.String) -> createNumber
    605:613:boolean isAllZeros(java.lang.String) -> isAllZeros
    627:630:java.lang.Float createFloat(java.lang.String) -> createFloat
    643:646:java.lang.Double createDouble(java.lang.String) -> createDouble
    660:664:java.lang.Integer createInteger(java.lang.String) -> createInteger
    677:680:java.lang.Long createLong(java.lang.String) -> createLong
    693:696:java.math.BigInteger createBigInteger(java.lang.String) -> createBigInteger
    709:716:java.math.BigDecimal createBigDecimal(java.lang.String) -> createBigDecimal
    731:745:long min(long[]) -> min
    758:772:int min(int[]) -> min
    785:799:short min(short[]) -> min
    812:826:byte min(byte[]) -> min
    840:857:double min(double[]) -> min
    871:888:float min(float[]) -> min
    903:917:long max(long[]) -> max
    930:944:int max(int[]) -> max
    957:971:short max(short[]) -> max
    984:998:byte max(byte[]) -> max
    1012:1029:double max(double[]) -> max
    1043:1060:float max(float[]) -> max
    1074:1080:long min(long,long,long) -> min
    1092:1098:int min(int,int,int) -> min
    1110:1116:short min(short,short,short) -> min
    1128:1134:byte min(byte,byte,byte) -> min
    1150:1150:double min(double,double,double) -> min
    1166:1166:float min(float,float,float) -> min
    1180:1186:long max(long,long,long) -> max
    1198:1204:int max(int,int,int) -> max
    1216:1222:short max(short,short,short) -> max
    1234:1240:byte max(byte,byte,byte) -> max
    1256:1256:double max(double,double,double) -> max
    1272:1272:float max(float,float,float) -> max
    1287:1295:boolean isDigits(java.lang.String) -> isDigits
    1312:1412:boolean isNumber(java.lang.String) -> isNumber
    33:67:void <clinit>() -> <clinit>
org.apache.commons.lang3.mutable.Mutable -> org.apache.commons.lang3.mutable.Mutable:
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.mutable.MutableBoolean -> org.apache.commons.lang3.mutable.MutableBoolean:
    long serialVersionUID -> serialVersionUID
    boolean value -> value
    45:46:void <init>() -> <init>
    54:56:void <init>(boolean) -> <init>
    65:67:void <init>(java.lang.Boolean) -> <init>
    76:76:java.lang.Boolean getValue() -> getValue
    85:86:void setValue(boolean) -> setValue
    95:96:void setValue(java.lang.Boolean) -> setValue
    106:106:boolean isTrue() -> isTrue
    116:116:boolean isFalse() -> isFalse
    126:126:boolean booleanValue() -> booleanValue
    137:137:java.lang.Boolean toBoolean() -> toBoolean
    151:154:boolean equals(java.lang.Object) -> equals
    164:164:int hashCode() -> hashCode
    176:177:int compareTo(org.apache.commons.lang3.mutable.MutableBoolean) -> compareTo
    188:188:java.lang.String toString() -> toString
    29:29:void setValue(java.lang.Object) -> setValue
    29:29:java.lang.Object getValue() -> getValue
    29:29:int compareTo(java.lang.Object) -> compareTo
org.apache.commons.lang3.mutable.MutableByte -> org.apache.commons.lang3.mutable.MutableByte:
    long serialVersionUID -> serialVersionUID
    byte value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(byte) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Byte getValue() -> getValue
    94:95:void setValue(byte) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:115:void increment() -> increment
    123:124:void decrement() -> decrement
    134:135:void add(byte) -> add
    145:146:void add(java.lang.Number) -> add
    155:156:void subtract(byte) -> subtract
    166:167:void subtract(java.lang.Number) -> subtract
    178:178:byte byteValue() -> byteValue
    188:188:int intValue() -> intValue
    198:198:long longValue() -> longValue
    208:208:float floatValue() -> floatValue
    218:218:double doubleValue() -> doubleValue
    228:228:java.lang.Byte toByte() -> toByte
    242:245:boolean equals(java.lang.Object) -> equals
    255:255:int hashCode() -> hashCode
    266:267:int compareTo(org.apache.commons.lang3.mutable.MutableByte) -> compareTo
    278:278:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableDouble -> org.apache.commons.lang3.mutable.MutableDouble:
    long serialVersionUID -> serialVersionUID
    double value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(double) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Double getValue() -> getValue
    94:95:void setValue(double) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:114:boolean isNaN() -> isNaN
    123:123:boolean isInfinite() -> isInfinite
    133:134:void increment() -> increment
    142:143:void decrement() -> decrement
    153:154:void add(double) -> add
    164:165:void add(java.lang.Number) -> add
    174:175:void subtract(double) -> subtract
    185:186:void subtract(java.lang.Number) -> subtract
    197:197:int intValue() -> intValue
    207:207:long longValue() -> longValue
    217:217:float floatValue() -> floatValue
    227:227:double doubleValue() -> doubleValue
    237:237:java.lang.Double toDouble() -> toDouble
    272:272:boolean equals(java.lang.Object) -> equals
    283:284:int hashCode() -> hashCode
    295:296:int compareTo(org.apache.commons.lang3.mutable.MutableDouble) -> compareTo
    307:307:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableFloat -> org.apache.commons.lang3.mutable.MutableFloat:
    long serialVersionUID -> serialVersionUID
    float value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(float) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Float getValue() -> getValue
    94:95:void setValue(float) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:114:boolean isNaN() -> isNaN
    123:123:boolean isInfinite() -> isInfinite
    133:134:void increment() -> increment
    142:143:void decrement() -> decrement
    153:154:void add(float) -> add
    164:165:void add(java.lang.Number) -> add
    174:175:void subtract(float) -> subtract
    185:186:void subtract(java.lang.Number) -> subtract
    197:197:int intValue() -> intValue
    207:207:long longValue() -> longValue
    217:217:float floatValue() -> floatValue
    227:227:double doubleValue() -> doubleValue
    237:237:java.lang.Float toFloat() -> toFloat
    274:274:boolean equals(java.lang.Object) -> equals
    285:285:int hashCode() -> hashCode
    296:297:int compareTo(org.apache.commons.lang3.mutable.MutableFloat) -> compareTo
    308:308:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableInt -> org.apache.commons.lang3.mutable.MutableInt:
    long serialVersionUID -> serialVersionUID
    int value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(int) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Integer getValue() -> getValue
    94:95:void setValue(int) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:115:void increment() -> increment
    123:124:void decrement() -> decrement
    134:135:void add(int) -> add
    145:146:void add(java.lang.Number) -> add
    155:156:void subtract(int) -> subtract
    166:167:void subtract(java.lang.Number) -> subtract
    178:178:int intValue() -> intValue
    188:188:long longValue() -> longValue
    198:198:float floatValue() -> floatValue
    208:208:double doubleValue() -> doubleValue
    218:218:java.lang.Integer toInteger() -> toInteger
    232:235:boolean equals(java.lang.Object) -> equals
    245:245:int hashCode() -> hashCode
    256:257:int compareTo(org.apache.commons.lang3.mutable.MutableInt) -> compareTo
    268:268:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableLong -> org.apache.commons.lang3.mutable.MutableLong:
    long serialVersionUID -> serialVersionUID
    long value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(long) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Long getValue() -> getValue
    94:95:void setValue(long) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:115:void increment() -> increment
    123:124:void decrement() -> decrement
    134:135:void add(long) -> add
    145:146:void add(java.lang.Number) -> add
    155:156:void subtract(long) -> subtract
    166:167:void subtract(java.lang.Number) -> subtract
    178:178:int intValue() -> intValue
    188:188:long longValue() -> longValue
    198:198:float floatValue() -> floatValue
    208:208:double doubleValue() -> doubleValue
    218:218:java.lang.Long toLong() -> toLong
    232:235:boolean equals(java.lang.Object) -> equals
    245:245:int hashCode() -> hashCode
    256:257:int compareTo(org.apache.commons.lang3.mutable.MutableLong) -> compareTo
    268:268:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.mutable.MutableObject -> org.apache.commons.lang3.mutable.MutableObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    44:45:void <init>() -> <init>
    53:55:void <init>(java.lang.Object) -> <init>
    64:64:java.lang.Object getValue() -> getValue
    73:74:void setValue(java.lang.Object) -> setValue
    91:101:boolean equals(java.lang.Object) -> equals
    112:112:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
org.apache.commons.lang3.mutable.MutableShort -> org.apache.commons.lang3.mutable.MutableShort:
    long serialVersionUID -> serialVersionUID
    short value -> value
    42:43:void <init>() -> <init>
    51:53:void <init>(short) -> <init>
    62:64:void <init>(java.lang.Number) -> <init>
    74:76:void <init>(java.lang.String) -> <init>
    85:85:java.lang.Short getValue() -> getValue
    94:95:void setValue(short) -> setValue
    104:105:void setValue(java.lang.Number) -> setValue
    114:115:void increment() -> increment
    123:124:void decrement() -> decrement
    134:135:void add(short) -> add
    145:146:void add(java.lang.Number) -> add
    155:156:void subtract(short) -> subtract
    166:167:void subtract(java.lang.Number) -> subtract
    178:178:short shortValue() -> shortValue
    188:188:int intValue() -> intValue
    198:198:long longValue() -> longValue
    208:208:float floatValue() -> floatValue
    218:218:double doubleValue() -> doubleValue
    228:228:java.lang.Short toShort() -> toShort
    242:245:boolean equals(java.lang.Object) -> equals
    255:255:int hashCode() -> hashCode
    266:267:int compareTo(org.apache.commons.lang3.mutable.MutableShort) -> compareTo
    278:278:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void setValue(java.lang.Object) -> setValue
    26:26:java.lang.Object getValue() -> getValue
org.apache.commons.lang3.reflect.ConstructorUtils -> org.apache.commons.lang3.reflect.ConstructorUtils:
    57:58:void <init>() -> <init>
    81:88:java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[]) -> invokeConstructor
    113:124:java.lang.Object invokeConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeConstructor
    148:156:java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[]) -> invokeExactConstructor
    181:192:java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]) -> invokeExactConstructor
    212:214:java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getAccessibleConstructor
    229:229:java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor) -> getAccessibleConstructor
    255:286:java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[]) -> getMatchingAccessibleConstructor
org.apache.commons.lang3.reflect.FieldUtils -> org.apache.commons.lang3.reflect.FieldUtils:
    44:45:void <init>() -> <init>
    57:59:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    75:128:java.lang.reflect.Field getField(java.lang.Class,java.lang.String,boolean) -> getField
    141:141:java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    156:176:java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String,boolean) -> getDeclaredField
    187:187:java.lang.Object readStaticField(java.lang.reflect.Field) -> readStaticField
    200:206:java.lang.Object readStaticField(java.lang.reflect.Field,boolean) -> readStaticField
    218:218:java.lang.Object readStaticField(java.lang.Class,java.lang.String) -> readStaticField
    234:239:java.lang.Object readStaticField(java.lang.Class,java.lang.String,boolean) -> readStaticField
    253:253:java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String) -> readDeclaredStaticField
    271:276:java.lang.Object readDeclaredStaticField(java.lang.Class,java.lang.String,boolean) -> readDeclaredStaticField
    288:288:java.lang.Object readField(java.lang.reflect.Field,java.lang.Object) -> readField
    302:310:java.lang.Object readField(java.lang.reflect.Field,java.lang.Object,boolean) -> readField
    322:322:java.lang.Object readField(java.lang.Object,java.lang.String) -> readField
    337:346:java.lang.Object readField(java.lang.Object,java.lang.String,boolean) -> readField
    358:358:java.lang.Object readDeclaredField(java.lang.Object,java.lang.String) -> readDeclaredField
    376:385:java.lang.Object readDeclaredField(java.lang.Object,java.lang.String,boolean) -> readDeclaredField
    396:397:void writeStaticField(java.lang.reflect.Field,java.lang.Object) -> writeStaticField
    410:417:void writeStaticField(java.lang.reflect.Field,java.lang.Object,boolean) -> writeStaticField
    428:429:void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeStaticField
    444:450:void writeStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeStaticField
    462:463:void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object) -> writeDeclaredStaticField
    478:484:void writeDeclaredStaticField(java.lang.Class,java.lang.String,java.lang.Object,boolean) -> writeDeclaredStaticField
    495:496:void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> writeField
    511:520:void writeField(java.lang.reflect.Field,java.lang.Object,java.lang.Object,boolean) -> writeField
    531:532:void writeField(java.lang.Object,java.lang.String,java.lang.Object) -> writeField
    547:557:void writeField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeField
    568:569:void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object) -> writeDeclaredField
    584:594:void writeDeclaredField(java.lang.Object,java.lang.String,java.lang.Object,boolean) -> writeDeclaredField
org.apache.commons.lang3.reflect.MemberUtils -> org.apache.commons.lang3.reflect.MemberUtils:
    int ACCESS_TEST -> ACCESS_TEST
    java.lang.Class[] ORDERED_PRIMITIVE_TYPES -> ORDERED_PRIMITIVE_TYPES
    33:33:void <init>() -> <init>
    55:67:void setAccessibleWorkaround(java.lang.reflect.AccessibleObject) -> setAccessibleWorkaround
    75:75:boolean isPackageAccess(int) -> isPackageAccess
    84:84:boolean isAccessible(java.lang.reflect.Member) -> isAccessible
    100:102:int compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[]) -> compareParameterTypes
    113:120:float getTotalTransformationCost(java.lang.Class[],java.lang.Class[]) -> getTotalTransformationCost
    132:156:float getObjectTransformationCost(java.lang.Class,java.lang.Class) -> getObjectTransformationCost
    167:182:float getPrimitivePromotionCost(java.lang.Class,java.lang.Class) -> getPrimitivePromotionCost
    39:39:void <clinit>() -> <clinit>
org.apache.commons.lang3.reflect.MethodUtils -> org.apache.commons.lang3.reflect.MethodUtils:
    58:59:void <init>() -> <init>
    86:94:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    120:133:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeMethod
    157:165:java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeExactMethod
    191:204:java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactMethod
    230:241:java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeExactStaticMethod
    271:279:java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    308:320:java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]) -> invokeStaticMethod
    344:352:java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeExactStaticMethod
    370:373:java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethod
    386:406:java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method) -> getAccessibleMethod
    421:432:java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromSuperclass
    452:485:java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[]) -> getAccessibleMethodFromInterfaceNest
    511:541:java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMatchingAccessibleMethod
org.apache.commons.lang3.reflect.TypeUtils -> org.apache.commons.lang3.reflect.TypeUtils:
    51:52:void <init>() -> <init>
    65:65:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type) -> isAssignable
    79:101:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> isAssignable
    113:167:boolean isAssignable(java.lang.reflect.Type,java.lang.Class) -> isAssignable
    181:234:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignable
    249:310:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map) -> isAssignable
    325:399:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map) -> isAssignable
    414:447:boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map) -> isAssignable
    459:470:java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map) -> substituteTypeVariables
    485:485:java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType) -> getTypeArguments
    521:521:java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class) -> getTypeArguments
    534:573:java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map) -> getTypeArguments
    587:626:java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map) -> getTypeArguments
    640:667:java.util.Map getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map) -> getTypeArguments
    699:726:java.util.Map determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType) -> determineTypeArguments
    740:774:void mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map) -> mapTypeVariablesToArguments
    786:821:java.lang.reflect.Type getClosestParentType(java.lang.Class,java.lang.Class) -> getClosestParentType
    833:837:boolean isInstance(java.lang.Object,java.lang.reflect.Type) -> isInstance
    864:885:java.lang.reflect.Type[] normalizeUpperBounds(java.lang.reflect.Type[]) -> normalizeUpperBounds
    898:900:java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable) -> getImplicitBounds
    914:916:java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType) -> getImplicitUpperBounds
    929:931:java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType) -> getImplicitLowerBounds
    950:962:boolean typesSatisfyVariables(java.util.Map) -> typesSatisfyVariables
    973:984:java.lang.Class getRawType(java.lang.reflect.ParameterizedType) -> getRawType
    1000:1060:java.lang.Class getRawType(java.lang.reflect.Type,java.lang.reflect.Type) -> getRawType
    1069:1069:boolean isArrayType(java.lang.reflect.Type) -> isArrayType
    1078:1085:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
org.apache.commons.lang3.text.CompositeFormat -> org.apache.commons.lang3.text.CompositeFormat:
    long serialVersionUID -> serialVersionUID
    java.text.Format parser -> parser
    java.text.Format formatter -> formatter
    52:55:void <init>(java.text.Format,java.text.Format) -> <init>
    69:69:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    84:84:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    93:93:java.text.Format getParser() -> getParser
    102:102:java.text.Format getFormatter() -> getFormatter
    113:113:java.lang.String reformat(java.lang.String) -> reformat
org.apache.commons.lang3.text.ExtendedMessageFormat -> org.apache.commons.lang3.text.ExtendedMessageFormat:
    long serialVersionUID -> serialVersionUID
    int HASH_SEED -> HASH_SEED
    java.lang.String DUMMY_PATTERN -> DUMMY_PATTERN
    java.lang.String ESCAPED_QUOTE -> ESCAPED_QUOTE
    char START_FMT -> START_FMT
    char END_FE -> END_FE
    char START_FE -> START_FE
    char QUOTE -> QUOTE
    java.lang.String toPattern -> toPattern
    java.util.Map registry -> registry
    91:92:void <init>(java.lang.String) -> <init>
    102:103:void <init>(java.lang.String,java.util.Locale) -> <init>
    113:114:void <init>(java.lang.String,java.util.Map) -> <init>
    125:129:void <init>(java.lang.String,java.util.Locale,java.util.Map) -> <init>
    136:136:java.lang.String toPattern() -> toPattern
    146:209:void applyPattern(java.lang.String) -> applyPattern
    220:220:void setFormat(int,java.text.Format) -> setFormat
    232:232:void setFormatByArgumentIndex(int,java.text.Format) -> setFormatByArgumentIndex
    243:243:void setFormats(java.text.Format[]) -> setFormats
    254:254:void setFormatsByArgumentIndex(java.text.Format[]) -> setFormatsByArgumentIndex
    265:284:boolean equals(java.lang.Object) -> equals
    294:297:int hashCode() -> hashCode
    307:320:java.text.Format getFormat(java.lang.String) -> getFormat
    331:361:int readArgumentIndex(java.lang.String,java.text.ParsePosition) -> readArgumentIndex
    373:393:java.lang.String parseFormatDescription(java.lang.String,java.text.ParsePosition) -> parseFormatDescription
    405:438:java.lang.String insertFormats(java.lang.String,java.util.ArrayList) -> insertFormats
    448:454:void seekNonWs(java.lang.String,java.text.ParsePosition) -> seekNonWs
    463:464:java.text.ParsePosition next(java.text.ParsePosition) -> next
    479:503:java.lang.StringBuilder appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder,boolean) -> appendQuotedString
    516:517:void getQuotedString(java.lang.String,java.text.ParsePosition,boolean) -> getQuotedString
    525:533:boolean containsElements(java.util.Collection) -> containsElements
org.apache.commons.lang3.text.FormatFactory -> org.apache.commons.lang3.text.FormatFactory:
    java.text.Format getFormat(java.lang.String,java.lang.String,java.util.Locale) -> getFormat
org.apache.commons.lang3.text.FormattableUtils -> org.apache.commons.lang3.text.FormattableUtils:
    java.lang.String SIMPLEST_FORMAT -> SIMPLEST_FORMAT
    54:55:void <init>() -> <init>
    66:66:java.lang.String toString(java.util.Formattable) -> toString
    83:83:java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int) -> append
    100:100:java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char) -> append
    118:118:java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence) -> append
    136:148:java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence) -> append
org.apache.commons.lang3.text.StrBuilder -> org.apache.commons.lang3.text.StrBuilder:
    int CAPACITY -> CAPACITY
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int size -> size
    java.lang.String newLine -> newLine
    java.lang.String nullText -> nullText
    100:101:void <init>() -> <init>
    109:114:void <init>(int) -> <init>
    123:130:void <init>(java.lang.String) -> <init>
    139:139:java.lang.String getNewLineText() -> getNewLineText
    149:150:org.apache.commons.lang3.text.StrBuilder setNewLineText(java.lang.String) -> setNewLineText
    160:160:java.lang.String getNullText() -> getNullText
    170:174:org.apache.commons.lang3.text.StrBuilder setNullText(java.lang.String) -> setNullText
    184:184:int length() -> length
    196:210:org.apache.commons.lang3.text.StrBuilder setLength(int) -> setLength
    220:220:int capacity() -> capacity
    230:235:org.apache.commons.lang3.text.StrBuilder ensureCapacity(int) -> ensureCapacity
    244:249:org.apache.commons.lang3.text.StrBuilder minimizeCapacity() -> minimizeCapacity
    262:262:int size() -> size
    274:274:boolean isEmpty() -> isEmpty
    289:290:org.apache.commons.lang3.text.StrBuilder clear() -> clear
    304:307:char charAt(int) -> charAt
    321:325:org.apache.commons.lang3.text.StrBuilder setCharAt(int,char) -> setCharAt
    338:342:org.apache.commons.lang3.text.StrBuilder deleteCharAt(int) -> deleteCharAt
    352:357:char[] toCharArray() -> toCharArray
    371:378:char[] toCharArray(int,int) -> toCharArray
    388:393:char[] getChars(char[]) -> getChars
    407:417:void getChars(int,int,char[],int) -> getChars
    430:434:org.apache.commons.lang3.text.StrBuilder appendNewLine() -> appendNewLine
    443:446:org.apache.commons.lang3.text.StrBuilder appendNull() -> appendNull
    457:460:org.apache.commons.lang3.text.StrBuilder append(java.lang.Object) -> append
    472:475:org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence) -> append
    489:492:org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence,int,int) -> append
    503:513:org.apache.commons.lang3.text.StrBuilder append(java.lang.String) -> append
    526:541:org.apache.commons.lang3.text.StrBuilder append(java.lang.String,int,int) -> append
    552:562:org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer) -> append
    575:590:org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer,int,int) -> append
    601:611:org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder) -> append
    624:639:org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder,int,int) -> append
    650:660:org.apache.commons.lang3.text.StrBuilder append(char[]) -> append
    673:688:org.apache.commons.lang3.text.StrBuilder append(char[],int,int) -> append
    698:712:org.apache.commons.lang3.text.StrBuilder append(boolean) -> append
    723:726:org.apache.commons.lang3.text.StrBuilder append(char) -> append
    736:736:org.apache.commons.lang3.text.StrBuilder append(int) -> append
    746:746:org.apache.commons.lang3.text.StrBuilder append(long) -> append
    756:756:org.apache.commons.lang3.text.StrBuilder append(float) -> append
    766:766:org.apache.commons.lang3.text.StrBuilder append(double) -> append
    779:779:org.apache.commons.lang3.text.StrBuilder appendln(java.lang.Object) -> appendln
    791:791:org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String) -> appendln
    805:805:org.apache.commons.lang3.text.StrBuilder appendln(java.lang.String,int,int) -> appendln
    817:817:org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer) -> appendln
    831:831:org.apache.commons.lang3.text.StrBuilder appendln(java.lang.StringBuffer,int,int) -> appendln
    843:843:org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder) -> appendln
    857:857:org.apache.commons.lang3.text.StrBuilder appendln(org.apache.commons.lang3.text.StrBuilder,int,int) -> appendln
    869:869:org.apache.commons.lang3.text.StrBuilder appendln(char[]) -> appendln
    883:883:org.apache.commons.lang3.text.StrBuilder appendln(char[],int,int) -> appendln
    894:894:org.apache.commons.lang3.text.StrBuilder appendln(boolean) -> appendln
    905:905:org.apache.commons.lang3.text.StrBuilder appendln(char) -> appendln
    916:916:org.apache.commons.lang3.text.StrBuilder appendln(int) -> appendln
    927:927:org.apache.commons.lang3.text.StrBuilder appendln(long) -> appendln
    938:938:org.apache.commons.lang3.text.StrBuilder appendln(float) -> appendln
    949:949:org.apache.commons.lang3.text.StrBuilder appendln(double) -> appendln
    963:968:org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Object[]) -> appendAll
    981:987:org.apache.commons.lang3.text.StrBuilder appendAll(java.lang.Iterable) -> appendAll
    1000:1005:org.apache.commons.lang3.text.StrBuilder appendAll(java.util.Iterator) -> appendAll
    1020:1028:org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Object[],java.lang.String) -> appendWithSeparators
    1042:1052:org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Iterable,java.lang.String) -> appendWithSeparators
    1066:1075:org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.util.Iterator,java.lang.String) -> appendWithSeparators
    1100:1100:org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String) -> appendSeparator
    1131:1135:org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,java.lang.String) -> appendSeparator
    1158:1161:org.apache.commons.lang3.text.StrBuilder appendSeparator(char) -> appendSeparator
    1176:1181:org.apache.commons.lang3.text.StrBuilder appendSeparator(char,char) -> appendSeparator
    1205:1208:org.apache.commons.lang3.text.StrBuilder appendSeparator(java.lang.String,int) -> appendSeparator
    1232:1235:org.apache.commons.lang3.text.StrBuilder appendSeparator(char,int) -> appendSeparator
    1247:1253:org.apache.commons.lang3.text.StrBuilder appendPadding(int,char) -> appendPadding
    1269:1287:org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char) -> appendFixedWidthPadLeft
    1301:1301:org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(int,int,char) -> appendFixedWidthPadLeft
    1316:1334:org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char) -> appendFixedWidthPadRight
    1348:1348:org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(int,int,char) -> appendFixedWidthPadRight
    1362:1365:org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.Object) -> insert
    1379:1391:org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String) -> insert
    1404:1415:org.apache.commons.lang3.text.StrBuilder insert(int,char[]) -> insert
    1430:1446:org.apache.commons.lang3.text.StrBuilder insert(int,char[],int,int) -> insert
    1458:1477:org.apache.commons.lang3.text.StrBuilder insert(int,boolean) -> insert
    1489:1494:org.apache.commons.lang3.text.StrBuilder insert(int,char) -> insert
    1506:1506:org.apache.commons.lang3.text.StrBuilder insert(int,int) -> insert
    1518:1518:org.apache.commons.lang3.text.StrBuilder insert(int,long) -> insert
    1530:1530:org.apache.commons.lang3.text.StrBuilder insert(int,float) -> insert
    1542:1542:org.apache.commons.lang3.text.StrBuilder insert(int,double) -> insert
    1555:1557:void deleteImpl(int,int,int) -> deleteImpl
    1569:1574:org.apache.commons.lang3.text.StrBuilder delete(int,int) -> delete
    1585:1598:org.apache.commons.lang3.text.StrBuilder deleteAll(char) -> deleteAll
    1608:1614:org.apache.commons.lang3.text.StrBuilder deleteFirst(char) -> deleteFirst
    1625:1633:org.apache.commons.lang3.text.StrBuilder deleteAll(java.lang.String) -> deleteAll
    1643:1650:org.apache.commons.lang3.text.StrBuilder deleteFirst(java.lang.String) -> deleteFirst
    1665:1665:org.apache.commons.lang3.text.StrBuilder deleteAll(org.apache.commons.lang3.text.StrMatcher) -> deleteAll
    1679:1679:org.apache.commons.lang3.text.StrBuilder deleteFirst(org.apache.commons.lang3.text.StrMatcher) -> deleteFirst
    1694:1703:void replaceImpl(int,int,int,java.lang.String,int) -> replaceImpl
    1717:1720:org.apache.commons.lang3.text.StrBuilder replace(int,int,java.lang.String) -> replace
    1733:1740:org.apache.commons.lang3.text.StrBuilder replaceAll(char,char) -> replaceAll
    1752:1760:org.apache.commons.lang3.text.StrBuilder replaceFirst(char,char) -> replaceFirst
    1772:1781:org.apache.commons.lang3.text.StrBuilder replaceAll(java.lang.String,java.lang.String) -> replaceAll
    1792:1800:org.apache.commons.lang3.text.StrBuilder replaceFirst(java.lang.String,java.lang.String) -> replaceFirst
    1816:1816:org.apache.commons.lang3.text.StrBuilder replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceAll
    1831:1831:org.apache.commons.lang3.text.StrBuilder replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String) -> replaceFirst
    1854:1855:org.apache.commons.lang3.text.StrBuilder replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replace
    1876:1892:org.apache.commons.lang3.text.StrBuilder replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int) -> replaceImpl
    1902:1913:org.apache.commons.lang3.text.StrBuilder reverse() -> reverse
    1924:1942:org.apache.commons.lang3.text.StrBuilder trim() -> trim
    1955:1970:boolean startsWith(java.lang.String) -> startsWith
    1982:1998:boolean endsWith(java.lang.String) -> endsWith
    2007:2016:java.lang.CharSequence subSequence(int,int) -> subSequence
    2027:2027:java.lang.String substring(int) -> substring
    2044:2045:java.lang.String substring(int,int) -> substring
    2061:2066:java.lang.String leftString(int) -> leftString
    2083:2088:java.lang.String rightString(int) -> rightString
    2109:2118:java.lang.String midString(int,int) -> midString
    2130:2136:boolean contains(char) -> contains
    2146:2146:boolean contains(java.lang.String) -> contains
    2161:2161:boolean contains(org.apache.commons.lang3.text.StrMatcher) -> contains
    2172:2172:int indexOf(char) -> indexOf
    2183:2193:int indexOf(char,int) -> indexOf
    2205:2205:int indexOf(java.lang.String) -> indexOf
    2219:2244:int indexOf(java.lang.String,int) -> indexOf
    2258:2258:int indexOf(org.apache.commons.lang3.text.StrMatcher) -> indexOf
    2274:2285:int indexOf(org.apache.commons.lang3.text.StrMatcher,int) -> indexOf
    2296:2296:int lastIndexOf(char) -> lastIndexOf
    2307:2316:int lastIndexOf(char,int) -> lastIndexOf
    2328:2328:int lastIndexOf(java.lang.String) -> lastIndexOf
    2342:2365:int lastIndexOf(java.lang.String,int) -> lastIndexOf
    2379:2379:int lastIndexOf(org.apache.commons.lang3.text.StrMatcher) -> lastIndexOf
    2395:2406:int lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int) -> lastIndexOf
    2443:2443:org.apache.commons.lang3.text.StrTokenizer asTokenizer() -> asTokenizer
    2467:2467:java.io.Reader asReader() -> asReader
    2492:2492:java.io.Writer asWriter() -> asWriter
    2534:2549:boolean equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder) -> equalsIgnoreCase
    2560:2573:boolean equals(org.apache.commons.lang3.text.StrBuilder) -> equals
    2585:2588:boolean equals(java.lang.Object) -> equals
    2598:2603:int hashCode() -> hashCode
    2618:2618:java.lang.String toString() -> toString
    2628:2628:java.lang.StringBuffer toStringBuffer() -> toStringBuffer
    2642:2651:int validateRange(int,int) -> validateRange
    2661:2664:void validateIndex(int) -> validateIndex
    72:72:java.lang.Appendable append(char) -> append
    72:72:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    72:72:java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.lang3.text.StrBuilder$StrBuilderReader -> org.apache.commons.lang3.text.StrBuilder$StrBuilderReader:
    int pos -> pos
    int mark -> mark
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    2714:2716:void <init>(org.apache.commons.lang3.text.StrBuilder) -> <init>
    2722:2722:void close() -> close
    2727:2730:int read() -> read
    2736:2751:int read(char[],int,int) -> read
    2757:2764:long skip(long) -> skip
    2770:2770:boolean ready() -> ready
    2776:2776:boolean markSupported() -> markSupported
    2782:2783:void mark(int) -> mark
    2788:2789:void reset() -> reset
org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer -> org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer:
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    2675:2677:void <init>(org.apache.commons.lang3.text.StrBuilder) -> <init>
    2682:2685:java.util.List tokenize(char[],int,int) -> tokenize
    2692:2696:java.lang.String getContent() -> getContent
org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter -> org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter:
    org.apache.commons.lang3.text.StrBuilder this$0 -> this$0
    2801:2803:void <init>(org.apache.commons.lang3.text.StrBuilder) -> <init>
    2809:2809:void close() -> close
    2815:2815:void flush() -> flush
    2820:2821:void write(int) -> write
    2826:2827:void write(char[]) -> write
    2832:2833:void write(char[],int,int) -> write
    2838:2839:void write(java.lang.String) -> write
    2844:2845:void write(java.lang.String,int,int) -> write
org.apache.commons.lang3.text.StrLookup -> org.apache.commons.lang3.text.StrLookup:
    org.apache.commons.lang3.text.StrLookup NONE_LOOKUP -> NONE_LOOKUP
    org.apache.commons.lang3.text.StrLookup SYSTEM_PROPERTIES_LOOKUP -> SYSTEM_PROPERTIES_LOOKUP
    68:68:org.apache.commons.lang3.text.StrLookup noneLookup() -> noneLookup
    83:83:org.apache.commons.lang3.text.StrLookup systemPropertiesLookup() -> systemPropertiesLookup
    97:97:org.apache.commons.lang3.text.StrLookup mapLookup(java.util.Map) -> mapLookup
    105:106:void <init>() -> <init>
    java.lang.String lookup(java.lang.String) -> lookup
    48:59:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.StrLookup$MapStrLookup -> org.apache.commons.lang3.text.StrLookup$MapStrLookup:
    java.util.Map map -> map
    147:149:void <init>(java.util.Map) -> <init>
    162:169:java.lang.String lookup(java.lang.String) -> lookup
org.apache.commons.lang3.text.StrMatcher -> org.apache.commons.lang3.text.StrMatcher:
    org.apache.commons.lang3.text.StrMatcher COMMA_MATCHER -> COMMA_MATCHER
    org.apache.commons.lang3.text.StrMatcher TAB_MATCHER -> TAB_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPACE_MATCHER -> SPACE_MATCHER
    org.apache.commons.lang3.text.StrMatcher SPLIT_MATCHER -> SPLIT_MATCHER
    org.apache.commons.lang3.text.StrMatcher TRIM_MATCHER -> TRIM_MATCHER
    org.apache.commons.lang3.text.StrMatcher SINGLE_QUOTE_MATCHER -> SINGLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher DOUBLE_QUOTE_MATCHER -> DOUBLE_QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher QUOTE_MATCHER -> QUOTE_MATCHER
    org.apache.commons.lang3.text.StrMatcher NONE_MATCHER -> NONE_MATCHER
    81:81:org.apache.commons.lang3.text.StrMatcher commaMatcher() -> commaMatcher
    90:90:org.apache.commons.lang3.text.StrMatcher tabMatcher() -> tabMatcher
    99:99:org.apache.commons.lang3.text.StrMatcher spaceMatcher() -> spaceMatcher
    109:109:org.apache.commons.lang3.text.StrMatcher splitMatcher() -> splitMatcher
    118:118:org.apache.commons.lang3.text.StrMatcher trimMatcher() -> trimMatcher
    127:127:org.apache.commons.lang3.text.StrMatcher singleQuoteMatcher() -> singleQuoteMatcher
    136:136:org.apache.commons.lang3.text.StrMatcher doubleQuoteMatcher() -> doubleQuoteMatcher
    145:145:org.apache.commons.lang3.text.StrMatcher quoteMatcher() -> quoteMatcher
    154:154:org.apache.commons.lang3.text.StrMatcher noneMatcher() -> noneMatcher
    164:164:org.apache.commons.lang3.text.StrMatcher charMatcher(char) -> charMatcher
    174:180:org.apache.commons.lang3.text.StrMatcher charSetMatcher(char[]) -> charSetMatcher
    190:196:org.apache.commons.lang3.text.StrMatcher charSetMatcher(java.lang.String) -> charSetMatcher
    206:209:org.apache.commons.lang3.text.StrMatcher stringMatcher(java.lang.String) -> stringMatcher
    217:218:void <init>() -> <init>
    int isMatch(char[],int,int,int) -> isMatch
    268:268:int isMatch(char[],int) -> isMatch
    38:71:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.StrMatcher$CharMatcher -> org.apache.commons.lang3.text.StrMatcher$CharMatcher:
    char ch -> ch
    319:321:void <init>(char) -> <init>
    334:334:int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$CharSetMatcher -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher:
    char[] chars -> chars
    285:288:void <init>(char[]) -> <init>
    301:301:int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$NoMatcher -> org.apache.commons.lang3.text.StrMatcher$NoMatcher:
    390:391:void <init>() -> <init>
    404:404:int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$StringMatcher -> org.apache.commons.lang3.text.StrMatcher$StringMatcher:
    char[] chars -> chars
    352:354:void <init>(java.lang.String) -> <init>
    367:376:int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrMatcher$TrimMatcher -> org.apache.commons.lang3.text.StrMatcher$TrimMatcher:
    418:419:void <init>() -> <init>
    432:432:int isMatch(char[],int,int,int) -> isMatch
org.apache.commons.lang3.text.StrSubstitutor -> org.apache.commons.lang3.text.StrSubstitutor:
    char DEFAULT_ESCAPE -> DEFAULT_ESCAPE
    org.apache.commons.lang3.text.StrMatcher DEFAULT_PREFIX -> DEFAULT_PREFIX
    org.apache.commons.lang3.text.StrMatcher DEFAULT_SUFFIX -> DEFAULT_SUFFIX
    char escapeChar -> escapeChar
    org.apache.commons.lang3.text.StrMatcher prefixMatcher -> prefixMatcher
    org.apache.commons.lang3.text.StrMatcher suffixMatcher -> suffixMatcher
    org.apache.commons.lang3.text.StrLookup variableResolver -> variableResolver
    boolean enableSubstitutionInVariables -> enableSubstitutionInVariables
    150:150:java.lang.String replace(java.lang.Object,java.util.Map) -> replace
    167:167:java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String) -> replace
    179:189:java.lang.String replace(java.lang.Object,java.util.Properties) -> replace
    200:200:java.lang.String replaceSystemProperties(java.lang.Object) -> replaceSystemProperties
    209:210:void <init>() -> <init>
    220:221:void <init>(java.util.Map) -> <init>
    233:234:void <init>(java.util.Map,java.lang.String,java.lang.String) -> <init>
    247:248:void <init>(java.util.Map,java.lang.String,java.lang.String,char) -> <init>
    256:257:void <init>(org.apache.commons.lang3.text.StrLookup) -> <init>
    268:273:void <init>(org.apache.commons.lang3.text.StrLookup,java.lang.String,java.lang.String,char) -> <init>
    285:290:void <init>(org.apache.commons.lang3.text.StrLookup,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher,char) -> <init>
    301:308:java.lang.String replace(java.lang.String) -> replace
    324:331:java.lang.String replace(java.lang.String,int,int) -> replace
    344:349:java.lang.String replace(char[]) -> replace
    366:371:java.lang.String replace(char[],int,int) -> replace
    384:389:java.lang.String replace(java.lang.StringBuffer) -> replace
    406:411:java.lang.String replace(java.lang.StringBuffer,int,int) -> replace
    424:429:java.lang.String replace(org.apache.commons.lang3.text.StrBuilder) -> replace
    446:451:java.lang.String replace(org.apache.commons.lang3.text.StrBuilder,int,int) -> replace
    464:469:java.lang.String replace(java.lang.Object) -> replace
    482:485:boolean replaceIn(java.lang.StringBuffer) -> replaceIn
    502:510:boolean replaceIn(java.lang.StringBuffer,int,int) -> replaceIn
    522:525:boolean replaceIn(org.apache.commons.lang3.text.StrBuilder) -> replaceIn
    541:544:boolean replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int) -> replaceIn
    563:563:boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int) -> substitute
    579:683:int substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List) -> substitute
    693:701:void checkCyclicSubstitution(java.lang.String,java.util.List) -> checkCyclicSubstitution
    722:726:java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang3.text.StrBuilder,int,int) -> resolveVariable
    737:737:char getEscapeChar() -> getEscapeChar
    748:749:void setEscapeChar(char) -> setEscapeChar
    763:763:org.apache.commons.lang3.text.StrMatcher getVariablePrefixMatcher() -> getVariablePrefixMatcher
    778:782:org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariablePrefixMatcher
    796:796:org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(char) -> setVariablePrefix
    810:813:org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(java.lang.String) -> setVariablePrefix
    828:828:org.apache.commons.lang3.text.StrMatcher getVariableSuffixMatcher() -> getVariableSuffixMatcher
    843:847:org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher) -> setVariableSuffixMatcher
    861:861:org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(char) -> setVariableSuffix
    875:878:org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(java.lang.String) -> setVariableSuffix
    889:889:org.apache.commons.lang3.text.StrLookup getVariableResolver() -> getVariableResolver
    898:899:void setVariableResolver(org.apache.commons.lang3.text.StrLookup) -> setVariableResolver
    910:910:boolean isEnableSubstitutionInVariables() -> isEnableSubstitutionInVariables
    924:925:void setEnableSubstitutionInVariables(boolean) -> setEnableSubstitutionInVariables
    112:116:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.StrTokenizer -> org.apache.commons.lang3.text.StrTokenizer:
    org.apache.commons.lang3.text.StrTokenizer CSV_TOKENIZER_PROTOTYPE -> CSV_TOKENIZER_PROTOTYPE
    org.apache.commons.lang3.text.StrTokenizer TSV_TOKENIZER_PROTOTYPE -> TSV_TOKENIZER_PROTOTYPE
    char[] chars -> chars
    java.lang.String[] tokens -> tokens
    int tokenPos -> tokenPos
    org.apache.commons.lang3.text.StrMatcher delimMatcher -> delimMatcher
    org.apache.commons.lang3.text.StrMatcher quoteMatcher -> quoteMatcher
    org.apache.commons.lang3.text.StrMatcher ignoredMatcher -> ignoredMatcher
    org.apache.commons.lang3.text.StrMatcher trimmerMatcher -> trimmerMatcher
    boolean emptyAsNull -> emptyAsNull
    boolean ignoreEmptyTokens -> ignoreEmptyTokens
    138:138:org.apache.commons.lang3.text.StrTokenizer getCSVClone() -> getCSVClone
    151:151:org.apache.commons.lang3.text.StrTokenizer getCSVInstance() -> getCSVInstance
    164:166:org.apache.commons.lang3.text.StrTokenizer getCSVInstance(java.lang.String) -> getCSVInstance
    179:181:org.apache.commons.lang3.text.StrTokenizer getCSVInstance(char[]) -> getCSVInstance
    190:190:org.apache.commons.lang3.text.StrTokenizer getTSVClone() -> getTSVClone
    203:203:org.apache.commons.lang3.text.StrTokenizer getTSVInstance() -> getTSVInstance
    214:216:org.apache.commons.lang3.text.StrTokenizer getTSVInstance(java.lang.String) -> getTSVInstance
    227:229:org.apache.commons.lang3.text.StrTokenizer getTSVInstance(char[]) -> getTSVInstance
    117:242:void <init>() -> <init>
    117:257:void <init>(java.lang.String) -> <init>
    266:268:void <init>(java.lang.String,char) -> <init>
    277:279:void <init>(java.lang.String,java.lang.String) -> <init>
    288:290:void <init>(java.lang.String,org.apache.commons.lang3.text.StrMatcher) -> <init>
    301:303:void <init>(java.lang.String,char,char) -> <init>
    314:316:void <init>(java.lang.String,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher) -> <init>
    117:327:void <init>(char[]) -> <init>
    336:338:void <init>(char[],char) -> <init>
    347:349:void <init>(char[],java.lang.String) -> <init>
    358:360:void <init>(char[],org.apache.commons.lang3.text.StrMatcher) -> <init>
    371:373:void <init>(char[],char,char) -> <init>
    384:386:void <init>(char[],org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher) -> <init>
    396:397:int size() -> size
    408:411:java.lang.String nextToken() -> nextToken
    420:423:java.lang.String previousToken() -> previousToken
    432:433:java.lang.String[] getTokenArray() -> getTokenArray
    442:447:java.util.List getTokenList() -> getTokenList
    458:460:org.apache.commons.lang3.text.StrTokenizer reset() -> reset
    472:478:org.apache.commons.lang3.text.StrTokenizer reset(java.lang.String) -> reset
    490:492:org.apache.commons.lang3.text.StrTokenizer reset(char[]) -> reset
    503:504:boolean hasNext() -> hasNext
    514:517:java.lang.String next() -> next
    526:526:int nextIndex() -> nextIndex
    535:536:boolean hasPrevious() -> hasPrevious
    545:548:java.lang.String previous() -> previous
    557:557:int previousIndex() -> previousIndex
    566:566:void remove() -> remove
    575:575:void set(java.lang.String) -> set
    584:584:void add(java.lang.String) -> add
    593:603:void checkTokenized() -> checkTokenized
    626:643:java.util.List tokenize(char[],int,int) -> tokenize
    653:662:void addToken(java.util.List,java.lang.String) -> addToken
    678:708:int readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List) -> readNextToken
    729:809:int readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int) -> readWithQuotes
    824:829:boolean isQuote(char[],int,int,int,int) -> isQuote
    840:840:org.apache.commons.lang3.text.StrMatcher getDelimiterMatcher() -> getDelimiterMatcher
    852:857:org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher) -> setDelimiterMatcher
    867:867:org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(char) -> setDelimiterChar
    877:877:org.apache.commons.lang3.text.StrTokenizer setDelimiterString(java.lang.String) -> setDelimiterString
    892:892:org.apache.commons.lang3.text.StrMatcher getQuoteMatcher() -> getQuoteMatcher
    905:908:org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher) -> setQuoteMatcher
    921:921:org.apache.commons.lang3.text.StrTokenizer setQuoteChar(char) -> setQuoteChar
    936:936:org.apache.commons.lang3.text.StrMatcher getIgnoredMatcher() -> getIgnoredMatcher
    949:952:org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher) -> setIgnoredMatcher
    965:965:org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(char) -> setIgnoredChar
    980:980:org.apache.commons.lang3.text.StrMatcher getTrimmerMatcher() -> getTrimmerMatcher
    993:996:org.apache.commons.lang3.text.StrTokenizer setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher) -> setTrimmerMatcher
    1007:1007:boolean isEmptyTokenAsNull() -> isEmptyTokenAsNull
    1018:1019:org.apache.commons.lang3.text.StrTokenizer setEmptyTokenAsNull(boolean) -> setEmptyTokenAsNull
    1030:1030:boolean isIgnoreEmptyTokens() -> isIgnoreEmptyTokens
    1041:1042:org.apache.commons.lang3.text.StrTokenizer setIgnoreEmptyTokens(boolean) -> setIgnoreEmptyTokens
    1052:1055:java.lang.String getContent() -> getContent
    1069:1071:java.lang.Object clone() -> clone
    1084:1089:java.lang.Object cloneReset() -> cloneReset
    1100:1103:java.lang.String toString() -> toString
    87:87:void add(java.lang.Object) -> add
    87:87:void set(java.lang.Object) -> set
    87:87:java.lang.Object previous() -> previous
    87:87:java.lang.Object next() -> next
    92:107:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.WordUtils -> org.apache.commons.lang3.text.WordUtils:
    43:44:void <init>() -> <init>
    67:67:java.lang.String wrap(java.lang.String,int) -> wrap
    89:140:java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    168:168:java.lang.String capitalize(java.lang.String) -> capitalize
    201:216:java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    240:240:java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    270:275:java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    297:297:java.lang.String uncapitalize(java.lang.String) -> uncapitalize
    326:341:java.lang.String uncapitalize(java.lang.String,char[]) -> uncapitalize
    368:394:java.lang.String swapCase(java.lang.String) -> swapCase
    421:421:java.lang.String initials(java.lang.String) -> initials
    452:474:java.lang.String initials(java.lang.String,char[]) -> initials
    486:494:boolean isDelimiter(char,char[]) -> isDelimiter
org.apache.commons.lang3.text.translate.AggregateTranslator -> org.apache.commons.lang3.text.translate.AggregateTranslator:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> translators
    40:42:void <init>(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> <init>
    51:57:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> org.apache.commons.lang3.text.translate.CharSequenceTranslator:
    32:32:void <init>() -> <init>
    int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    54:63:java.lang.String translate(java.lang.CharSequence) -> translate
    76:105:void translate(java.lang.CharSequence,java.io.Writer) -> translate
    115:118:org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> with
    129:129:java.lang.String hex(int) -> hex
org.apache.commons.lang3.text.translate.CodePointTranslator -> org.apache.commons.lang3.text.translate.CodePointTranslator:
    29:29:void <init>() -> <init>
    37:42:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.EntityArrays -> org.apache.commons.lang3.text.translate.EntityArrays:
    java.lang.String[][] ISO8859_1_ESCAPE -> ISO8859_1_ESCAPE
    java.lang.String[][] ISO8859_1_UNESCAPE -> ISO8859_1_UNESCAPE
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> HTML40_EXTENDED_ESCAPE
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> HTML40_EXTENDED_UNESCAPE
    java.lang.String[][] BASIC_ESCAPE -> BASIC_ESCAPE
    java.lang.String[][] BASIC_UNESCAPE -> BASIC_UNESCAPE
    java.lang.String[][] APOS_ESCAPE -> APOS_ESCAPE
    java.lang.String[][] APOS_UNESCAPE -> APOS_UNESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> JAVA_CTRL_CHARS_ESCAPE
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> JAVA_CTRL_CHARS_UNESCAPE
    27:27:void <init>() -> <init>
    34:34:java.lang.String[][] ISO8859_1_ESCAPE() -> ISO8859_1_ESCAPE
    138:138:java.lang.String[][] ISO8859_1_UNESCAPE() -> ISO8859_1_UNESCAPE
    147:147:java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> HTML40_EXTENDED_ESCAPE
    349:349:java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> HTML40_EXTENDED_UNESCAPE
    358:358:java.lang.String[][] BASIC_ESCAPE() -> BASIC_ESCAPE
    370:370:java.lang.String[][] BASIC_UNESCAPE() -> BASIC_UNESCAPE
    377:377:java.lang.String[][] APOS_ESCAPE() -> APOS_ESCAPE
    386:386:java.lang.String[][] APOS_UNESCAPE() -> APOS_UNESCAPE
    395:395:java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> JAVA_CTRL_CHARS_ESCAPE
    408:408:java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> JAVA_CTRL_CHARS_UNESCAPE
    417:422:java.lang.String[][] invert(java.lang.String[][]) -> invert
    35:409:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.LookupTranslator -> org.apache.commons.lang3.text.translate.LookupTranslator:
    java.util.HashMap lookupMap -> lookupMap
    int shortest -> shortest
    int longest -> longest
    40:58:void <init>(java.lang.CharSequence[][]) -> <init>
    65:78:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityEscaper -> org.apache.commons.lang3.text.translate.NumericEntityEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    44:48:void <init>(int,int,boolean) -> <init>
    54:55:void <init>() -> <init>
    64:64:org.apache.commons.lang3.text.translate.NumericEntityEscaper below(int) -> below
    74:74:org.apache.commons.lang3.text.translate.NumericEntityEscaper above(int) -> above
    85:85:org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int) -> between
    96:96:org.apache.commons.lang3.text.translate.NumericEntityEscaper outsideOf(int,int) -> outsideOf
    104:117:boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper:
    java.util.EnumSet options -> options
    56:62:void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[]) -> <init>
    71:71:boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> isSet
    79:137:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> semiColonRequired
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> semiColonOptional
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> errorIfNoSemiColon
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> $VALUES
    35:35:org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    35:35:org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
    35:35:void <init>(java.lang.String,int) -> <init>
    35:35:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.OctalUnescaper -> org.apache.commons.lang3.text.translate.OctalUnescaper:
    int OCTAL_MAX -> OCTAL_MAX
    34:34:void <init>() -> <init>
    43:58:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
    36:36:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.UnicodeEscaper -> org.apache.commons.lang3.text.translate.UnicodeEscaper:
    int below -> below
    int above -> above
    boolean between -> between
    38:39:void <init>() -> <init>
    51:55:void <init>(int,int,boolean) -> <init>
    64:64:org.apache.commons.lang3.text.translate.UnicodeEscaper below(int) -> below
    74:74:org.apache.commons.lang3.text.translate.UnicodeEscaper above(int) -> above
    85:85:org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int) -> outsideOf
    96:96:org.apache.commons.lang3.text.translate.UnicodeEscaper between(int,int) -> between
    104:128:boolean translate(int,java.io.Writer) -> translate
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> org.apache.commons.lang3.text.translate.UnicodeUnescaper:
    32:32:void <init>() -> <init>
    39:69:int translate(java.lang.CharSequence,int,java.io.Writer) -> translate
org.apache.commons.lang3.time.DateFormatUtils -> org.apache.commons.lang3.time.DateFormatUtils:
    java.util.TimeZone UTC_TIME_ZONE -> UTC_TIME_ZONE
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_FORMAT -> ISO_DATETIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATETIME_TIME_ZONE_FORMAT -> ISO_DATETIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_FORMAT -> ISO_DATE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_DATE_TIME_ZONE_FORMAT -> ISO_DATE_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_FORMAT -> ISO_TIME_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_TIME_ZONE_FORMAT -> ISO_TIME_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_FORMAT -> ISO_TIME_NO_T_FORMAT
    org.apache.commons.lang3.time.FastDateFormat ISO_TIME_NO_T_TIME_ZONE_FORMAT -> ISO_TIME_NO_T_TIME_ZONE_FORMAT
    org.apache.commons.lang3.time.FastDateFormat SMTP_DATETIME_FORMAT -> SMTP_DATETIME_FORMAT
    117:118:void <init>() -> <init>
    128:128:java.lang.String formatUTC(long,java.lang.String) -> formatUTC
    139:139:java.lang.String formatUTC(java.util.Date,java.lang.String) -> formatUTC
    151:151:java.lang.String formatUTC(long,java.lang.String,java.util.Locale) -> formatUTC
    163:163:java.lang.String formatUTC(java.util.Date,java.lang.String,java.util.Locale) -> formatUTC
    174:174:java.lang.String format(long,java.lang.String) -> format
    185:185:java.lang.String format(java.util.Date,java.lang.String) -> format
    198:198:java.lang.String format(java.util.Calendar,java.lang.String) -> format
    210:210:java.lang.String format(long,java.lang.String,java.util.TimeZone) -> format
    222:222:java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone) -> format
    236:236:java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone) -> format
    248:248:java.lang.String format(long,java.lang.String,java.util.Locale) -> format
    260:260:java.lang.String format(java.util.Date,java.lang.String,java.util.Locale) -> format
    274:274:java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale) -> format
    287:287:java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    300:301:java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    316:317:java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale) -> format
    39:106:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.DateUtils -> org.apache.commons.lang3.time.DateUtils:
    long MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    long MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    long MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    long MILLIS_PER_DAY -> MILLIS_PER_DAY
    int SEMI_MONTH -> SEMI_MONTH
    int[][] fields -> fields
    int RANGE_WEEK_SUNDAY -> RANGE_WEEK_SUNDAY
    int RANGE_WEEK_MONDAY -> RANGE_WEEK_MONDAY
    int RANGE_WEEK_RELATIVE -> RANGE_WEEK_RELATIVE
    int RANGE_WEEK_CENTER -> RANGE_WEEK_CENTER
    int RANGE_MONTH_SUNDAY -> RANGE_MONTH_SUNDAY
    int RANGE_MONTH_MONDAY -> RANGE_MONTH_MONDAY
    int MODIFY_TRUNCATE -> MODIFY_TRUNCATE
    int MODIFY_ROUND -> MODIFY_ROUND
    int MODIFY_CEILING -> MODIFY_CEILING
    136:137:void <init>() -> <init>
    154:161:boolean isSameDay(java.util.Date,java.util.Date) -> isSameDay
    178:181:boolean isSameDay(java.util.Calendar,java.util.Calendar) -> isSameDay
    199:202:boolean isSameInstant(java.util.Date,java.util.Date) -> isSameInstant
    217:220:boolean isSameInstant(java.util.Calendar,java.util.Calendar) -> isSameInstant
    237:240:boolean isSameLocalTime(java.util.Calendar,java.util.Calendar) -> isSameLocalTime
    266:266:java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    286:286:java.util.Date parseDateStrictly(java.lang.String,java.lang.String[]) -> parseDateStrictly
    306:336:java.util.Date parseDateWithLeniency(java.lang.String,java.lang.String[],boolean) -> parseDateWithLeniency
    350:350:java.util.Date addYears(java.util.Date,int) -> addYears
    364:364:java.util.Date addMonths(java.util.Date,int) -> addMonths
    378:378:java.util.Date addWeeks(java.util.Date,int) -> addWeeks
    392:392:java.util.Date addDays(java.util.Date,int) -> addDays
    406:406:java.util.Date addHours(java.util.Date,int) -> addHours
    420:420:java.util.Date addMinutes(java.util.Date,int) -> addMinutes
    434:434:java.util.Date addSeconds(java.util.Date,int) -> addSeconds
    448:448:java.util.Date addMilliseconds(java.util.Date,int) -> addMilliseconds
    463:469:java.util.Date add(java.util.Date,int,int) -> add
    484:484:java.util.Date setYears(java.util.Date,int) -> setYears
    499:499:java.util.Date setMonths(java.util.Date,int) -> setMonths
    514:514:java.util.Date setDays(java.util.Date,int) -> setDays
    530:530:java.util.Date setHours(java.util.Date,int) -> setHours
    545:545:java.util.Date setMinutes(java.util.Date,int) -> setMinutes
    560:560:java.util.Date setSeconds(java.util.Date,int) -> setSeconds
    575:575:java.util.Date setMilliseconds(java.util.Date,int) -> setMilliseconds
    592:600:java.util.Date set(java.util.Date,int,int) -> set
    613:615:java.util.Calendar toCalendar(java.util.Date) -> toCalendar
    646:652:java.util.Date round(java.util.Date,int) -> round
    683:688:java.util.Calendar round(java.util.Calendar,int) -> round
    720:728:java.util.Date round(java.lang.Object,int) -> round
    749:755:java.util.Date truncate(java.util.Date,int) -> truncate
    774:779:java.util.Calendar truncate(java.util.Calendar,int) -> truncate
    799:807:java.util.Date truncate(java.lang.Object,int) -> truncate
    829:835:java.util.Date ceiling(java.util.Date,int) -> ceiling
    855:860:java.util.Calendar ceiling(java.util.Calendar,int) -> ceiling
    881:889:java.util.Date ceiling(java.lang.Object,int) -> ceiling
    903:1036:void modify(java.util.Calendar,int,int) -> modify
    1066:1071:java.util.Iterator iterator(java.util.Date,int) -> iterator
    1099:1167:java.util.Iterator iterator(java.util.Calendar,int) -> iterator
    1187:1195:java.util.Iterator iterator(java.lang.Object,int) -> iterator
    1233:1233:long getFragmentInMilliseconds(java.util.Date,int) -> getFragmentInMilliseconds
    1273:1273:long getFragmentInSeconds(java.util.Date,int) -> getFragmentInSeconds
    1313:1313:long getFragmentInMinutes(java.util.Date,int) -> getFragmentInMinutes
    1353:1353:long getFragmentInHours(java.util.Date,int) -> getFragmentInHours
    1393:1393:long getFragmentInDays(java.util.Date,int) -> getFragmentInDays
    1433:1433:long getFragmentInMilliseconds(java.util.Calendar,int) -> getFragmentInMilliseconds
    1472:1472:long getFragmentInSeconds(java.util.Calendar,int) -> getFragmentInSeconds
    1512:1512:long getFragmentInMinutes(java.util.Calendar,int) -> getFragmentInMinutes
    1552:1552:long getFragmentInHours(java.util.Calendar,int) -> getFragmentInHours
    1594:1594:long getFragmentInDays(java.util.Calendar,int) -> getFragmentInDays
    1609:1614:long getFragment(java.util.Date,int,int) -> getFragment
    1629:1667:long getFragment(java.util.Calendar,int,int) -> getFragment
    1684:1684:boolean truncatedEquals(java.util.Calendar,java.util.Calendar,int) -> truncatedEquals
    1701:1701:boolean truncatedEquals(java.util.Date,java.util.Date,int) -> truncatedEquals
    1719:1721:int truncatedCompareTo(java.util.Calendar,java.util.Calendar,int) -> truncatedCompareTo
    1739:1741:int truncatedCompareTo(java.util.Date,java.util.Date,int) -> truncatedCompareTo
    1754:1774:long getMillisPerUnit(int) -> getMillisPerUnit
    74:74:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.DateUtils$DateIterator -> org.apache.commons.lang3.time.DateUtils$DateIterator:
    java.util.Calendar endFinal -> endFinal
    java.util.Calendar spot -> spot
    1792:1796:void <init>(java.util.Calendar,java.util.Calendar) -> <init>
    1804:1804:boolean hasNext() -> hasNext
    1813:1817:java.util.Calendar next() -> next
    1827:1827:void remove() -> remove
    1781:1781:java.lang.Object next() -> next
org.apache.commons.lang3.time.DurationFormatUtils -> org.apache.commons.lang3.time.DurationFormatUtils:
    java.lang.String ISO_EXTENDED_FORMAT_PATTERN -> ISO_EXTENDED_FORMAT_PATTERN
    java.lang.Object y -> y
    java.lang.Object M -> M
    java.lang.Object d -> d
    java.lang.Object H -> H
    java.lang.Object m -> m
    java.lang.Object s -> s
    java.lang.Object S -> S
    53:54:void <init>() -> <init>
    76:76:java.lang.String formatDurationHMS(long) -> formatDurationHMS
    91:91:java.lang.String formatDurationISO(long) -> formatDurationISO
    106:106:java.lang.String formatDuration(long,java.lang.String) -> formatDuration
    124:152:java.lang.String formatDuration(long,java.lang.String,boolean) -> formatDuration
    174:216:java.lang.String formatDurationWords(long,boolean,boolean) -> formatDurationWords
    230:230:java.lang.String formatPeriodISO(long,long) -> formatPeriodISO
    243:243:java.lang.String formatPeriod(long,long,java.lang.String) -> formatPeriod
    278:396:java.lang.String formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone) -> formatPeriod
    416:466:java.lang.String format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],int,int,int,int,int,int,int,boolean) -> format
    484:536:org.apache.commons.lang3.time.DurationFormatUtils$Token[] lexx(java.lang.String) -> lexx
    469:475:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.DurationFormatUtils$Token -> org.apache.commons.lang3.time.DurationFormatUtils$Token:
    java.lang.Object value -> value
    int count -> count
    553:559:boolean containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils$Token[],java.lang.Object) -> containsTokenWithValue
    570:573:void <init>(java.lang.Object) -> <init>
    582:585:void <init>(java.lang.Object,int) -> <init>
    591:592:void increment() -> increment
    600:600:int getCount() -> getCount
    609:609:java.lang.Object getValue() -> getValue
    620:636:boolean equals(java.lang.Object) -> equals
    648:648:int hashCode() -> hashCode
    658:658:java.lang.String toString() -> toString
org.apache.commons.lang3.time.FastDateFormat -> org.apache.commons.lang3.time.FastDateFormat:
    long serialVersionUID -> serialVersionUID
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    org.apache.commons.lang3.time.FormatCache cache -> cache
    java.util.concurrent.ConcurrentMap cTimeZoneDisplayCache -> cTimeZoneDisplayCache
    java.lang.String mPattern -> mPattern
    java.util.TimeZone mTimeZone -> mTimeZone
    java.util.Locale mLocale -> mLocale
    org.apache.commons.lang3.time.FastDateFormat$Rule[] mRules -> mRules
    int mMaxLengthEstimate -> mMaxLengthEstimate
    146:146:org.apache.commons.lang3.time.FastDateFormat getInstance() -> getInstance
    159:159:org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String) -> getInstance
    174:174:org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone) -> getInstance
    188:188:org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    205:205:org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    220:220:org.apache.commons.lang3.time.FastDateFormat getDateInstance(int) -> getDateInstance
    235:235:org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    251:251:org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone) -> getDateInstance
    267:267:org.apache.commons.lang3.time.FastDateFormat getDateInstance(int,java.util.TimeZone,java.util.Locale) -> getDateInstance
    282:282:org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int) -> getTimeInstance
    297:297:org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    313:313:org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone) -> getTimeInstance
    329:329:org.apache.commons.lang3.time.FastDateFormat getTimeInstance(int,java.util.TimeZone,java.util.Locale) -> getTimeInstance
    345:345:org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    361:361:org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    378:378:org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone) -> getDateTimeInstance
    395:395:org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
    409:419:java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> getTimeZoneDisplay
    432:438:void <init>(java.lang.String,java.util.TimeZone,java.util.Locale) -> <init>
    444:453:void init() -> init
    464:583:java.util.List parsePattern() -> parsePattern
    594:642:java.lang.String parseToken(java.lang.String,int[]) -> parseToken
    653:659:org.apache.commons.lang3.time.FastDateFormat$NumberRule selectNumberRule(int,int) -> selectNumberRule
    676:683:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    696:696:java.lang.String format(long) -> format
    706:708:java.lang.String format(java.util.Date) -> format
    718:718:java.lang.String format(java.util.Calendar) -> format
    731:731:java.lang.StringBuffer format(long,java.lang.StringBuffer) -> format
    743:745:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer) -> format
    757:757:java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer) -> format
    769:772:java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer) -> applyRules
    786:788:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    799:799:java.lang.String getPattern() -> getPattern
    810:810:java.util.TimeZone getTimeZone() -> getTimeZone
    819:819:java.util.Locale getLocale() -> getLocale
    832:832:int getMaxLengthEstimate() -> getMaxLengthEstimate
    845:849:boolean equals(java.lang.Object) -> equals
    861:861:int hashCode() -> hashCode
    871:871:java.lang.String toString() -> toString
    885:887:void readObject(java.io.ObjectInputStream) -> readObject
    107:114:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.FastDateFormat$1 -> org.apache.commons.lang3.time.FastDateFormat$1:
    109:109:void <init>() -> <init>
    110:110:org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
    109:109:java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral -> org.apache.commons.lang3.time.FastDateFormat$CharacterLiteral:
    char mValue -> mValue
    936:938:void <init>(char) -> <init>
    944:944:int estimateLength() -> estimateLength
    951:952:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$NumberRule -> org.apache.commons.lang3.time.FastDateFormat$NumberRule:
    void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField -> org.apache.commons.lang3.time.FastDateFormat$PaddedNumberField:
    int mField -> mField
    int mSize -> mSize
    1125:1132:void <init>(int,int) -> <init>
    1138:1138:int estimateLength() -> estimateLength
    1145:1146:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1152:1171:void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$Rule -> org.apache.commons.lang3.time.FastDateFormat$Rule:
    int estimateLength() -> estimateLength
    void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$StringLiteral -> org.apache.commons.lang3.time.FastDateFormat$StringLiteral:
    java.lang.String mValue -> mValue
    967:969:void <init>(java.lang.String) -> <init>
    975:975:int estimateLength() -> estimateLength
    982:983:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TextField -> org.apache.commons.lang3.time.FastDateFormat$TextField:
    int mField -> mField
    java.lang.String[] mValues -> mValues
    1000:1003:void <init>(int,java.lang.String[]) -> <init>
    1009:1016:int estimateLength() -> estimateLength
    1023:1024:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey -> org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey:
    java.util.TimeZone mTimeZone -> mTimeZone
    int mStyle -> mStyle
    java.util.Locale mLocale -> mLocale
    1484:1491:void <init>(java.util.TimeZone,boolean,int,java.util.Locale) -> <init>
    1498:1498:int hashCode() -> hashCode
    1506:1516:boolean equals(java.lang.Object) -> equals
org.apache.commons.lang3.time.FastDateFormat$TimeZoneNameRule -> org.apache.commons.lang3.time.FastDateFormat$TimeZoneNameRule:
    java.util.TimeZone mTimeZone -> mTimeZone
    java.lang.String mStandard -> mStandard
    java.lang.String mDaylight -> mDaylight
    1387:1392:void <init>(java.util.TimeZone,java.util.Locale,int) -> <init>
    1398:1398:int estimateLength() -> estimateLength
    1405:1410:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule -> org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule:
    org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule INSTANCE_COLON -> INSTANCE_COLON
    org.apache.commons.lang3.time.FastDateFormat$TimeZoneNumberRule INSTANCE_NO_COLON -> INSTANCE_NO_COLON
    boolean mColon -> mColon
    1428:1430:void <init>(boolean) -> <init>
    1436:1436:int estimateLength() -> estimateLength
    1443:1463:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1418:1419:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.FastDateFormat$TwelveHourField -> org.apache.commons.lang3.time.FastDateFormat$TwelveHourField:
    org.apache.commons.lang3.time.FastDateFormat$NumberRule mRule -> mRule
    1300:1302:void <init>(org.apache.commons.lang3.time.FastDateFormat$NumberRule) -> <init>
    1308:1308:int estimateLength() -> estimateLength
    1315:1320:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1326:1327:void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TwentyFourHourField -> org.apache.commons.lang3.time.FastDateFormat$TwentyFourHourField:
    org.apache.commons.lang3.time.FastDateFormat$NumberRule mRule -> mRule
    1342:1344:void <init>(org.apache.commons.lang3.time.FastDateFormat$NumberRule) -> <init>
    1350:1350:int estimateLength() -> estimateLength
    1357:1362:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1368:1369:void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField -> org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField:
    org.apache.commons.lang3.time.FastDateFormat$TwoDigitMonthField INSTANCE -> INSTANCE
    1262:1263:void <init>() -> <init>
    1269:1269:int estimateLength() -> estimateLength
    1276:1277:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1283:1285:void appendTo(java.lang.StringBuffer,int) -> appendTo
    1256:1256:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField -> org.apache.commons.lang3.time.FastDateFormat$TwoDigitNumberField:
    int mField -> mField
    1185:1187:void <init>(int) -> <init>
    1193:1193:int estimateLength() -> estimateLength
    1200:1201:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1207:1213:void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField -> org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField:
    org.apache.commons.lang3.time.FastDateFormat$TwoDigitYearField INSTANCE -> INSTANCE
    1226:1227:void <init>() -> <init>
    1233:1233:int estimateLength() -> estimateLength
    1240:1241:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1247:1249:void appendTo(java.lang.StringBuffer,int) -> appendTo
    1220:1220:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField -> org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField:
    org.apache.commons.lang3.time.FastDateFormat$UnpaddedMonthField INSTANCE -> INSTANCE
    1082:1083:void <init>() -> <init>
    1089:1089:int estimateLength() -> estimateLength
    1096:1097:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1103:1109:void appendTo(java.lang.StringBuffer,int) -> appendTo
    1075:1075:void <clinit>() -> <clinit>
org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField -> org.apache.commons.lang3.time.FastDateFormat$UnpaddedNumberField:
    int mField -> mField
    1038:1040:void <init>(int) -> <init>
    1046:1046:int estimateLength() -> estimateLength
    1053:1054:void appendTo(java.lang.StringBuffer,java.util.Calendar) -> appendTo
    1060:1068:void appendTo(java.lang.StringBuffer,int) -> appendTo
org.apache.commons.lang3.time.FormatCache -> org.apache.commons.lang3.time.FormatCache:
    int NONE -> NONE
    java.util.concurrent.ConcurrentMap cInstanceCache -> cInstanceCache
    java.util.concurrent.ConcurrentMap cDateTimeInstanceCache -> cDateTimeInstanceCache
    35:158:void <init>() -> <init>
    54:54:java.text.Format getInstance() -> getInstance
    70:90:java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> getInstance
    java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale) -> createInstance
    120:151:java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale) -> getDateTimeInstance
org.apache.commons.lang3.time.FormatCache$MultipartKey -> org.apache.commons.lang3.time.FormatCache$MultipartKey:
    java.lang.Object[] keys -> keys
    int hashCode -> hashCode
    166:168:void <init>(java.lang.Object[]) -> <init>
    175:181:boolean equals(java.lang.Object) -> equals
    189:198:int hashCode() -> hashCode
org.apache.commons.lang3.time.StopWatch -> org.apache.commons.lang3.time.StopWatch:
    long NANO_2_MILLIS -> NANO_2_MILLIS
    int STATE_UNSTARTED -> STATE_UNSTARTED
    int STATE_RUNNING -> STATE_RUNNING
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_SUSPENDED -> STATE_SUSPENDED
    int STATE_UNSPLIT -> STATE_UNSPLIT
    int STATE_SPLIT -> STATE_SPLIT
    int runningState -> runningState
    int splitState -> splitState
    long startTime -> startTime
    long startTimeMillis -> startTimeMillis
    long stopTime -> stopTime
    79:110:void <init>() -> <init>
    125:134:void start() -> start
    149:156:void stop() -> stop
    168:170:void reset() -> reset
    186:191:void split() -> split
    207:211:void unsplit() -> unsplit
    227:232:void suspend() -> suspend
    248:253:void resume() -> resume
    268:268:long getTime() -> getTime
    284:291:long getNanoTime() -> getNanoTime
    310:310:long getSplitTime() -> getSplitTime
    328:331:long getSplitNanoTime() -> getSplitNanoTime
    343:347:long getStartTime() -> getStartTime
    363:363:java.lang.String toString() -> toString
    379:379:java.lang.String toSplitString() -> toSplitString
org.apache.commons.lang3.tuple.ImmutablePair -> org.apache.commons.lang3.tuple.ImmutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    58:58:org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object) -> of
    68:71:void <init>(java.lang.Object,java.lang.Object) -> <init>
    79:79:java.lang.Object getLeft() -> getLeft
    87:87:java.lang.Object getRight() -> getRight
    100:100:java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.MutablePair -> org.apache.commons.lang3.tuple.MutablePair:
    long serialVersionUID -> serialVersionUID
    java.lang.Object left -> left
    java.lang.Object right -> right
    53:53:org.apache.commons.lang3.tuple.MutablePair of(java.lang.Object,java.lang.Object) -> of
    60:61:void <init>() -> <init>
    70:73:void <init>(java.lang.Object,java.lang.Object) -> <init>
    81:81:java.lang.Object getLeft() -> getLeft
    90:91:void setLeft(java.lang.Object) -> setLeft
    98:98:java.lang.Object getRight() -> getRight
    107:108:void setRight(java.lang.Object) -> setRight
    118:120:java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.commons.lang3.tuple.Pair -> org.apache.commons.lang3.tuple.Pair:
    long serialVersionUID -> serialVersionUID
    42:42:void <init>() -> <init>
    60:60:org.apache.commons.lang3.tuple.Pair of(java.lang.Object,java.lang.Object) -> of
    java.lang.Object getLeft() -> getLeft
    java.lang.Object getRight() -> getRight
    91:91:java.lang.Object getKey() -> getKey
    103:103:java.lang.Object getValue() -> getValue
    115:115:int compareTo(org.apache.commons.lang3.tuple.Pair) -> compareTo
    127:135:boolean equals(java.lang.Object) -> equals
    147:147:int hashCode() -> hashCode
    158:158:java.lang.String toString() -> toString
    173:173:java.lang.String toString(java.lang.String) -> toString
    42:42:int compareTo(java.lang.Object) -> compareTo
org.apache.commons.logging.Log -> org.apache.commons.logging.Log:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
org.apache.commons.logging.LogConfigurationException -> org.apache.commons.logging.LogConfigurationException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    36:72:void <init>() -> <init>
    45:72:void <init>(java.lang.String) -> <init>
    55:56:void <init>(java.lang.Throwable) -> <init>
    65:72:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    78:78:java.lang.Throwable getCause() -> getCause
org.apache.commons.logging.LogFactory -> org.apache.commons.logging.LogFactory:
    java.lang.String PRIORITY_KEY -> PRIORITY_KEY
    java.lang.String TCCL_KEY -> TCCL_KEY
    java.lang.String FACTORY_PROPERTY -> FACTORY_PROPERTY
    java.lang.String FACTORY_DEFAULT -> FACTORY_DEFAULT
    java.lang.String FACTORY_PROPERTIES -> FACTORY_PROPERTIES
    java.lang.String SERVICE_ID -> SERVICE_ID
    java.lang.String DIAGNOSTICS_DEST_PROPERTY -> DIAGNOSTICS_DEST_PROPERTY
    java.io.PrintStream diagnosticsStream -> diagnosticsStream
    java.lang.String diagnosticPrefix -> diagnosticPrefix
    java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY -> HASHTABLE_IMPLEMENTATION_PROPERTY
    java.lang.String WEAK_HASHTABLE_CLASSNAME -> WEAK_HASHTABLE_CLASSNAME
    java.lang.ClassLoader thisClassLoader -> thisClassLoader
    java.util.Hashtable factories -> factories
    org.apache.commons.logging.LogFactory nullClassLoaderFactory -> nullClassLoaderFactory
    java.lang.Class class$java$lang$Thread -> class$java$lang$Thread
    java.lang.Class class$org$apache$commons$logging$LogFactory -> class$org$apache$commons$logging$LogFactory
    200:201:void <init>() -> <init>
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    319:354:java.util.Hashtable createFactoryStore() -> createFactoryStore
    361:364:java.lang.String trim(java.lang.String) -> trim
    380:387:void handleThrowable(java.lang.Throwable) -> handleThrowable
    421:645:org.apache.commons.logging.LogFactory getFactory() -> getFactory
    657:657:org.apache.commons.logging.Log getLog(java.lang.Class) -> getLog
    671:671:org.apache.commons.logging.Log getLog(java.lang.String) -> getLog
    683:702:void release(java.lang.ClassLoader) -> release
    713:731:void releaseAll() -> releaseAll
    764:770:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    794:794:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    814:814:java.lang.ClassLoader getContextClassLoaderInternal() -> getContextClassLoaderInternal
    843:898:java.lang.ClassLoader directGetContextClassLoader() -> directGetContextClassLoader
    916:923:org.apache.commons.logging.LogFactory getCachedFactory(java.lang.ClassLoader) -> getCachedFactory
    940:947:void cacheFactory(java.lang.ClassLoader,org.apache.commons.logging.LogFactory) -> cacheFactory
    1000:1018:org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader) -> newFactory
    1038:1038:org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    1055:1201:java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader) -> createFactory
    1218:1266:boolean implementsLogFactory(java.lang.Class) -> implementsLogFactory
    1276:1276:java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> getResourceAsStream
    1302:1326:java.util.Enumeration getResources(java.lang.ClassLoader,java.lang.String) -> getResources
    1338:1376:java.util.Properties getProperties(java.net.URL) -> getProperties
    1399:1471:java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String) -> getConfigurationFile
    1485:1485:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    1502:1523:java.io.PrintStream initDiagnostics() -> initDiagnostics
    1538:1538:boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    1560:1565:void logDiagnostic(java.lang.String) -> logDiagnostic
    1574:1578:void logRawDiagnostic(java.lang.String) -> logRawDiagnostic
    1598:1625:void logClassLoaderEnvironment(java.lang.Class) -> logClassLoaderEnvironment
    1635:1673:void logHierarchy(java.lang.String,java.lang.ClassLoader) -> logHierarchy
    1688:1691:java.lang.String objectId(java.lang.Object) -> objectId
    847:847:java.lang.Class class$(java.lang.String) -> class$
    47:47:void access$000(java.lang.String) -> access$000
    138:1745:void <clinit>() -> <clinit>
org.apache.commons.logging.LogFactory$1 -> org.apache.commons.logging.LogFactory$1:
    815:815:void <init>() -> <init>
    817:817:java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$2 -> org.apache.commons.logging.LogFactory$2:
    java.lang.String val$factoryClass -> val$factoryClass
    java.lang.ClassLoader val$classLoader -> val$classLoader
    1001:1001:void <init>(java.lang.String,java.lang.ClassLoader) -> <init>
    1003:1003:java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$3 -> org.apache.commons.logging.LogFactory$3:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.String val$name -> val$name
    1277:1277:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    1279:1282:java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$4 -> org.apache.commons.logging.LogFactory$4:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.String val$name -> val$name
    1303:1303:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    1306:1321:java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$5 -> org.apache.commons.logging.LogFactory$5:
    java.net.URL val$url -> val$url
    1339:1339:void <init>(java.net.URL) -> <init>
    1341:1373:java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$6 -> org.apache.commons.logging.LogFactory$6:
    java.lang.String val$key -> val$key
    java.lang.String val$def -> val$def
    1486:1486:void <init>(java.lang.String,java.lang.String) -> <init>
    1488:1488:java.lang.Object run() -> run
org.apache.commons.logging.LogSource -> org.apache.commons.logging.LogSource:
    java.util.Hashtable logs -> logs
    boolean log4jIsAvailable -> log4jIsAvailable
    boolean jdk14IsAvailable -> jdk14IsAvailable
    java.lang.reflect.Constructor logImplctor -> logImplctor
    131:132:void <init>() -> <init>
    145:152:void setLogImplementation(java.lang.String) -> setLogImplementation
    161:164:void setLogImplementation(java.lang.Class) -> setLogImplementation
    168:173:org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    178:178:org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    201:209:org.apache.commons.logging.Log makeNewLogInstance(java.lang.String) -> makeNewLogInstance
    217:217:java.lang.String[] getLogNames() -> getLogNames
    59:126:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.AvalonLogger -> org.apache.commons.logging.impl.AvalonLogger:
    org.apache.avalon.framework.logger.Logger defaultLogger -> defaultLogger
    org.apache.avalon.framework.logger.Logger logger -> logger
    65:67:void <init>(org.apache.avalon.framework.logger.Logger) -> <init>
    75:80:void <init>(java.lang.String) -> <init>
    88:88:org.apache.avalon.framework.logger.Logger getLogger() -> getLogger
    98:99:void setDefaultLogger(org.apache.avalon.framework.logger.Logger) -> setDefaultLogger
    109:112:void debug(java.lang.Object,java.lang.Throwable) -> debug
    121:124:void debug(java.lang.Object) -> debug
    134:137:void error(java.lang.Object,java.lang.Throwable) -> error
    146:149:void error(java.lang.Object) -> error
    159:162:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    171:174:void fatal(java.lang.Object) -> fatal
    184:187:void info(java.lang.Object,java.lang.Throwable) -> info
    196:199:void info(java.lang.Object) -> info
    206:206:boolean isDebugEnabled() -> isDebugEnabled
    214:214:boolean isErrorEnabled() -> isErrorEnabled
    222:222:boolean isFatalEnabled() -> isFatalEnabled
    230:230:boolean isInfoEnabled() -> isInfoEnabled
    238:238:boolean isTraceEnabled() -> isTraceEnabled
    246:246:boolean isWarnEnabled() -> isWarnEnabled
    257:260:void trace(java.lang.Object,java.lang.Throwable) -> trace
    269:272:void trace(java.lang.Object) -> trace
    282:285:void warn(java.lang.Object,java.lang.Throwable) -> warn
    294:297:void warn(java.lang.Object) -> warn
    55:55:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.Jdk13LumberjackLogger -> org.apache.commons.logging.impl.Jdk13LumberjackLogger:
    long serialVersionUID -> serialVersionUID
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    java.lang.String sourceClassName -> sourceClassName
    java.lang.String sourceMethodName -> sourceMethodName
    boolean classAndMethodFound -> classAndMethodFound
    java.util.logging.Level dummyLevel -> dummyLevel
    48:72:void <init>(java.lang.String) -> <init>
    77:89:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    97:123:void getClassAndMethod() -> getClassAndMethod
    132:133:void debug(java.lang.Object) -> debug
    143:144:void debug(java.lang.Object,java.lang.Throwable) -> debug
    153:154:void error(java.lang.Object) -> error
    164:165:void error(java.lang.Object,java.lang.Throwable) -> error
    174:175:void fatal(java.lang.Object) -> fatal
    185:186:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    192:195:java.util.logging.Logger getLogger() -> getLogger
    205:206:void info(java.lang.Object) -> info
    216:217:void info(java.lang.Object,java.lang.Throwable) -> info
    223:223:boolean isDebugEnabled() -> isDebugEnabled
    230:230:boolean isErrorEnabled() -> isErrorEnabled
    237:237:boolean isFatalEnabled() -> isFatalEnabled
    244:244:boolean isInfoEnabled() -> isInfoEnabled
    251:251:boolean isTraceEnabled() -> isTraceEnabled
    258:258:boolean isWarnEnabled() -> isWarnEnabled
    268:269:void trace(java.lang.Object) -> trace
    279:280:void trace(java.lang.Object,java.lang.Throwable) -> trace
    289:290:void warn(java.lang.Object) -> warn
    300:301:void warn(java.lang.Object,java.lang.Throwable) -> warn
    60:60:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.Jdk14Logger -> org.apache.commons.logging.impl.Jdk14Logger:
    long serialVersionUID -> serialVersionUID
    java.util.logging.Level dummyLevel -> dummyLevel
    java.util.logging.Logger logger -> logger
    java.lang.String name -> name
    53:68:void <init>(java.lang.String) -> <init>
    73:92:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    103:104:void debug(java.lang.Object) -> debug
    114:115:void debug(java.lang.Object,java.lang.Throwable) -> debug
    124:125:void error(java.lang.Object) -> error
    135:136:void error(java.lang.Object,java.lang.Throwable) -> error
    145:146:void fatal(java.lang.Object) -> fatal
    156:157:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    163:166:java.util.logging.Logger getLogger() -> getLogger
    176:177:void info(java.lang.Object) -> info
    187:188:void info(java.lang.Object,java.lang.Throwable) -> info
    194:194:boolean isDebugEnabled() -> isDebugEnabled
    201:201:boolean isErrorEnabled() -> isErrorEnabled
    208:208:boolean isFatalEnabled() -> isFatalEnabled
    215:215:boolean isInfoEnabled() -> isInfoEnabled
    222:222:boolean isTraceEnabled() -> isTraceEnabled
    229:229:boolean isWarnEnabled() -> isWarnEnabled
    239:240:void trace(java.lang.Object) -> trace
    250:251:void trace(java.lang.Object,java.lang.Throwable) -> trace
    260:261:void warn(java.lang.Object) -> warn
    271:272:void warn(java.lang.Object,java.lang.Throwable) -> warn
    44:44:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.Log4JLogger -> org.apache.commons.logging.impl.Log4JLogger:
    long serialVersionUID -> serialVersionUID
    java.lang.String FQCN -> FQCN
    org.apache.log4j.Logger logger -> logger
    java.lang.String name -> name
    org.apache.log4j.Priority traceLevel -> traceLevel
    java.lang.Class class$org$apache$commons$logging$impl$Log4JLogger -> class$org$apache$commons$logging$impl$Log4JLogger
    java.lang.Class class$org$apache$log4j$Level -> class$org$apache$log4j$Level
    java.lang.Class class$org$apache$log4j$Priority -> class$org$apache$log4j$Priority
    56:101:void <init>() -> <init>
    56:109:void <init>(java.lang.String) -> <init>
    56:121:void <init>(org.apache.log4j.Logger) -> <init>
    132:133:void trace(java.lang.Object) -> trace
    145:146:void trace(java.lang.Object,java.lang.Throwable) -> trace
    155:156:void debug(java.lang.Object) -> debug
    166:167:void debug(java.lang.Object,java.lang.Throwable) -> debug
    176:177:void info(java.lang.Object) -> info
    187:188:void info(java.lang.Object,java.lang.Throwable) -> info
    197:198:void warn(java.lang.Object) -> warn
    208:209:void warn(java.lang.Object,java.lang.Throwable) -> warn
    218:219:void error(java.lang.Object) -> error
    229:230:void error(java.lang.Object,java.lang.Throwable) -> error
    239:240:void fatal(java.lang.Object) -> fatal
    250:251:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    257:266:org.apache.log4j.Logger getLogger() -> getLogger
    273:273:boolean isDebugEnabled() -> isDebugEnabled
    280:280:boolean isErrorEnabled() -> isErrorEnabled
    287:287:boolean isFatalEnabled() -> isFatalEnabled
    294:294:boolean isInfoEnabled() -> isInfoEnabled
    303:303:boolean isTraceEnabled() -> isTraceEnabled
    310:310:boolean isWarnEnabled() -> isWarnEnabled
    53:53:java.lang.Class class$(java.lang.String) -> class$
    53:95:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.LogFactoryImpl -> org.apache.commons.logging.impl.LogFactoryImpl:
    java.lang.String LOGGING_IMPL_LOG4J_LOGGER -> LOGGING_IMPL_LOG4J_LOGGER
    java.lang.String LOGGING_IMPL_JDK14_LOGGER -> LOGGING_IMPL_JDK14_LOGGER
    java.lang.String LOGGING_IMPL_LUMBERJACK_LOGGER -> LOGGING_IMPL_LUMBERJACK_LOGGER
    java.lang.String LOGGING_IMPL_SIMPLE_LOGGER -> LOGGING_IMPL_SIMPLE_LOGGER
    java.lang.String PKG_IMPL -> PKG_IMPL
    int PKG_LEN -> PKG_LEN
    java.lang.String LOG_PROPERTY -> LOG_PROPERTY
    java.lang.String LOG_PROPERTY_OLD -> LOG_PROPERTY_OLD
    java.lang.String ALLOW_FLAWED_CONTEXT_PROPERTY -> ALLOW_FLAWED_CONTEXT_PROPERTY
    java.lang.String ALLOW_FLAWED_DISCOVERY_PROPERTY -> ALLOW_FLAWED_DISCOVERY_PROPERTY
    java.lang.String ALLOW_FLAWED_HIERARCHY_PROPERTY -> ALLOW_FLAWED_HIERARCHY_PROPERTY
    java.lang.String[] classesToDiscover -> classesToDiscover
    boolean useTCCL -> useTCCL
    java.lang.String diagnosticPrefix -> diagnosticPrefix
    java.util.Hashtable attributes -> attributes
    java.util.Hashtable instances -> instances
    java.lang.String logClassName -> logClassName
    java.lang.reflect.Constructor logConstructor -> logConstructor
    java.lang.Class[] logConstructorSignature -> logConstructorSignature
    java.lang.reflect.Method logMethod -> logMethod
    java.lang.Class[] logMethodSignature -> logMethodSignature
    boolean allowFlawedContext -> allowFlawedContext
    boolean allowFlawedDiscovery -> allowFlawedDiscovery
    boolean allowFlawedHierarchy -> allowFlawedHierarchy
    java.lang.Class class$java$lang$String -> class$java$lang$String
    java.lang.Class class$org$apache$commons$logging$LogFactory -> class$org$apache$commons$logging$LogFactory
    java.lang.Class class$org$apache$commons$logging$impl$LogFactoryImpl -> class$org$apache$commons$logging$impl$LogFactoryImpl
    java.lang.Class class$org$apache$commons$logging$Log -> class$org$apache$commons$logging$Log
    86:221:void <init>() -> <init>
    247:247:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    256:256:java.lang.String[] getAttributeNames() -> getAttributeNames
    269:269:org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    290:295:org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    308:310:void release() -> release
    319:320:void removeAttribute(java.lang.String) -> removeAttribute
    347:360:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    375:375:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    383:383:boolean isDiagnosticsEnabled() -> isDiagnosticsEnabled
    392:392:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    419:432:void initDiagnostics() -> initDiagnostics
    442:445:void logDiagnostic(java.lang.String) -> logDiagnostic
    455:459:java.lang.String getLogClassName() -> getLogClassName
    482:486:java.lang.reflect.Constructor getLogConstructor() -> getLogConstructor
    496:496:boolean isJdk13LumberjackAvailable() -> isJdk13LumberjackAvailable
    511:511:boolean isJdk14Available() -> isJdk14Available
    523:523:boolean isLog4JAvailable() -> isLog4JAvailable
    540:571:org.apache.commons.logging.Log newInstance(java.lang.String) -> newInstance
    597:597:java.lang.ClassLoader getContextClassLoaderInternal() -> getContextClassLoaderInternal
    616:616:java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> getSystemProperty
    633:641:java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader) -> getParentClassLoader
    652:676:boolean isLogLibraryAvailable(java.lang.String,java.lang.String) -> isLogLibraryAvailable
    692:734:java.lang.String getConfigurationValue(java.lang.String) -> getConfigurationValue
    742:746:boolean getBooleanConfiguration(java.lang.String,boolean) -> getBooleanConfiguration
    757:760:void initConfiguration() -> initConfiguration
    773:852:org.apache.commons.logging.Log discoverLogImplementation(java.lang.String) -> discoverLogImplementation
    864:878:void informUponSimilarName(java.lang.StringBuffer,java.lang.String,java.lang.String) -> informUponSimilarName
    888:938:java.lang.String findUserSpecifiedLogClassName() -> findUserSpecifiedLogClassName
    960:1112:org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean) -> createLogFromClass
    1134:1191:java.lang.ClassLoader getBaseClassLoader() -> getBaseClassLoader
    1207:1237:java.lang.ClassLoader getLowestClassLoader(java.lang.ClassLoader,java.lang.ClassLoader) -> getLowestClassLoader
    1259:1292:void handleFlawedDiscovery(java.lang.String,java.lang.ClassLoader,java.lang.Throwable) -> handleFlawedDiscovery
    1323:1392:void handleFlawedHierarchy(java.lang.ClassLoader,java.lang.Class) -> handleFlawedHierarchy
    210:210:java.lang.Class class$(java.lang.String) -> class$
    64:64:java.lang.ClassLoader access$000() -> access$000
    78:162:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.LogFactoryImpl$1 -> org.apache.commons.logging.impl.LogFactoryImpl$1:
    598:598:void <init>() -> <init>
    600:600:java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$2 -> org.apache.commons.logging.impl.LogFactoryImpl$2:
    java.lang.String val$key -> val$key
    java.lang.String val$def -> val$def
    617:617:void <init>(java.lang.String,java.lang.String) -> <init>
    619:619:java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$3 -> org.apache.commons.logging.impl.LogFactoryImpl$3:
    java.lang.ClassLoader val$cl -> val$cl
    org.apache.commons.logging.impl.LogFactoryImpl this$0 -> this$0
    634:634:void <init>(org.apache.commons.logging.impl.LogFactoryImpl,java.lang.ClassLoader) -> <init>
    636:636:java.lang.Object run() -> run
org.apache.commons.logging.impl.LogKitLogger -> org.apache.commons.logging.impl.LogKitLogger:
    long serialVersionUID -> serialVersionUID
    org.apache.log.Logger logger -> logger
    java.lang.String name -> name
    44:60:void <init>(java.lang.String) -> <init>
    68:77:org.apache.log.Logger getLogger() -> getLogger
    89:90:void trace(java.lang.Object) -> trace
    100:101:void trace(java.lang.Object,java.lang.Throwable) -> trace
    110:113:void debug(java.lang.Object) -> debug
    123:126:void debug(java.lang.Object,java.lang.Throwable) -> debug
    135:138:void info(java.lang.Object) -> info
    148:151:void info(java.lang.Object,java.lang.Throwable) -> info
    160:163:void warn(java.lang.Object) -> warn
    173:176:void warn(java.lang.Object,java.lang.Throwable) -> warn
    185:188:void error(java.lang.Object) -> error
    198:201:void error(java.lang.Object,java.lang.Throwable) -> error
    210:213:void fatal(java.lang.Object) -> fatal
    223:226:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    232:232:boolean isDebugEnabled() -> isDebugEnabled
    239:239:boolean isErrorEnabled() -> isErrorEnabled
    246:246:boolean isFatalEnabled() -> isFatalEnabled
    253:253:boolean isInfoEnabled() -> isInfoEnabled
    260:260:boolean isTraceEnabled() -> isTraceEnabled
    267:267:boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.NoOpLog -> org.apache.commons.logging.impl.NoOpLog:
    long serialVersionUID -> serialVersionUID
    35:35:void <init>() -> <init>
    37:37:void <init>(java.lang.String) -> <init>
    39:39:void trace(java.lang.Object) -> trace
    41:41:void trace(java.lang.Object,java.lang.Throwable) -> trace
    43:43:void debug(java.lang.Object) -> debug
    45:45:void debug(java.lang.Object,java.lang.Throwable) -> debug
    47:47:void info(java.lang.Object) -> info
    49:49:void info(java.lang.Object,java.lang.Throwable) -> info
    51:51:void warn(java.lang.Object) -> warn
    53:53:void warn(java.lang.Object,java.lang.Throwable) -> warn
    55:55:void error(java.lang.Object) -> error
    57:57:void error(java.lang.Object,java.lang.Throwable) -> error
    59:59:void fatal(java.lang.Object) -> fatal
    61:61:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    68:68:boolean isDebugEnabled() -> isDebugEnabled
    75:75:boolean isErrorEnabled() -> isErrorEnabled
    82:82:boolean isFatalEnabled() -> isFatalEnabled
    89:89:boolean isInfoEnabled() -> isInfoEnabled
    96:96:boolean isTraceEnabled() -> isTraceEnabled
    103:103:boolean isWarnEnabled() -> isWarnEnabled
org.apache.commons.logging.impl.ServletContextCleaner -> org.apache.commons.logging.impl.ServletContextCleaner:
    java.lang.Class[] RELEASE_SIGNATURE -> RELEASE_SIGNATURE
    java.lang.Class class$java$lang$ClassLoader -> class$java$lang$ClassLoader
    50:50:void <init>() -> <init>
    60:128:void contextDestroyed(javax.servlet.ServletContextEvent) -> contextDestroyed
    135:135:void contextInitialized(javax.servlet.ServletContextEvent) -> contextInitialized
    52:52:java.lang.Class class$(java.lang.String) -> class$
    52:52:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.SimpleLog -> org.apache.commons.logging.impl.SimpleLog:
    long serialVersionUID -> serialVersionUID
    java.lang.String systemPrefix -> systemPrefix
    java.util.Properties simpleLogProps -> simpleLogProps
    java.lang.String DEFAULT_DATE_TIME_FORMAT -> DEFAULT_DATE_TIME_FORMAT
    boolean showLogName -> showLogName
    boolean showShortName -> showShortName
    boolean showDateTime -> showDateTime
    java.lang.String dateTimeFormat -> dateTimeFormat
    java.text.DateFormat dateFormatter -> dateFormatter
    int LOG_LEVEL_TRACE -> LOG_LEVEL_TRACE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARN -> LOG_LEVEL_WARN
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_FATAL -> LOG_LEVEL_FATAL
    int LOG_LEVEL_ALL -> LOG_LEVEL_ALL
    int LOG_LEVEL_OFF -> LOG_LEVEL_OFF
    java.lang.String logName -> logName
    int currentLogLevel -> currentLogLevel
    java.lang.String shortLogName -> shortLogName
    java.lang.Class class$java$lang$Thread -> class$java$lang$Thread
    java.lang.Class class$org$apache$commons$logging$impl$SimpleLog -> class$org$apache$commons$logging$impl$SimpleLog
    136:142:java.lang.String getStringProperty(java.lang.String) -> getStringProperty
    146:147:java.lang.String getStringProperty(java.lang.String,java.lang.String) -> getStringProperty
    151:152:boolean getBooleanProperty(java.lang.String,boolean) -> getBooleanProperty
    190:241:void <init>(java.lang.String) -> <init>
    251:252:void setLevel(int) -> setLevel
    258:258:int getLevel() -> getLevel
    275:328:void log(int,java.lang.Object,java.lang.Throwable) -> log
    339:340:void write(java.lang.StringBuffer) -> write
    350:350:boolean isLevelEnabled(int) -> isLevelEnabled
    363:366:void debug(java.lang.Object) -> debug
    377:380:void debug(java.lang.Object,java.lang.Throwable) -> debug
    389:392:void trace(java.lang.Object) -> trace
    402:405:void trace(java.lang.Object,java.lang.Throwable) -> trace
    414:417:void info(java.lang.Object) -> info
    427:430:void info(java.lang.Object,java.lang.Throwable) -> info
    439:442:void warn(java.lang.Object) -> warn
    452:455:void warn(java.lang.Object,java.lang.Throwable) -> warn
    464:467:void error(java.lang.Object) -> error
    477:480:void error(java.lang.Object,java.lang.Throwable) -> error
    489:492:void fatal(java.lang.Object) -> fatal
    502:505:void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    515:515:boolean isDebugEnabled() -> isDebugEnabled
    526:526:boolean isErrorEnabled() -> isErrorEnabled
    537:537:boolean isFatalEnabled() -> isFatalEnabled
    548:548:boolean isInfoEnabled() -> isInfoEnabled
    559:559:boolean isTraceEnabled() -> isTraceEnabled
    570:570:boolean isWarnEnabled() -> isWarnEnabled
    584:631:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    635:635:java.io.InputStream getResourceAsStream(java.lang.String) -> getResourceAsStream
    588:588:java.lang.Class class$(java.lang.String) -> class$
    71:71:java.lang.ClassLoader access$000() -> access$000
    82:185:void <clinit>() -> <clinit>
org.apache.commons.logging.impl.SimpleLog$1 -> org.apache.commons.logging.impl.SimpleLog$1:
    java.lang.String val$name -> val$name
    636:636:void <init>(java.lang.String) -> <init>
    638:643:java.lang.Object run() -> run
org.apache.commons.logging.impl.WeakHashtable -> org.apache.commons.logging.impl.WeakHashtable:
    long serialVersionUID -> serialVersionUID
    int MAX_CHANGES_BEFORE_PURGE -> MAX_CHANGES_BEFORE_PURGE
    int PARTIAL_PURGE_COUNT -> PARTIAL_PURGE_COUNT
    java.lang.ref.ReferenceQueue queue -> queue
    int changeCount -> changeCount
    129:137:void <init>() -> <init>
    144:145:boolean containsKey(java.lang.Object) -> containsKey
    152:153:java.util.Enumeration elements() -> elements
    160:173:java.util.Set entrySet() -> entrySet
    181:182:java.lang.Object get(java.lang.Object) -> get
    189:191:java.util.Enumeration keys() -> keys
    206:216:java.util.Set keySet() -> keySet
    224:243:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    250:257:void putAll(java.util.Map) -> putAll
    263:264:java.util.Collection values() -> values
    273:281:java.lang.Object remove(java.lang.Object) -> remove
    288:289:boolean isEmpty() -> isEmpty
    296:297:int size() -> size
    304:305:java.lang.String toString() -> toString
    313:315:void rehash() -> rehash
    322:337:void purge() -> purge
    344:350:void purgeOne() -> purgeOne
org.apache.commons.logging.impl.WeakHashtable$1 -> org.apache.commons.logging.impl.WeakHashtable$1:
    java.util.Enumeration val$enumer -> val$enumer
    org.apache.commons.logging.impl.WeakHashtable this$0 -> this$0
    191:191:void <init>(org.apache.commons.logging.impl.WeakHashtable,java.util.Enumeration) -> <init>
    193:193:boolean hasMoreElements() -> hasMoreElements
    196:197:java.lang.Object nextElement() -> nextElement
org.apache.commons.logging.impl.WeakHashtable$Entry -> org.apache.commons.logging.impl.WeakHashtable$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    358:361:void <init>(java.lang.Object,java.lang.Object) -> <init>
    364:374:boolean equals(java.lang.Object) -> equals
    378:378:int hashCode() -> hashCode
    383:383:java.lang.Object setValue(java.lang.Object) -> setValue
    387:387:java.lang.Object getValue() -> getValue
    391:391:java.lang.Object getKey() -> getKey
    353:353:void <init>(java.lang.Object,java.lang.Object,org.apache.commons.logging.impl.WeakHashtable$1) -> <init>
org.apache.commons.logging.impl.WeakHashtable$Referenced -> org.apache.commons.logging.impl.WeakHashtable$Referenced:
    java.lang.ref.WeakReference reference -> reference
    int hashCode -> hashCode
    405:410:void <init>(java.lang.Object) -> <init>
    416:422:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    425:425:int hashCode() -> hashCode
    429:429:java.lang.Object getValue() -> getValue
    433:458:boolean equals(java.lang.Object) -> equals
    396:396:void <init>(java.lang.Object,org.apache.commons.logging.impl.WeakHashtable$1) -> <init>
    396:396:java.lang.Object access$100(org.apache.commons.logging.impl.WeakHashtable$Referenced) -> access$100
    396:396:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.apache.commons.logging.impl.WeakHashtable$1) -> <init>
org.apache.commons.logging.impl.WeakHashtable$WeakKey -> org.apache.commons.logging.impl.WeakHashtable$WeakKey:
    org.apache.commons.logging.impl.WeakHashtable$Referenced referenced -> referenced
    474:476:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.apache.commons.logging.impl.WeakHashtable$Referenced) -> <init>
    479:479:org.apache.commons.logging.impl.WeakHashtable$Referenced getReferenced() -> getReferenced
    467:467:org.apache.commons.logging.impl.WeakHashtable$Referenced access$400(org.apache.commons.logging.impl.WeakHashtable$WeakKey) -> access$400
    467:467:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.apache.commons.logging.impl.WeakHashtable$Referenced,org.apache.commons.logging.impl.WeakHashtable$1) -> <init>
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.lang.String) -> <init>
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.Consts -> org.apache.http.Consts:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ASCII -> ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    48:49:void <init>() -> <init>
    44:46:void <clinit>() -> <clinit>
org.apache.http.ContentTooLongException -> org.apache.http.ContentTooLongException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.lang.String) -> <init>
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionFactory -> org.apache.http.HttpConnectionFactory:
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
    long serialVersionUID -> serialVersionUID
    43:44:void <init>() -> <init>
    52:53:void <init>(java.lang.String) -> <init>
    63:65:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.HttpHeaders -> org.apache.http.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    38:39:void <init>() -> <init>
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.net.InetAddress address -> address
    80:90:void <init>(java.lang.String,int,java.lang.String) -> <init>
    100:101:void <init>(java.lang.String,int) -> <init>
    109:110:void <init>(java.lang.String) -> <init>
    126:136:void <init>(java.net.InetAddress,int,java.lang.String) -> <init>
    148:149:void <init>(java.net.InetAddress,int) -> <init>
    159:160:void <init>(java.net.InetAddress) -> <init>
    168:175:void <init>(org.apache.http.HttpHost) -> <init>
    183:183:java.lang.String getHostName() -> getHostName
    192:192:int getPort() -> getPort
    201:201:java.lang.String getSchemeName() -> getSchemeName
    212:212:java.net.InetAddress getAddress() -> getAddress
    221:229:java.lang.String toURI() -> toURI
    239:247:java.lang.String toHostString() -> toHostString
    254:254:java.lang.String toString() -> toString
    260:269:boolean equals(java.lang.Object) -> equals
    278:282:int hashCode() -> hashCode
    287:287:java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    75:76:void <init>(int,int) -> <init>
    90:107:org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    57:63:void <clinit>() -> <clinit>
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>() -> <init>
    54:55:void <init>(java.lang.String) -> <init>
org.apache.http.MessageConstraintException -> org.apache.http.MessageConstraintException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.lang.String) -> <init>
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
    46:47:void <init>(java.lang.String) -> <init>
    57:58:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>(java.lang.String) -> <init>
org.apache.http.ParseException -> org.apache.http.ParseException:
    long serialVersionUID -> serialVersionUID
    49:50:void <init>() -> <init>
    58:59:void <init>(java.lang.String) -> <init>
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>() -> <init>
    54:55:void <init>(java.lang.String) -> <init>
    65:66:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    70:74:void <init>(java.lang.String,int,int) -> <init>
    82:82:java.lang.String getProtocol() -> getProtocol
    91:91:int getMajor() -> getMajor
    100:100:int getMinor() -> getMinor
    121:126:org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    137:137:int hashCode() -> hashCode
    156:164:boolean equals(java.lang.Object) -> equals
    181:181:boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    202:209:int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    224:224:boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    239:239:boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    250:256:java.lang.String toString() -> toString
    261:261:java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.TruncatedChunkException -> org.apache.http.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>(java.lang.String) -> <init>
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>() -> <init>
    54:55:void <init>(java.lang.String) -> <init>
org.apache.http.annotation.GuardedBy -> org.apache.http.annotation.GuardedBy:
    java.lang.String value() -> value
org.apache.http.annotation.Immutable -> org.apache.http.annotation.Immutable:
org.apache.http.annotation.NotThreadSafe -> org.apache.http.annotation.NotThreadSafe:
org.apache.http.annotation.ThreadSafe -> org.apache.http.annotation.ThreadSafe:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    61:62:void <init>() -> <init>
org.apache.http.auth.AuthOption -> org.apache.http.auth.AuthOption:
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.Credentials creds -> creds
    42:47:void <init>(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials) -> <init>
    50:50:org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    54:54:org.apache.http.auth.Credentials getCredentials() -> getCredentials
    59:59:java.lang.String toString() -> toString
org.apache.http.auth.AuthProtocolState -> org.apache.http.auth.AuthProtocolState:
    org.apache.http.auth.AuthProtocolState UNCHALLENGED -> UNCHALLENGED
    org.apache.http.auth.AuthProtocolState CHALLENGED -> CHALLENGED
    org.apache.http.auth.AuthProtocolState HANDSHAKE -> HANDSHAKE
    org.apache.http.auth.AuthProtocolState FAILURE -> FAILURE
    org.apache.http.auth.AuthProtocolState SUCCESS -> SUCCESS
    org.apache.http.auth.AuthProtocolState[] $VALUES -> $VALUES
    29:29:org.apache.http.auth.AuthProtocolState[] values() -> values
    29:29:org.apache.http.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:31:void <clinit>() -> <clinit>
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeProvider -> org.apache.http.auth.AuthSchemeProvider:
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    58:60:void <init>() -> <init>
    80:83:void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    92:94:void unregister(java.lang.String) -> unregister
    110:115:org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    126:126:java.util.List getSchemeNames() -> getSchemeNames
    136:141:void setItems(java.util.Map) -> setItems
    144:144:org.apache.http.auth.AuthSchemeProvider lookup(java.lang.String) -> lookup
    51:51:java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.auth.AuthSchemeRegistry$1 -> org.apache.http.auth.AuthSchemeRegistry$1:
    java.lang.String val$name -> val$name
    org.apache.http.auth.AuthSchemeRegistry this$0 -> this$0
    144:144:void <init>(org.apache.http.auth.AuthSchemeRegistry,java.lang.String) -> <init>
    147:149:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    106:111:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    117:118:void <init>(org.apache.http.HttpHost,java.lang.String,java.lang.String) -> <init>
    124:125:void <init>(org.apache.http.HttpHost) -> <init>
    142:143:void <init>(java.lang.String,int,java.lang.String) -> <init>
    157:158:void <init>(java.lang.String,int) -> <init>
    164:170:void <init>(org.apache.http.auth.AuthScope) -> <init>
    176:176:java.lang.String getHost() -> getHost
    183:183:int getPort() -> getPort
    190:190:java.lang.String getRealm() -> getRealm
    197:197:java.lang.String getScheme() -> getScheme
    208:237:int match(org.apache.http.auth.AuthScope) -> match
    245:255:boolean equals(java.lang.Object) -> equals
    267:287:java.lang.String toString() -> toString
    295:300:int hashCode() -> hashCode
    51:73:void <clinit>() -> <clinit>
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    org.apache.http.auth.AuthProtocolState state -> state
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.AuthScope authScope -> authScope
    org.apache.http.auth.Credentials credentials -> credentials
    java.util.Queue authOptions -> authOptions
    58:60:void <init>() -> <init>
    68:73:void reset() -> reset
    79:79:org.apache.http.auth.AuthProtocolState getState() -> getState
    86:87:void setState(org.apache.http.auth.AuthProtocolState) -> setState
    93:93:org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    100:100:org.apache.http.auth.Credentials getCredentials() -> getCredentials
    112:117:void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials) -> update
    125:125:java.util.Queue getAuthOptions() -> getAuthOptions
    135:135:boolean hasAuthOptions() -> hasAuthOptions
    146:150:void update(java.util.Queue) -> update
    159:160:void invalidate() -> invalidate
    167:167:boolean isValid() -> isValid
    179:184:void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    195:196:void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    207:207:org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    219:220:void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    224:232:java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    67:68:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    49:52:void <init>(java.lang.String) -> <init>
    55:55:java.lang.String getName() -> getName
    60:62:int hashCode() -> hashCode
    67:76:boolean equals(java.lang.Object) -> equals
    81:85:java.lang.String toString() -> toString
org.apache.http.auth.ChallengeState -> org.apache.http.auth.ChallengeState:
    org.apache.http.auth.ChallengeState TARGET -> TARGET
    org.apache.http.auth.ChallengeState PROXY -> PROXY
    org.apache.http.auth.ChallengeState[] $VALUES -> $VALUES
    34:34:org.apache.http.auth.ChallengeState[] values() -> values
    34:34:org.apache.http.auth.ChallengeState valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:36:void <clinit>() -> <clinit>
org.apache.http.auth.ContextAwareAuthScheme -> org.apache.http.auth.ContextAwareAuthScheme:
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    67:68:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
    48:49:void <init>() -> <init>
    57:58:void <init>(java.lang.String) -> <init>
    68:69:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    64:86:void <init>(java.lang.String) -> <init>
    102:111:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    114:114:java.security.Principal getUserPrincipal() -> getUserPrincipal
    118:118:java.lang.String getUserName() -> getUserName
    122:122:java.lang.String getPassword() -> getPassword
    131:131:java.lang.String getDomain() -> getDomain
    140:140:java.lang.String getWorkstation() -> getWorkstation
    145:148:int hashCode() -> hashCode
    153:163:boolean equals(java.lang.Object) -> equals
    168:174:java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    54:71:void <init>(java.lang.String,java.lang.String) -> <init>
    74:74:java.lang.String getName() -> getName
    78:78:java.lang.String getDomain() -> getDomain
    82:82:java.lang.String getUsername() -> getUsername
    87:90:int hashCode() -> hashCode
    95:105:boolean equals(java.lang.Object) -> equals
    110:110:java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    57:67:void <init>(java.lang.String) -> <init>
    77:81:void <init>(java.lang.String,java.lang.String) -> <init>
    84:84:java.security.Principal getUserPrincipal() -> getUserPrincipal
    88:88:java.lang.String getUserName() -> getUserName
    92:92:java.lang.String getPassword() -> getPassword
    97:97:int hashCode() -> hashCode
    102:111:boolean equals(java.lang.Object) -> equals
    116:116:java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    48:49:void <init>(org.apache.http.params.HttpParams) -> <init>
    52:53:void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    50:51:void <init>() -> <init>
    61:67:java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    78:80:void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthCache -> org.apache.http.client.AuthCache:
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.AuthenticationStrategy -> org.apache.http.client.AuthenticationStrategy:
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.client.BackoffManager -> org.apache.http.client.BackoffManager:
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
    46:47:void <init>() -> <init>
    55:56:void <init>(java.lang.String) -> <init>
    66:67:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
    44:45:void <init>() -> <init>
    48:49:void <init>(java.lang.String) -> <init>
    51:53:void <init>(java.lang.Throwable) -> <init>
    56:58:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.client.ConnectionBackoffStrategy -> org.apache.http.client.ConnectionBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    44:46:void <init>(int,java.lang.String) -> <init>
    49:49:int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
    48:49:void <init>() -> <init>
    57:58:void <init>(java.lang.String) -> <init>
    67:68:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    67:68:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RedirectStrategy -> org.apache.http.client.RedirectStrategy:
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.ServiceUnavailableRetryStrategy -> org.apache.http.client.ServiceUnavailableRetryStrategy:
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.config.AuthSchemes -> org.apache.http.client.config.AuthSchemes:
    java.lang.String BASIC -> BASIC
    java.lang.String DIGEST -> DIGEST
    java.lang.String NTLM -> NTLM
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
    68:69:void <init>() -> <init>
org.apache.http.client.config.CookieSpecs -> org.apache.http.client.config.CookieSpecs:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String STANDARD -> STANDARD
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
    66:67:void <init>() -> <init>
org.apache.http.client.config.RequestConfig -> org.apache.http.client.config.RequestConfig:
    org.apache.http.client.config.RequestConfig DEFAULT -> DEFAULT
    boolean expectContinueEnabled -> expectContinueEnabled
    org.apache.http.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    71:87:void <init>(boolean,org.apache.http.HttpHost,java.net.InetAddress,boolean,java.lang.String,boolean,boolean,boolean,int,boolean,java.util.Collection,java.util.Collection,int,int,int) -> <init>
    109:109:boolean isExpectContinueEnabled() -> isExpectContinueEnabled
    118:118:org.apache.http.HttpHost getProxy() -> getProxy
    131:131:java.net.InetAddress getLocalAddress() -> getLocalAddress
    143:143:boolean isStaleConnectionCheckEnabled() -> isStaleConnectionCheckEnabled
    153:153:java.lang.String getCookieSpec() -> getCookieSpec
    162:162:boolean isRedirectsEnabled() -> isRedirectsEnabled
    172:172:boolean isRelativeRedirectsAllowed() -> isRelativeRedirectsAllowed
    183:183:boolean isCircularRedirectsAllowed() -> isCircularRedirectsAllowed
    193:193:int getMaxRedirects() -> getMaxRedirects
    202:202:boolean isAuthenticationEnabled() -> isAuthenticationEnabled
    212:212:java.util.Collection getTargetPreferredAuthSchemes() -> getTargetPreferredAuthSchemes
    222:222:java.util.Collection getProxyPreferredAuthSchemes() -> getProxyPreferredAuthSchemes
    236:236:int getConnectionRequestTimeout() -> getConnectionRequestTimeout
    249:249:int getConnectTimeout() -> getConnectTimeout
    263:263:int getSocketTimeout() -> getSocketTimeout
    268:268:org.apache.http.client.config.RequestConfig clone() -> clone
    273:290:java.lang.String toString() -> toString
    294:294:org.apache.http.client.config.RequestConfig$Builder custom() -> custom
    298:298:org.apache.http.client.config.RequestConfig$Builder copy(org.apache.http.client.config.RequestConfig) -> copy
    35:35:java.lang.Object clone() -> clone
    37:37:void <clinit>() -> <clinit>
org.apache.http.client.config.RequestConfig$Builder -> org.apache.http.client.config.RequestConfig$Builder:
    boolean expectContinueEnabled -> expectContinueEnabled
    org.apache.http.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    335:344:void <init>() -> <init>
    347:348:org.apache.http.client.config.RequestConfig$Builder setExpectContinueEnabled(boolean) -> setExpectContinueEnabled
    352:353:org.apache.http.client.config.RequestConfig$Builder setProxy(org.apache.http.HttpHost) -> setProxy
    357:358:org.apache.http.client.config.RequestConfig$Builder setLocalAddress(java.net.InetAddress) -> setLocalAddress
    362:363:org.apache.http.client.config.RequestConfig$Builder setStaleConnectionCheckEnabled(boolean) -> setStaleConnectionCheckEnabled
    367:368:org.apache.http.client.config.RequestConfig$Builder setCookieSpec(java.lang.String) -> setCookieSpec
    372:373:org.apache.http.client.config.RequestConfig$Builder setRedirectsEnabled(boolean) -> setRedirectsEnabled
    377:378:org.apache.http.client.config.RequestConfig$Builder setRelativeRedirectsAllowed(boolean) -> setRelativeRedirectsAllowed
    382:383:org.apache.http.client.config.RequestConfig$Builder setCircularRedirectsAllowed(boolean) -> setCircularRedirectsAllowed
    387:388:org.apache.http.client.config.RequestConfig$Builder setMaxRedirects(int) -> setMaxRedirects
    392:393:org.apache.http.client.config.RequestConfig$Builder setAuthenticationEnabled(boolean) -> setAuthenticationEnabled
    397:398:org.apache.http.client.config.RequestConfig$Builder setTargetPreferredAuthSchemes(java.util.Collection) -> setTargetPreferredAuthSchemes
    402:403:org.apache.http.client.config.RequestConfig$Builder setProxyPreferredAuthSchemes(java.util.Collection) -> setProxyPreferredAuthSchemes
    407:408:org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int) -> setConnectionRequestTimeout
    412:413:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int) -> setConnectTimeout
    417:418:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int) -> setSocketTimeout
    422:422:org.apache.http.client.config.RequestConfig build() -> build
org.apache.http.client.entity.DecompressingEntity -> org.apache.http.client.entity.DecompressingEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    62:63:void <init>(org.apache.http.HttpEntity) -> <init>
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    68:73:java.io.InputStream getDecompressingStream() -> getDecompressingStream
    82:88:java.io.InputStream getContent() -> getContent
    97:108:void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.DeflateDecompressingEntity -> org.apache.http.client.entity.DeflateDecompressingEntity:
    61:62:void <init>(org.apache.http.HttpEntity) -> <init>
    73:73:java.io.InputStream decorate(java.io.InputStream) -> decorate
    83:83:org.apache.http.Header getContentEncoding() -> getContentEncoding
    93:93:long getContentLength() -> getContentLength
    51:51:void writeTo(java.io.OutputStream) -> writeTo
    51:51:java.io.InputStream getContent() -> getContent
org.apache.http.client.entity.DeflateInputStream -> org.apache.http.client.entity.DeflateInputStream:
    java.io.InputStream sourceStream -> sourceStream
    45:127:void <init>(java.io.InputStream) -> <init>
    135:135:int read() -> read
    144:144:int read(byte[]) -> read
    153:153:int read(byte[],int,int) -> read
    162:162:long skip(long) -> skip
    171:171:int available() -> available
    179:180:void mark(int) -> mark
    188:189:void reset() -> reset
    196:196:boolean markSupported() -> markSupported
    205:206:void close() -> close
org.apache.http.client.entity.DeflateInputStream$DeflateStream -> org.apache.http.client.entity.DeflateInputStream$DeflateStream:
    boolean closed -> closed
    210:214:void <init>(java.io.InputStream,java.util.zip.Inflater) -> <init>
    218:224:void close() -> close
org.apache.http.client.entity.EntityBuilder -> org.apache.http.client.entity.EntityBuilder:
    java.lang.String text -> text
    byte[] binary -> binary
    java.io.InputStream stream -> stream
    java.util.List parameters -> parameters
    java.io.Serializable serializable -> serializable
    java.io.File file -> file
    org.apache.http.entity.ContentType contentType -> contentType
    java.lang.String contentEncoding -> contentEncoding
    boolean chunked -> chunked
    boolean gzipCompress -> gzipCompress
    80:81:void <init>() -> <init>
    84:84:org.apache.http.client.entity.EntityBuilder create() -> create
    88:94:void clearContent() -> clearContent
    100:100:java.lang.String getText() -> getText
    113:115:org.apache.http.client.entity.EntityBuilder setText(java.lang.String) -> setText
    123:123:byte[] getBinary() -> getBinary
    136:138:org.apache.http.client.entity.EntityBuilder setBinary(byte[]) -> setBinary
    146:146:java.io.InputStream getStream() -> getStream
    159:161:org.apache.http.client.entity.EntityBuilder setStream(java.io.InputStream) -> setStream
    170:170:java.util.List getParameters() -> getParameters
    182:184:org.apache.http.client.entity.EntityBuilder setParameters(java.util.List) -> setParameters
    196:196:org.apache.http.client.entity.EntityBuilder setParameters(org.apache.http.NameValuePair[]) -> setParameters
    204:204:java.io.Serializable getSerializable() -> getSerializable
    217:219:org.apache.http.client.entity.EntityBuilder setSerializable(java.io.Serializable) -> setSerializable
    227:227:java.io.File getFile() -> getFile
    240:242:org.apache.http.client.entity.EntityBuilder setFile(java.io.File) -> setFile
    249:249:org.apache.http.entity.ContentType getContentType() -> getContentType
    256:257:org.apache.http.client.entity.EntityBuilder setContentType(org.apache.http.entity.ContentType) -> setContentType
    264:264:java.lang.String getContentEncoding() -> getContentEncoding
    271:272:org.apache.http.client.entity.EntityBuilder setContentEncoding(java.lang.String) -> setContentEncoding
    279:279:boolean isChunked() -> isChunked
    286:287:org.apache.http.client.entity.EntityBuilder chunked() -> chunked
    294:294:boolean isGzipCompress() -> isGzipCompress
    301:302:org.apache.http.client.entity.EntityBuilder gzipCompress() -> gzipCompress
    306:306:org.apache.http.entity.ContentType getContentOrDefault(org.apache.http.entity.ContentType) -> getContentOrDefault
    314:339:org.apache.http.HttpEntity build() -> build
org.apache.http.client.entity.GzipCompressingEntity -> org.apache.http.client.entity.GzipCompressingEntity:
    java.lang.String GZIP_CODEC -> GZIP_CODEC
    79:80:void <init>(org.apache.http.HttpEntity) -> <init>
    84:84:org.apache.http.Header getContentEncoding() -> getContentEncoding
    89:89:long getContentLength() -> getContentLength
    95:95:boolean isChunked() -> isChunked
    100:100:java.io.InputStream getContent() -> getContent
    105:112:void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.GzipDecompressingEntity -> org.apache.http.client.entity.GzipDecompressingEntity:
    52:53:void <init>(org.apache.http.HttpEntity) -> <init>
    57:57:java.io.InputStream decorate(java.io.InputStream) -> decorate
    67:67:org.apache.http.Header getContentEncoding() -> getContentEncoding
    77:77:long getContentLength() -> getContentLength
    42:42:void writeTo(java.io.OutputStream) -> writeTo
    42:42:java.io.InputStream getContent() -> getContent
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
    60:63:void <init>(java.util.List,java.lang.String) -> <init>
    77:80:void <init>(java.lang.Iterable,java.nio.charset.Charset) -> <init>
    91:92:void <init>(java.util.List) -> <init>
    104:105:void <init>(java.lang.Iterable) -> <init>
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.AbstractExecutionAwareRequest -> org.apache.http.client.methods.AbstractExecutionAwareRequest:
    java.util.concurrent.locks.Lock abortLock -> abortLock
    boolean aborted -> aborted
    org.apache.http.concurrent.Cancellable cancellable -> cancellable
    49:51:void <init>() -> <init>
    55:71:void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    75:95:void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    98:102:void cancelExecution() -> cancelExecution
    105:115:void abort() -> abort
    118:118:boolean isAborted() -> isAborted
    125:134:void setCancellable(org.apache.http.concurrent.Cancellable) -> setCancellable
    138:144:java.lang.Object clone() -> clone
    151:157:void completed() -> completed
    165:172:void reset() -> reset
org.apache.http.client.methods.AbstractExecutionAwareRequest$1 -> org.apache.http.client.methods.AbstractExecutionAwareRequest$1:
    org.apache.http.conn.ClientConnectionRequest val$connRequest -> val$connRequest
    org.apache.http.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    60:60:void <init>(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ClientConnectionRequest) -> <init>
    63:64:boolean cancel() -> cancel
org.apache.http.client.methods.AbstractExecutionAwareRequest$2 -> org.apache.http.client.methods.AbstractExecutionAwareRequest$2:
    org.apache.http.conn.ConnectionReleaseTrigger val$releaseTrigger -> val$releaseTrigger
    org.apache.http.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    80:80:void <init>(org.apache.http.client.methods.AbstractExecutionAwareRequest,org.apache.http.conn.ConnectionReleaseTrigger) -> <init>
    84:87:boolean cancel() -> cancel
org.apache.http.client.methods.CloseableHttpResponse -> org.apache.http.client.methods.CloseableHttpResponse:
org.apache.http.client.methods.Configurable -> org.apache.http.client.methods.Configurable:
    org.apache.http.client.config.RequestConfig getConfig() -> getConfig
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    56:57:void <init>() -> <init>
    60:62:void <init>(java.net.URI) -> <init>
    68:70:void <init>(java.lang.String) -> <init>
    74:74:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity entity -> entity
    50:51:void <init>() -> <init>
    54:54:org.apache.http.HttpEntity getEntity() -> getEntity
    58:59:void setEntity(org.apache.http.HttpEntity) -> setEntity
    62:63:boolean expectContinue() -> expectContinue
    68:73:java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpExecutionAware -> org.apache.http.client.methods.HttpExecutionAware:
    boolean isAborted() -> isAborted
    void setCancellable(org.apache.http.concurrent.Cancellable) -> setCancellable
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    56:57:void <init>() -> <init>
    60:62:void <init>(java.net.URI) -> <init>
    68:70:void <init>(java.lang.String) -> <init>
    74:74:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    59:60:void <init>() -> <init>
    63:65:void <init>(java.net.URI) -> <init>
    71:73:void <init>(java.lang.String) -> <init>
    77:77:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    64:65:void <init>() -> <init>
    68:70:void <init>(java.net.URI) -> <init>
    76:78:void <init>(java.lang.String) -> <init>
    82:82:java.lang.String getMethod() -> getMethod
    86:97:java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPatch -> org.apache.http.client.methods.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    57:58:void <init>() -> <init>
    61:63:void <init>(java.net.URI) -> <init>
    66:68:void <init>(java.lang.String) -> <init>
    72:72:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    63:64:void <init>() -> <init>
    67:69:void <init>(java.net.URI) -> <init>
    75:77:void <init>(java.lang.String) -> <init>
    81:81:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    55:56:void <init>() -> <init>
    59:61:void <init>(java.net.URI) -> <init>
    67:69:void <init>(java.lang.String) -> <init>
    73:73:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    org.apache.http.client.config.RequestConfig config -> config
    46:46:void <init>() -> <init>
    java.lang.String getMethod() -> getMethod
    59:60:void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    63:63:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    73:73:java.net.URI getURI() -> getURI
    77:87:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    92:92:org.apache.http.client.config.RequestConfig getConfig() -> getConfig
    96:97:void setConfig(org.apache.http.client.config.RequestConfig) -> setConfig
    100:101:void setURI(java.net.URI) -> setURI
    107:107:void started() -> started
    116:117:void releaseConnection() -> releaseConnection
    121:121:java.lang.String toString() -> toString
org.apache.http.client.methods.HttpRequestWrapper -> org.apache.http.client.methods.HttpRequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    60:70:void <init>(org.apache.http.HttpRequest) -> <init>
    73:73:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    77:78:void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    81:81:java.net.URI getURI() -> getURI
    85:86:void setURI(java.net.URI) -> setURI
    89:89:java.lang.String getMethod() -> getMethod
    93:93:void abort() -> abort
    97:97:boolean isAborted() -> isAborted
    101:110:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    114:114:org.apache.http.HttpRequest getOriginal() -> getOriginal
    119:119:java.lang.String toString() -> toString
    148:154:org.apache.http.client.methods.HttpRequestWrapper wrap(org.apache.http.HttpRequest) -> wrap
    165:168:org.apache.http.params.HttpParams getParams() -> getParams
    52:52:void <init>(org.apache.http.HttpRequest,org.apache.http.client.methods.HttpRequestWrapper$1) -> <init>
org.apache.http.client.methods.HttpRequestWrapper$1 -> org.apache.http.client.methods.HttpRequestWrapper$1:
org.apache.http.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper -> org.apache.http.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    128:130:void <init>(org.apache.http.HttpEntityEnclosingRequest) -> <init>
    133:133:org.apache.http.HttpEntity getEntity() -> getEntity
    137:138:void setEntity(org.apache.http.HttpEntity) -> setEntity
    141:142:boolean expectContinue() -> expectContinue
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    58:59:void <init>() -> <init>
    62:64:void <init>(java.net.URI) -> <init>
    70:72:void <init>(java.lang.String) -> <init>
    76:76:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.methods.RequestBuilder -> org.apache.http.client.methods.RequestBuilder:
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.HttpEntity entity -> entity
    java.util.LinkedList parameters -> parameters
    org.apache.http.client.config.RequestConfig config -> config
    76:78:void <init>(java.lang.String) -> <init>
    81:82:void <init>() -> <init>
    85:86:org.apache.http.client.methods.RequestBuilder create(java.lang.String) -> create
    90:90:org.apache.http.client.methods.RequestBuilder get() -> get
    94:94:org.apache.http.client.methods.RequestBuilder head() -> head
    98:98:org.apache.http.client.methods.RequestBuilder post() -> post
    102:102:org.apache.http.client.methods.RequestBuilder put() -> put
    106:106:org.apache.http.client.methods.RequestBuilder delete() -> delete
    110:110:org.apache.http.client.methods.RequestBuilder trace() -> trace
    114:114:org.apache.http.client.methods.RequestBuilder options() -> options
    118:119:org.apache.http.client.methods.RequestBuilder copy(org.apache.http.HttpRequest) -> copy
    123:149:org.apache.http.client.methods.RequestBuilder doCopy(org.apache.http.HttpRequest) -> doCopy
    153:153:java.lang.String getMethod() -> getMethod
    157:157:org.apache.http.ProtocolVersion getVersion() -> getVersion
    161:162:org.apache.http.client.methods.RequestBuilder setVersion(org.apache.http.ProtocolVersion) -> setVersion
    166:166:java.net.URI getUri() -> getUri
    170:171:org.apache.http.client.methods.RequestBuilder setUri(java.net.URI) -> setUri
    175:176:org.apache.http.client.methods.RequestBuilder setUri(java.lang.String) -> setUri
    180:180:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    184:184:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    188:188:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    192:196:org.apache.http.client.methods.RequestBuilder addHeader(org.apache.http.Header) -> addHeader
    200:204:org.apache.http.client.methods.RequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    208:212:org.apache.http.client.methods.RequestBuilder removeHeader(org.apache.http.Header) -> removeHeader
    216:225:org.apache.http.client.methods.RequestBuilder removeHeaders(java.lang.String) -> removeHeaders
    229:233:org.apache.http.client.methods.RequestBuilder setHeader(org.apache.http.Header) -> setHeader
    237:241:org.apache.http.client.methods.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    245:245:org.apache.http.HttpEntity getEntity() -> getEntity
    249:250:org.apache.http.client.methods.RequestBuilder setEntity(org.apache.http.HttpEntity) -> setEntity
    254:254:java.util.List getParameters() -> getParameters
    259:264:org.apache.http.client.methods.RequestBuilder addParameter(org.apache.http.NameValuePair) -> addParameter
    268:268:org.apache.http.client.methods.RequestBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    272:275:org.apache.http.client.methods.RequestBuilder addParameters(org.apache.http.NameValuePair[]) -> addParameters
    279:279:org.apache.http.client.config.RequestConfig getConfig() -> getConfig
    283:284:org.apache.http.client.methods.RequestBuilder setConfig(org.apache.http.client.config.RequestConfig) -> setConfig
    289:316:org.apache.http.client.methods.HttpUriRequest build() -> build
org.apache.http.client.methods.RequestBuilder$InternalEntityEclosingRequest -> org.apache.http.client.methods.RequestBuilder$InternalEntityEclosingRequest:
    java.lang.String method -> method
    340:342:void <init>(java.lang.String) -> <init>
    346:346:java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.RequestBuilder$InternalRequest -> org.apache.http.client.methods.RequestBuilder$InternalRequest:
    java.lang.String method -> method
    324:326:void <init>(java.lang.String) -> <init>
    330:330:java.lang.String getMethod() -> getMethod
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
    44:45:void <init>() -> <init>
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String CONN_MANAGER_TIMEOUT -> CONN_MANAGER_TIMEOUT
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    52:53:void <init>(org.apache.http.params.HttpParams) -> <init>
    60:61:void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    64:65:void setHandleRedirects(boolean) -> setHandleRedirects
    68:69:void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    72:73:void setMaxRedirects(int) -> setMaxRedirects
    76:77:void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    80:81:void setHandleAuthentication(boolean) -> setHandleAuthentication
    84:85:void setCookiePolicy(java.lang.String) -> setCookiePolicy
    88:89:void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    92:93:void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    96:97:void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
    103:104:void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
    77:78:void <init>() -> <init>
org.apache.http.client.params.HttpClientParamConfig -> org.apache.http.client.params.HttpClientParamConfig:
    49:50:void <init>() -> <init>
    54:54:org.apache.http.client.config.RequestConfig getRequestConfig(org.apache.http.params.HttpParams) -> getRequestConfig
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    46:47:void <init>() -> <init>
    50:51:boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    56:59:void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    62:63:boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    68:71:void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    74:80:java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    84:86:void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
    94:96:void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long) -> setConnectionManagerTimeout
    108:113:long getConnectionManagerTimeout(org.apache.http.params.HttpParams) -> getConnectionManagerTimeout
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String ROUTE -> ROUTE
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    org.apache.http.protocol.HttpContext context -> context
    51:54:void <init>(org.apache.http.protocol.HttpContext) -> <init>
    57:58:void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    61:62:void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    65:66:void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    69:70:void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
org.apache.http.client.protocol.HttpClientContext -> org.apache.http.client.protocol.HttpClientContext:
    java.lang.String HTTP_ROUTE -> HTTP_ROUTE
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
    139:142:org.apache.http.client.protocol.HttpClientContext adapt(org.apache.http.protocol.HttpContext) -> adapt
    147:147:org.apache.http.client.protocol.HttpClientContext create() -> create
    151:152:void <init>(org.apache.http.protocol.HttpContext) -> <init>
    155:156:void <init>() -> <init>
    159:159:org.apache.http.conn.routing.RouteInfo getHttpRoute() -> getHttpRoute
    164:164:java.util.List getRedirectLocations() -> getRedirectLocations
    168:168:org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    172:173:void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    176:176:org.apache.http.cookie.CookieSpec getCookieSpec() -> getCookieSpec
    180:180:org.apache.http.cookie.CookieOrigin getCookieOrigin() -> getCookieOrigin
    185:185:org.apache.http.config.Lookup getLookup(java.lang.String,java.lang.Class) -> getLookup
    189:189:org.apache.http.config.Lookup getCookieSpecRegistry() -> getCookieSpecRegistry
    193:194:void setCookieSpecRegistry(org.apache.http.config.Lookup) -> setCookieSpecRegistry
    197:197:org.apache.http.config.Lookup getAuthSchemeRegistry() -> getAuthSchemeRegistry
    201:202:void setAuthSchemeRegistry(org.apache.http.config.Lookup) -> setAuthSchemeRegistry
    205:205:org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    209:210:void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    213:213:org.apache.http.client.AuthCache getAuthCache() -> getAuthCache
    217:218:void setAuthCache(org.apache.http.client.AuthCache) -> setAuthCache
    221:221:org.apache.http.auth.AuthState getTargetAuthState() -> getTargetAuthState
    225:225:org.apache.http.auth.AuthState getProxyAuthState() -> getProxyAuthState
    229:229:java.lang.Object getUserToken(java.lang.Class) -> getUserToken
    233:233:java.lang.Object getUserToken() -> getUserToken
    237:238:void setUserToken(java.lang.Object) -> setUserToken
    241:242:org.apache.http.client.config.RequestConfig getRequestConfig() -> getRequestConfig
    246:247:void setRequestConfig(org.apache.http.client.config.RequestConfig) -> setRequestConfig
org.apache.http.client.protocol.RequestAcceptEncoding -> org.apache.http.client.protocol.RequestAcceptEncoding:
    47:47:void <init>() -> <init>
    57:60:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    org.apache.commons.logging.Log log -> log
    70:74:void <init>() -> <init>
    78:202:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAuthCache -> org.apache.http.client.protocol.RequestAuthCache:
    org.apache.commons.logging.Log log -> log
    60:64:void <init>() -> <init>
    68:110:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    117:135:void doPreemptiveAuth(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.auth.AuthState,org.apache.http.client.CredentialsProvider) -> doPreemptiveAuth
org.apache.http.client.protocol.RequestAuthenticationBase -> org.apache.http.client.protocol.RequestAuthenticationBase:
    org.apache.commons.logging.Log log -> log
    49:53:void <init>() -> <init>
    59:107:void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    110:111:void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    118:122:org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.client.protocol.RequestAuthenticationBase$1 -> org.apache.http.client.protocol.RequestAuthenticationBase$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
    61:61:void <clinit>() -> <clinit>
org.apache.http.client.protocol.RequestClientConnControl -> org.apache.http.client.protocol.RequestClientConnControl:
    org.apache.commons.logging.Log log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    53:59:void <init>() -> <init>
    63:90:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    java.util.Collection defaultHeaders -> defaultHeaders
    57:59:void <init>(java.util.Collection) -> <init>
    62:63:void <init>() -> <init>
    67:87:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestExpectContinue -> org.apache.http.client.protocol.RequestExpectContinue:
    58:59:void <init>() -> <init>
    63:80:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    56:57:void <init>() -> <init>
    61:90:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    53:54:void <init>() -> <init>
    58:81:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseAuthCache -> org.apache.http.client.protocol.ResponseAuthCache:
    org.apache.commons.logging.Log log -> log
    64:68:void <init>() -> <init>
    72:124:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    127:132:boolean isCachable(org.apache.http.auth.AuthState) -> isCachable
    137:142:void cache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> cache
    145:150:void uncache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> uncache
org.apache.http.client.protocol.ResponseAuthCache$1 -> org.apache.http.client.protocol.ResponseAuthCache$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
    94:94:void <clinit>() -> <clinit>
org.apache.http.client.protocol.ResponseContentEncoding -> org.apache.http.client.protocol.ResponseContentEncoding:
    java.lang.String UNCOMPRESSED -> UNCOMPRESSED
    53:53:void <init>() -> <init>
    74:108:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    org.apache.commons.logging.Log log -> log
    59:63:void <init>() -> <init>
    67:100:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    107:134:void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore) -> processCookies
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    46:72:java.lang.Object cloneObject(java.lang.Object) -> cloneObject
    77:77:java.lang.Object clone(java.lang.Object) -> clone
    83:84:void <init>() -> <init>
org.apache.http.client.utils.DateUtils -> org.apache.http.client.utils.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    96:96:java.util.Date parseDate(java.lang.String) -> parseDate
    108:108:java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    127:146:java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    158:158:java.lang.String formatDate(java.util.Date) -> formatDate
    175:178:java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
    187:188:void clearThreadLocal() -> clearThreadLocal
    191:192:void <init>() -> <init>
    69:85:void <clinit>() -> <clinit>
org.apache.http.client.utils.DateUtils$DateFormatHolder -> org.apache.http.client.utils.DateUtils$DateFormatHolder:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> THREADLOCAL_FORMATS
    200:200:void <init>() -> <init>
    226:241:java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
    245:246:void clearThreadLocal() -> clearThreadLocal
    203:203:void <clinit>() -> <clinit>
org.apache.http.client.utils.DateUtils$DateFormatHolder$1 -> org.apache.http.client.utils.DateUtils$DateFormatHolder$1:
    203:203:void <init>() -> <init>
    207:207:java.lang.ref.SoftReference initialValue() -> initialValue
    203:203:java.lang.Object initialValue() -> initialValue
org.apache.http.client.utils.HttpClientUtils -> org.apache.http.client.utils.HttpClientUtils:
    45:46:void <init>() -> <init>
    71:80:void closeQuietly(org.apache.http.HttpResponse) -> closeQuietly
    105:115:void closeQuietly(org.apache.http.client.methods.CloseableHttpResponse) -> closeQuietly
    139:147:void closeQuietly(org.apache.http.client.HttpClient) -> closeQuietly
org.apache.http.client.utils.Idn -> org.apache.http.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.JdkIdn -> org.apache.http.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    47:58:void <init>() -> <init>
    62:67:java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Punycode -> org.apache.http.client.utils.Punycode:
    org.apache.http.client.utils.Idn impl -> impl
    38:38:void <init>() -> <init>
    51:51:java.lang.String toUnicode(java.lang.String) -> toUnicode
    43:48:void <clinit>() -> <clinit>
org.apache.http.client.utils.Rfc3492Idn -> org.apache.http.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    39:39:void <init>() -> <init>
    51:63:int adapt(int,int,boolean) -> adapt
    67:76:int digit(char) -> digit
    80:92:java.lang.String toUnicode(java.lang.String) -> toUnicode
    96:138:java.lang.String decode(java.lang.String) -> decode
org.apache.http.client.utils.URIBuilder -> org.apache.http.client.utils.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String query -> query
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    69:71:void <init>() -> <init>
    80:82:void <init>(java.lang.String) -> <init>
    89:91:void <init>(java.net.URI) -> <init>
    94:97:java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    104:104:java.net.URI build() -> build
    108:151:java.lang.String buildString() -> buildString
    155:168:void digestURI(java.net.URI) -> digestURI
    171:171:java.lang.String encodeUserInfo(java.lang.String) -> encodeUserInfo
    175:175:java.lang.String encodePath(java.lang.String) -> encodePath
    179:179:java.lang.String encodeUrlForm(java.util.List) -> encodeUrlForm
    183:183:java.lang.String encodeUric(java.lang.String) -> encodeUric
    190:191:org.apache.http.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    199:203:org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    211:211:org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    218:221:org.apache.http.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    228:231:org.apache.http.client.utils.URIBuilder setPort(int) -> setPort
    238:241:org.apache.http.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    248:252:org.apache.http.client.utils.URIBuilder removeQuery() -> removeQuery
    266:270:org.apache.http.client.utils.URIBuilder setQuery(java.lang.String) -> setQuery
    283:292:org.apache.http.client.utils.URIBuilder setParameters(java.util.List) -> setParameters
    305:312:org.apache.http.client.utils.URIBuilder addParameters(java.util.List) -> addParameters
    325:336:org.apache.http.client.utils.URIBuilder setParameters(org.apache.http.NameValuePair[]) -> setParameters
    347:354:org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    365:380:org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    389:392:org.apache.http.client.utils.URIBuilder clearParameters() -> clearParameters
    405:409:org.apache.http.client.utils.URIBuilder setCustomQuery(java.lang.String) -> setCustomQuery
    417:419:org.apache.http.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    426:426:boolean isAbsolute() -> isAbsolute
    433:433:boolean isOpaque() -> isOpaque
    437:437:java.lang.String getScheme() -> getScheme
    441:441:java.lang.String getUserInfo() -> getUserInfo
    445:445:java.lang.String getHost() -> getHost
    449:449:int getPort() -> getPort
    453:453:java.lang.String getPath() -> getPath
    457:460:java.util.List getQueryParams() -> getQueryParams
    465:465:java.lang.String getFragment() -> getFragment
    470:470:java.lang.String toString() -> toString
    474:487:java.lang.String normalizePath(java.lang.String) -> normalizePath
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    85:111:java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    134:154:java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    165:165:java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    180:195:java.net.URI rewriteURI(java.net.URI) -> rewriteURI
    207:207:java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    219:236:java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    248:251:java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    262:309:java.net.URI normalizeSyntax(java.net.URI) -> normalizeSyntax
    323:372:org.apache.http.HttpHost extractHost(java.net.URI) -> extractHost
    395:418:java.net.URI resolve(java.net.URI,org.apache.http.HttpHost,java.util.List) -> resolve
    424:425:void <init>() -> <init>
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    char QP_SEP_A -> QP_SEP_A
    char QP_SEP_S -> QP_SEP_S
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] QP_SEPS -> QP_SEPS
    java.lang.String QP_SEP_PATTERN -> QP_SEP_PATTERN
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet URIC -> URIC
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    61:61:void <init>() -> <init>
    88:95:java.util.List parse(java.net.URI,java.lang.String) -> parse
    112:123:java.util.List parse(org.apache.http.HttpEntity) -> parse
    131:141:boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    162:163:void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    186:200:void parse(java.util.List,java.util.Scanner,java.lang.String,java.lang.String) -> parse
    225:225:java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    243:259:java.util.List parse(java.lang.String,java.nio.charset.Charset,char[]) -> parse
    273:273:java.lang.String format(java.util.List,java.lang.String) -> format
    291:304:java.lang.String format(java.util.List,char,java.lang.String) -> format
    320:320:java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    338:351:java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset) -> format
    465:484:java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlEncode
    499:525:java.lang.String urlDecode(java.lang.String,java.nio.charset.Charset,boolean) -> urlDecode
    536:539:java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    550:553:java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    568:571:java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    586:589:java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    602:602:java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    615:615:java.lang.String encUric(java.lang.String,java.nio.charset.Charset) -> encUric
    628:628:java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
    205:456:void <clinit>() -> <clinit>
org.apache.http.concurrent.BasicFuture -> org.apache.http.concurrent.BasicFuture:
    org.apache.http.concurrent.FutureCallback callback -> callback
    boolean completed -> completed
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception ex -> ex
    54:56:void <init>(org.apache.http.concurrent.FutureCallback) -> <init>
    59:59:boolean isCancelled() -> isCancelled
    63:63:boolean isDone() -> isDone
    67:70:java.lang.Object getResult() -> getResult
    74:77:java.lang.Object get() -> get
    82:98:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    106:117:boolean completed(java.lang.Object) -> completed
    121:132:boolean failed(java.lang.Exception) -> failed
    136:147:boolean cancel(boolean) -> cancel
    151:151:boolean cancel() -> cancel
org.apache.http.concurrent.Cancellable -> org.apache.http.concurrent.Cancellable:
    boolean cancel() -> cancel
org.apache.http.concurrent.FutureCallback -> org.apache.http.concurrent.FutureCallback:
    void completed(java.lang.Object) -> completed
    void failed(java.lang.Exception) -> failed
    void cancelled() -> cancelled
org.apache.http.config.ConnectionConfig -> org.apache.http.config.ConnectionConfig:
    org.apache.http.config.ConnectionConfig DEFAULT -> DEFAULT
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    61:68:void <init>(int,int,java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction,org.apache.http.config.MessageConstraints) -> <init>
    71:71:int getBufferSize() -> getBufferSize
    75:75:int getFragmentSizeHint() -> getFragmentSizeHint
    79:79:java.nio.charset.Charset getCharset() -> getCharset
    83:83:java.nio.charset.CodingErrorAction getMalformedInputAction() -> getMalformedInputAction
    87:87:java.nio.charset.CodingErrorAction getUnmappableInputAction() -> getUnmappableInputAction
    91:91:org.apache.http.config.MessageConstraints getMessageConstraints() -> getMessageConstraints
    96:96:org.apache.http.config.ConnectionConfig clone() -> clone
    101:109:java.lang.String toString() -> toString
    113:113:org.apache.http.config.ConnectionConfig$Builder custom() -> custom
    117:118:org.apache.http.config.ConnectionConfig$Builder copy(org.apache.http.config.ConnectionConfig) -> copy
    42:42:java.lang.Object clone() -> clone
    45:45:void <clinit>() -> <clinit>
org.apache.http.config.ConnectionConfig$Builder -> org.apache.http.config.ConnectionConfig$Builder:
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    134:136:void <init>() -> <init>
    139:140:org.apache.http.config.ConnectionConfig$Builder setBufferSize(int) -> setBufferSize
    144:145:org.apache.http.config.ConnectionConfig$Builder setFragmentSizeHint(int) -> setFragmentSizeHint
    149:150:org.apache.http.config.ConnectionConfig$Builder setCharset(java.nio.charset.Charset) -> setCharset
    154:158:org.apache.http.config.ConnectionConfig$Builder setMalformedInputAction(java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    162:166:org.apache.http.config.ConnectionConfig$Builder setUnmappableInputAction(java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
    170:171:org.apache.http.config.ConnectionConfig$Builder setMessageConstraints(org.apache.http.config.MessageConstraints) -> setMessageConstraints
    175:181:org.apache.http.config.ConnectionConfig build() -> build
org.apache.http.config.Lookup -> org.apache.http.config.Lookup:
    java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.config.MessageConstraints -> org.apache.http.config.MessageConstraints:
    org.apache.http.config.MessageConstraints DEFAULT -> DEFAULT
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    45:48:void <init>(int,int) -> <init>
    51:51:int getMaxLineLength() -> getMaxLineLength
    55:55:int getMaxHeaderCount() -> getMaxHeaderCount
    60:60:org.apache.http.config.MessageConstraints clone() -> clone
    65:69:java.lang.String toString() -> toString
    73:73:org.apache.http.config.MessageConstraints lineLen(int) -> lineLen
    77:77:org.apache.http.config.MessageConstraints$Builder custom() -> custom
    81:82:org.apache.http.config.MessageConstraints$Builder copy(org.apache.http.config.MessageConstraints) -> copy
    37:37:java.lang.Object clone() -> clone
    39:39:void <clinit>() -> <clinit>
org.apache.http.config.MessageConstraints$Builder -> org.apache.http.config.MessageConstraints$Builder:
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    92:95:void <init>() -> <init>
    98:99:org.apache.http.config.MessageConstraints$Builder setMaxLineLength(int) -> setMaxLineLength
    103:104:org.apache.http.config.MessageConstraints$Builder setMaxHeaderCount(int) -> setMaxHeaderCount
    108:108:org.apache.http.config.MessageConstraints build() -> build
org.apache.http.config.Registry -> org.apache.http.config.Registry:
    java.util.Map map -> map
    47:49:void <init>(java.util.Map) -> <init>
    52:55:java.lang.Object lookup(java.lang.String) -> lookup
    60:60:java.lang.String toString() -> toString
org.apache.http.config.RegistryBuilder -> org.apache.http.config.RegistryBuilder:
    java.util.Map items -> items
    48:48:org.apache.http.config.RegistryBuilder create() -> create
    52:54:void <init>() -> <init>
    57:60:org.apache.http.config.RegistryBuilder register(java.lang.String,java.lang.Object) -> register
    64:64:org.apache.http.config.Registry build() -> build
    69:69:java.lang.String toString() -> toString
org.apache.http.config.SocketConfig -> org.apache.http.config.SocketConfig:
    org.apache.http.config.SocketConfig DEFAULT -> DEFAULT
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    55:61:void <init>(int,boolean,int,boolean,boolean) -> <init>
    71:71:int getSoTimeout() -> getSoTimeout
    83:83:boolean isSoReuseAddress() -> isSoReuseAddress
    95:95:int getSoLinger() -> getSoLinger
    107:107:boolean isSoKeepAlive() -> isSoKeepAlive
    119:119:boolean isTcpNoDelay() -> isTcpNoDelay
    124:124:org.apache.http.config.SocketConfig clone() -> clone
    129:136:java.lang.String toString() -> toString
    140:140:org.apache.http.config.SocketConfig$Builder custom() -> custom
    144:145:org.apache.http.config.SocketConfig$Builder copy(org.apache.http.config.SocketConfig) -> copy
    38:38:java.lang.Object clone() -> clone
    41:41:void <clinit>() -> <clinit>
org.apache.http.config.SocketConfig$Builder -> org.apache.http.config.SocketConfig$Builder:
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    161:164:void <init>() -> <init>
    167:168:org.apache.http.config.SocketConfig$Builder setSoTimeout(int) -> setSoTimeout
    172:173:org.apache.http.config.SocketConfig$Builder setSoReuseAddress(boolean) -> setSoReuseAddress
    177:178:org.apache.http.config.SocketConfig$Builder setSoLinger(int) -> setSoLinger
    182:183:org.apache.http.config.SocketConfig$Builder setSoKeepAlive(boolean) -> setSoKeepAlive
    187:188:org.apache.http.config.SocketConfig$Builder setTcpNoDelay(boolean) -> setTcpNoDelay
    192:192:org.apache.http.config.SocketConfig build() -> build
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    60:64:void <init>(org.apache.http.conn.ManagedClientConnection,boolean) -> <init>
    70:79:boolean eofDetected(java.io.InputStream) -> eofDetected
    86:95:boolean streamClosed(java.io.InputStream) -> streamClosed
    101:102:boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    74:78:void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean) -> <init>
    82:82:boolean isRepeatable() -> isRepeatable
    87:87:java.io.InputStream getContent() -> getContent
    91:106:void ensureConsumed() -> ensureConsumed
    114:115:void consumeContent() -> consumeContent
    119:121:void writeTo(java.io.OutputStream) -> writeTo
    124:125:void releaseConnection() -> releaseConnection
    129:136:void abortConnection() -> abortConnection
    140:153:boolean eofDetected(java.io.InputStream) -> eofDetected
    158:178:boolean streamClosed(java.io.InputStream) -> streamClosed
    182:185:boolean streamAbort(java.io.InputStream) -> streamAbort
    199:206:void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    56:58:void <init>() -> <init>
    64:66:void <init>(java.lang.String) -> <init>
    77:85:void <init>(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress[]) -> <init>
    91:91:org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
    48:49:void <init>() -> <init>
    57:58:void <init>(java.lang.String) -> <init>
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.ConnectionRequest -> org.apache.http.conn.ConnectionRequest:
    org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.conn.DnsResolver -> org.apache.http.conn.DnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    org.apache.http.conn.EofSensorWatcher eofWatcher -> eofWatcher
    83:88:void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher) -> <init>
    91:91:boolean isSelfClosed() -> isSelfClosed
    95:95:java.io.InputStream getWrappedStream() -> getWrappedStream
    108:111:boolean isReadAllowed() -> isReadAllowed
    116:128:int read() -> read
    133:145:int read(byte[],int,int) -> read
    150:150:int read(byte[]) -> read
    155:167:int available() -> available
    173:175:void close() -> close
    195:208:void checkEOF(int) -> checkEOF
    223:236:void checkClose() -> checkClose
    253:266:void checkAbort() -> checkAbort
    272:273:void releaseConnection() -> releaseConnection
    284:286:void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpClientConnectionManager -> org.apache.http.conn.HttpClientConnectionManager:
    org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.HttpConnectionFactory -> org.apache.http.conn.HttpConnectionFactory:
    org.apache.http.HttpConnection create(java.lang.Object,org.apache.http.config.ConnectionConfig) -> create
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    56:57:void <init>(org.apache.http.HttpHost,java.net.ConnectException) -> <init>
    68:76:void <init>(java.io.IOException,org.apache.http.HttpHost,java.net.InetAddress[]) -> <init>
    79:79:org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.HttpInetSocketAddress -> org.apache.http.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost httphost -> httphost
    51:54:void <init>(org.apache.http.HttpHost,java.net.InetAddress,int) -> <init>
    57:57:org.apache.http.HttpHost getHttpHost() -> getHttpHost
    62:62:java.lang.String toString() -> toString
org.apache.http.conn.HttpRoutedConnection -> org.apache.http.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.ManagedHttpClientConnection -> org.apache.http.conn.ManagedHttpClientConnection:
    java.lang.String getId() -> getId
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    74:74:org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    81:82:void <init>() -> <init>
    87:87:java.net.Socket createSocket() -> createSocket
    109:147:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    165:169:boolean isSecure(java.net.Socket) -> isSecure
    67:67:void <clinit>() -> <clinit>
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.SchemePortResolver -> org.apache.http.conn.SchemePortResolver:
    int resolve(org.apache.http.HttpHost) -> resolve
org.apache.http.conn.UnsupportedSchemeException -> org.apache.http.conn.UnsupportedSchemeException:
    long serialVersionUID -> serialVersionUID
    48:49:void <init>(java.lang.String) -> <init>
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    47:48:void <init>(org.apache.http.params.HttpParams) -> <init>
    56:57:void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    48:49:void <init>(org.apache.http.params.HttpParams) -> <init>
    52:53:void setTimeout(long) -> setTimeout
    56:57:void setMaxTotalConnections(int) -> setMaxTotalConnections
    60:61:void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    46:46:void <init>() -> <init>
    63:64:long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    79:81:void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    101:103:void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    113:118:org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    130:132:void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    143:144:int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
    84:84:void <clinit>() -> <clinit>
org.apache.http.conn.params.ConnManagerParams$1 -> org.apache.http.conn.params.ConnManagerParams$1:
    84:84:void <init>() -> <init>
    87:87:int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    58:61:void <init>(int) -> <init>
    64:65:void <init>() -> <init>
    68:68:int getDefaultMax() -> getDefaultMax
    75:75:int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    79:81:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    84:87:void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    90:95:int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    100:105:void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    109:109:java.lang.String toString() -> toString
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    52:53:void <init>(org.apache.http.params.HttpParams) -> <init>
    57:58:void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    62:63:void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    67:68:void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    64:66:void <init>() -> <init>
    80:87:org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    102:104:void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    118:125:org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    140:142:void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    157:161:java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    173:175:void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
    54:61:void <clinit>() -> <clinit>
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    39:39:void <init>() -> <init>
    53:65:int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    79:79:int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    95:120:int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    135:178:int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    java.util.List proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    72:87:void <init>(org.apache.http.HttpHost,java.net.InetAddress,java.util.List,boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType) -> <init>
    104:106:void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType) -> <init>
    127:129:void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType) -> <init>
    142:144:void <init>(org.apache.http.HttpHost,java.net.InetAddress,boolean) -> <init>
    152:154:void <init>(org.apache.http.HttpHost) -> <init>
    171:174:void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean) -> <init>
    185:186:void <init>(org.apache.http.HttpHost,org.apache.http.HttpHost) -> <init>
    189:189:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    193:193:java.net.InetAddress getLocalAddress() -> getLocalAddress
    197:197:java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    201:201:int getHopCount() -> getHopCount
    205:211:org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    216:216:org.apache.http.HttpHost getProxyHost() -> getProxyHost
    220:220:org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    224:224:boolean isTunnelled() -> isTunnelled
    228:228:org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    232:232:boolean isLayered() -> isLayered
    236:236:boolean isSecure() -> isSecure
    249:263:boolean equals(java.lang.Object) -> equals
    275:286:int hashCode() -> hashCode
    296:319:java.lang.String toString() -> toString
    325:325:java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    64:64:org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    64:64:org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
    64:64:void <init>(java.lang.String,int) -> <init>
    64:64:void <clinit>() -> <clinit>
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    49:49:org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    49:49:org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
    49:49:void <init>(java.lang.String,int) -> <init>
    49:49:void <clinit>() -> <clinit>
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    81:87:void <init>(org.apache.http.HttpHost,java.net.InetAddress) -> <init>
    93:98:void reset() -> reset
    108:109:void <init>(org.apache.http.conn.routing.HttpRoute) -> <init>
    118:121:void connectTarget(boolean) -> connectTarget
    131:136:void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    145:149:void tunnelTarget(boolean) -> tunnelTarget
    161:172:void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    183:186:void layerProtocol(boolean) -> layerProtocol
    189:189:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    193:193:java.net.InetAddress getLocalAddress() -> getLocalAddress
    197:205:int getHopCount() -> getHopCount
    209:219:org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    223:223:org.apache.http.HttpHost getProxyHost() -> getProxyHost
    227:227:boolean isConnected() -> isConnected
    231:231:org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    235:235:boolean isTunnelled() -> isTunnelled
    239:239:org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    243:243:boolean isLayered() -> isLayered
    247:247:boolean isSecure() -> isSecure
    259:259:org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    275:283:boolean equals(java.lang.Object) -> equals
    304:316:int hashCode() -> hashCode
    326:356:java.lang.String toString() -> toString
    363:363:java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.LayeredSchemeSocketFactory -> org.apache.http.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSocketFactory -> org.apache.http.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    43:45:void <init>(org.apache.http.conn.scheme.LayeredSchemeSocketFactory) -> <init>
    50:50:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    62:62:org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    70:72:void <init>(org.apache.http.conn.scheme.HostNameResolver) -> <init>
    75:77:void <init>() -> <init>
    87:87:java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    91:91:java.net.Socket createSocket() -> createSocket
    102:121:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    134:134:boolean isSecure(java.net.Socket) -> isSecure
    146:157:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    java.lang.String name -> name
    org.apache.http.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    89:105:void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory) -> <init>
    123:139:void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int) -> <init>
    147:147:int getDefaultPort() -> getDefaultPort
    162:169:org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    184:184:org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    193:193:java.lang.String getName() -> getName
    203:203:boolean isLayered() -> isLayered
    216:216:int resolvePort(int) -> resolvePort
    226:233:java.lang.String toString() -> toString
    238:247:boolean equals(java.lang.Object) -> equals
    253:257:int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeLayeredSocketFactory -> org.apache.http.conn.scheme.SchemeLayeredSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSocketFactory factory -> factory
    46:48:void <init>(org.apache.http.conn.scheme.LayeredSocketFactory) -> <init>
    54:54:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    47:49:void <init>(org.apache.http.conn.scheme.LayeredSchemeSocketFactory) -> <init>
    52:52:java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    60:60:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    64:64:boolean isSecure(java.net.Socket) -> isSecure
    71:71:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    57:59:void <init>() -> <init>
    72:77:org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    92:93:org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    105:109:org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    123:125:org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    137:141:org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    150:150:java.util.List getSchemeNames() -> getSchemeNames
    160:165:void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SchemeSocketFactory -> org.apache.http.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:
    org.apache.http.conn.scheme.SocketFactory factory -> factory
    48:50:void <init>(org.apache.http.conn.scheme.SocketFactory) -> <init>
    57:65:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    69:69:java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    73:73:boolean isSecure(java.net.Socket) -> isSecure
    77:77:org.apache.http.conn.scheme.SocketFactory getFactory() -> getFactory
    82:91:boolean equals(java.lang.Object) -> equals
    97:97:int hashCode() -> hashCode
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SocketFactoryAdaptor -> org.apache.http.conn.scheme.SocketFactoryAdaptor:
    org.apache.http.conn.scheme.SchemeSocketFactory factory -> factory
    46:48:void <init>(org.apache.http.conn.scheme.SchemeSocketFactory) -> <init>
    51:52:java.net.Socket createSocket() -> createSocket
    60:66:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    70:70:boolean isSecure(java.net.Socket) -> isSecure
    74:74:org.apache.http.conn.scheme.SchemeSocketFactory getFactory() -> getFactory
    79:88:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
org.apache.http.conn.socket.ConnectionSocketFactory -> org.apache.http.conn.socket.ConnectionSocketFactory:
    java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
org.apache.http.conn.socket.LayeredConnectionSocketFactory -> org.apache.http.conn.socket.LayeredConnectionSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
org.apache.http.conn.socket.PlainConnectionSocketFactory -> org.apache.http.conn.socket.PlainConnectionSocketFactory:
    org.apache.http.conn.socket.PlainConnectionSocketFactory INSTANCE -> INSTANCE
    49:49:org.apache.http.conn.socket.PlainConnectionSocketFactory getSocketFactory() -> getSocketFactory
    53:54:void <init>() -> <init>
    57:57:java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    67:80:java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
    46:46:void <clinit>() -> <clinit>
org.apache.http.conn.ssl.AbstractVerifier -> org.apache.http.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    org.apache.commons.logging.Log log -> log
    82:86:void <init>() -> <init>
    90:134:void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    138:144:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    150:153:void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    164:233:void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    240:244:boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    248:252:boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    256:295:java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    310:338:java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    357:357:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    366:372:int countDots(java.lang.String) -> countDots
    376:376:boolean isIPAddress(java.lang.String) -> isIPAddress
    385:393:java.lang.String normaliseIPv6Address(java.lang.String) -> normaliseIPv6Address
    73:80:void <clinit>() -> <clinit>
org.apache.http.conn.ssl.AllowAllHostnameVerifier -> org.apache.http.conn.ssl.AllowAllHostnameVerifier:
    40:40:void <init>() -> <init>
    47:47:void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    51:51:java.lang.String toString() -> toString
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier -> org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:
    48:48:void <init>() -> <init>
    54:55:void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    59:59:boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    64:64:java.lang.String toString() -> toString
org.apache.http.conn.ssl.PrivateKeyDetails -> org.apache.http.conn.ssl.PrivateKeyDetails:
    java.lang.String type -> type
    java.security.cert.X509Certificate[] certChain -> certChain
    45:48:void <init>(java.lang.String,java.security.cert.X509Certificate[]) -> <init>
    51:51:java.lang.String getType() -> getType
    55:55:java.security.cert.X509Certificate[] getCertChain() -> getCertChain
    60:60:java.lang.String toString() -> toString
org.apache.http.conn.ssl.PrivateKeyStrategy -> org.apache.http.conn.ssl.PrivateKeyStrategy:
    java.lang.String chooseAlias(java.util.Map,java.net.Socket) -> chooseAlias
org.apache.http.conn.ssl.SSLConnectionSocketFactory -> org.apache.http.conn.ssl.SSLConnectionSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    140:140:org.apache.http.conn.ssl.SSLConnectionSocketFactory getSocketFactory() -> getSocketFactory
    146:149:java.lang.String[] split(java.lang.String) -> split
    162:162:org.apache.http.conn.ssl.SSLConnectionSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    175:176:void <init>(javax.net.ssl.SSLContext) -> <init>
    180:182:void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    189:191:void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    196:197:void <init>(javax.net.ssl.SSLSocketFactory,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    203:208:void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    218:218:void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    221:228:void internalPrepareSocket(javax.net.ssl.SSLSocket) -> internalPrepareSocket
    231:233:java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    243:265:java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
    274:282:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
    286:286:org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    291:298:void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
    123:129:void <clinit>() -> <clinit>
org.apache.http.conn.ssl.SSLContextBuilder -> org.apache.http.conn.ssl.SSLContextBuilder:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String protocol -> protocol
    java.util.Set keymanagers -> keymanagers
    java.util.Set trustmanagers -> trustmanagers
    java.security.SecureRandom secureRandom -> secureRandom
    73:76:void <init>() -> <init>
    79:80:org.apache.http.conn.ssl.SSLContextBuilder useTLS() -> useTLS
    84:85:org.apache.http.conn.ssl.SSLContextBuilder useSSL() -> useSSL
    89:90:org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String) -> useProtocol
    94:95:org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom) -> setSecureRandom
    101:119:org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy) -> loadTrustMaterial
    124:124:org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore) -> loadTrustMaterial
    131:132:org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[]) -> loadKeyMaterial
    140:158:org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy) -> loadKeyMaterial
    162:168:javax.net.ssl.SSLContext build() -> build
org.apache.http.conn.ssl.SSLContextBuilder$KeyManagerDelegate -> org.apache.http.conn.ssl.SSLContextBuilder$KeyManagerDelegate:
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    org.apache.http.conn.ssl.PrivateKeyStrategy aliasStrategy -> aliasStrategy
    206:209:void <init>(javax.net.ssl.X509KeyManager,org.apache.http.conn.ssl.PrivateKeyStrategy) -> <init>
    213:213:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    218:228:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    233:233:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    238:246:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    250:250:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    254:254:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
org.apache.http.conn.ssl.SSLContextBuilder$TrustManagerDelegate -> org.apache.http.conn.ssl.SSLContextBuilder$TrustManagerDelegate:
    javax.net.ssl.X509TrustManager trustManager -> trustManager
    org.apache.http.conn.ssl.TrustStrategy trustStrategy -> trustStrategy
    177:180:void <init>(javax.net.ssl.X509TrustManager,org.apache.http.conn.ssl.TrustStrategy) -> <init>
    184:185:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    189:192:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    195:195:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.http.conn.ssl.SSLContexts -> org.apache.http.conn.ssl.SSLContexts:
    43:43:void <init>() -> <init>
    54:60:javax.net.ssl.SSLContext createDefault() -> createDefault
    75:77:javax.net.ssl.SSLContext createSystemDefault() -> createSystemDefault
    87:87:org.apache.http.conn.ssl.SSLContextBuilder custom() -> custom
org.apache.http.conn.ssl.SSLInitializationException -> org.apache.http.conn.ssl.SSLInitializationException:
    long serialVersionUID -> serialVersionUID
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.conn.ssl.SSLSocketFactory -> org.apache.http.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    162:162:org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    168:171:java.lang.String[] split(java.lang.String) -> split
    184:184:org.apache.http.conn.ssl.SSLSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    206:213:void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver) -> <init>
    227:234:void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    247:254:void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    261:266:void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore) -> <init>
    272:276:void <init>(java.security.KeyStore,java.lang.String) -> <init>
    281:285:void <init>(java.security.KeyStore) -> <init>
    294:298:void <init>(org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    306:310:void <init>(org.apache.http.conn.ssl.TrustStrategy) -> <init>
    313:314:void <init>(javax.net.ssl.SSLContext) -> <init>
    318:324:void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.scheme.HostNameResolver) -> <init>
    331:333:void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    343:345:void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    353:354:void <init>(javax.net.ssl.SSLSocketFactory,org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    363:369:void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier) -> <init>
    377:377:java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    381:381:java.net.Socket createSocket() -> createSocket
    392:401:java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    419:422:boolean isSecure(java.net.Socket) -> isSecure
    433:433:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
    441:441:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    445:447:void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    450:450:org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    459:470:java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    477:477:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    490:490:void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    493:500:void internalPrepareSocket(javax.net.ssl.SSLSocket) -> internalPrepareSocket
    503:505:java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    515:537:java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
    546:554:java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
    559:566:void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
    145:151:void <clinit>() -> <clinit>
org.apache.http.conn.ssl.StrictHostnameVerifier -> org.apache.http.conn.ssl.StrictHostnameVerifier:
    55:55:void <init>() -> <init>
    61:62:void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    66:66:java.lang.String toString() -> toString
org.apache.http.conn.ssl.TrustSelfSignedStrategy -> org.apache.http.conn.ssl.TrustSelfSignedStrategy:
    38:38:void <init>() -> <init>
    42:42:boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.TrustStrategy -> org.apache.http.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.X509HostnameVerifier -> org.apache.http.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    java.lang.String IPV4_BASIC_PATTERN_STRING -> IPV4_BASIC_PATTERN_STRING
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV4_MAPPED_IPV6_PATTERN -> IPV4_MAPPED_IPV6_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    char COLON_CHAR -> COLON_CHAR
    int MAX_COLON_COUNT -> MAX_COLON_COUNT
    42:43:void <init>() -> <init>
    80:80:boolean isIPv4Address(java.lang.String) -> isIPv4Address
    84:84:boolean isIPv4MappedIPv64Address(java.lang.String) -> isIPv4MappedIPv64Address
    94:94:boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    104:110:boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    120:120:boolean isIPv6Address(java.lang.String) -> isIPv6Address
    49:59:void <clinit>() -> <clinit>
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    44:44:void <init>() -> <init>
    49:77:int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    49:61:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    64:64:java.lang.String getHost() -> getHost
    68:68:java.lang.String getPath() -> getPath
    72:72:int getPort() -> getPort
    76:76:boolean isSecure() -> isSecure
    81:91:java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    51:51:void <init>() -> <init>
    56:63:java.lang.String normalizePath(org.apache.http.cookie.Cookie) -> normalizePath
    67:77:int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    50:50:int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieRestrictionViolationException -> org.apache.http.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
    48:49:void <init>() -> <init>
    58:59:void <init>(java.lang.String) -> <init>
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecProvider -> org.apache.http.cookie.CookieSpecProvider:
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    60:62:void <init>() -> <init>
    76:79:void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    87:89:void unregister(java.lang.String) -> unregister
    105:110:org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    125:125:org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    138:138:java.util.List getSpecNames() -> getSpecNames
    148:153:void setItems(java.util.Map) -> setItems
    156:156:org.apache.http.cookie.CookieSpecProvider lookup(java.lang.String) -> lookup
    53:53:java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.cookie.CookieSpecRegistry$1 -> org.apache.http.cookie.CookieSpecRegistry$1:
    java.lang.String val$name -> val$name
    org.apache.http.cookie.CookieSpecRegistry this$0 -> this$0
    156:156:void <init>(org.apache.http.cookie.CookieSpecRegistry,java.lang.String) -> <init>
    159:161:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
    49:50:void <init>() -> <init>
    58:59:void <init>(java.lang.String) -> <init>
    69:70:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    51:52:void <init>(org.apache.http.params.HttpParams) -> <init>
    55:56:void setDatePatterns(java.util.Collection) -> setDatePatterns
    59:60:void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    int OUTPUT_BUFFER_SIZE -> OUTPUT_BUFFER_SIZE
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    65:66:void <init>() -> <init>
    77:77:org.apache.http.Header getContentType() -> getContentType
    89:89:org.apache.http.Header getContentEncoding() -> getContentEncoding
    100:100:boolean isChunked() -> isChunked
    113:114:void setContentType(org.apache.http.Header) -> setContentType
    125:130:void setContentType(java.lang.String) -> setContentType
    142:143:void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    154:159:void setContentEncoding(java.lang.String) -> setContentEncoding
    177:178:void setChunked(boolean) -> setChunked
    189:189:void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    56:58:void <init>() -> <init>
    61:61:long getContentLength() -> getContentLength
    74:75:java.io.InputStream getContent() -> getContent
    84:84:boolean isRepeatable() -> isRepeatable
    94:95:void setContentLength(long) -> setContentLength
    104:105:void setContent(java.io.InputStream) -> setContent
    108:119:void writeTo(java.io.OutputStream) -> writeTo
    122:122:boolean isStreaming() -> isStreaming
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    61:67:void <init>(org.apache.http.HttpEntity) -> <init>
    71:74:long getContentLength() -> getContentLength
    80:83:java.io.InputStream getContent() -> getContent
    94:94:boolean isChunked() -> isChunked
    104:104:boolean isRepeatable() -> isRepeatable
    110:116:void writeTo(java.io.OutputStream) -> writeTo
    122:122:boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    byte[] b -> b
    int off -> off
    int len -> len
    58:67:void <init>(byte[],org.apache.http.entity.ContentType) -> <init>
    73:86:void <init>(byte[],int,int,org.apache.http.entity.ContentType) -> <init>
    89:90:void <init>(byte[]) -> <init>
    93:94:void <init>(byte[],int,int) -> <init>
    97:97:boolean isRepeatable() -> isRepeatable
    101:101:long getContentLength() -> getContentLength
    105:105:java.io.InputStream getContent() -> getContent
    109:112:void writeTo(java.io.OutputStream) -> writeTo
    121:121:boolean isStreaming() -> isStreaming
    126:126:java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.ContentType -> org.apache.http.entity.ContentType:
    long serialVersionUID -> serialVersionUID
    org.apache.http.entity.ContentType APPLICATION_ATOM_XML -> APPLICATION_ATOM_XML
    org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED -> APPLICATION_FORM_URLENCODED
    org.apache.http.entity.ContentType APPLICATION_JSON -> APPLICATION_JSON
    org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    org.apache.http.entity.ContentType APPLICATION_SVG_XML -> APPLICATION_SVG_XML
    org.apache.http.entity.ContentType APPLICATION_XHTML_XML -> APPLICATION_XHTML_XML
    org.apache.http.entity.ContentType APPLICATION_XML -> APPLICATION_XML
    org.apache.http.entity.ContentType MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    org.apache.http.entity.ContentType TEXT_HTML -> TEXT_HTML
    org.apache.http.entity.ContentType TEXT_PLAIN -> TEXT_PLAIN
    org.apache.http.entity.ContentType TEXT_XML -> TEXT_XML
    org.apache.http.entity.ContentType WILDCARD -> WILDCARD
    org.apache.http.entity.ContentType DEFAULT_TEXT -> DEFAULT_TEXT
    org.apache.http.entity.ContentType DEFAULT_BINARY -> DEFAULT_BINARY
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    org.apache.http.NameValuePair[] params -> params
    99:103:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    107:112:void <init>(java.lang.String,org.apache.http.NameValuePair[]) -> <init>
    115:115:java.lang.String getMimeType() -> getMimeType
    119:119:java.nio.charset.Charset getCharset() -> getCharset
    126:135:java.lang.String getParameter(java.lang.String) -> getParameter
    144:153:java.lang.String toString() -> toString
    157:163:boolean valid(java.lang.String) -> valid
    175:177:org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    188:188:org.apache.http.entity.ContentType create(java.lang.String) -> create
    204:204:org.apache.http.entity.ContentType create(java.lang.String,java.lang.String) -> create
    208:210:org.apache.http.entity.ContentType create(org.apache.http.HeaderElement) -> create
    225:233:org.apache.http.entity.ContentType parse(java.lang.String) -> parse
    251:261:org.apache.http.entity.ContentType get(org.apache.http.HttpEntity) -> get
    277:278:org.apache.http.entity.ContentType getOrDefault(org.apache.http.HttpEntity) -> getOrDefault
    289:289:org.apache.http.entity.ContentType withCharset(java.nio.charset.Charset) -> withCharset
    302:302:org.apache.http.entity.ContentType withCharset(java.lang.String) -> withCharset
    64:91:void <clinit>() -> <clinit>
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    org.apache.http.entity.ContentProducer contentproducer -> contentproducer
    49:51:void <init>(org.apache.http.entity.ContentProducer) -> <init>
    54:54:long getContentLength() -> getContentLength
    58:60:java.io.InputStream getContent() -> getContent
    64:64:boolean isRepeatable() -> isRepeatable
    68:70:void writeTo(java.io.OutputStream) -> writeTo
    73:73:boolean isStreaming() -> isStreaming
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    54:57:void <init>(java.io.File,java.lang.String) -> <init>
    63:68:void <init>(java.io.File,org.apache.http.entity.ContentType) -> <init>
    74:76:void <init>(java.io.File) -> <init>
    79:79:boolean isRepeatable() -> isRepeatable
    83:83:long getContentLength() -> getContentLength
    87:87:java.io.InputStream getContent() -> getContent
    91:103:void writeTo(java.io.OutputStream) -> writeTo
    111:111:boolean isStreaming() -> isStreaming
    118:118:java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    58:60:void <init>(org.apache.http.HttpEntity) -> <init>
    63:63:boolean isRepeatable() -> isRepeatable
    67:67:boolean isChunked() -> isChunked
    71:71:long getContentLength() -> getContentLength
    75:75:org.apache.http.Header getContentType() -> getContentType
    79:79:org.apache.http.Header getContentEncoding() -> getContentEncoding
    84:84:java.io.InputStream getContent() -> getContent
    89:90:void writeTo(java.io.OutputStream) -> writeTo
    93:93:boolean isStreaming() -> isStreaming
    102:103:void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    java.io.InputStream content -> content
    long length -> length
    58:59:void <init>(java.io.InputStream) -> <init>
    69:70:void <init>(java.io.InputStream,long) -> <init>
    82:83:void <init>(java.io.InputStream,org.apache.http.entity.ContentType) -> <init>
    93:99:void <init>(java.io.InputStream,long,org.apache.http.entity.ContentType) -> <init>
    102:102:boolean isRepeatable() -> isRepeatable
    109:109:long getContentLength() -> getContentLength
    113:113:java.io.InputStream getContent() -> getContent
    124:149:void writeTo(java.io.OutputStream) -> writeTo
    152:152:boolean isStreaming() -> isStreaming
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    65:72:void <init>(java.io.Serializable,boolean) -> <init>
    78:81:void <init>(java.io.Serializable) -> <init>
    84:89:void createBytes(java.io.Serializable) -> createBytes
    92:95:java.io.InputStream getContent() -> getContent
    99:102:long getContentLength() -> getContentLength
    107:107:boolean isRepeatable() -> isRepeatable
    111:111:boolean isStreaming() -> isStreaming
    115:124:void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    65:80:void <init>(java.lang.String,org.apache.http.entity.ContentType) -> <init>
    99:105:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    121:122:void <init>(java.lang.String,java.lang.String) -> <init>
    137:138:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    151:152:void <init>(java.lang.String) -> <init>
    155:155:boolean isRepeatable() -> isRepeatable
    159:159:long getContentLength() -> getContentLength
    163:163:java.io.InputStream getContent() -> getContent
    167:170:void writeTo(java.io.OutputStream) -> writeTo
    178:178:boolean isStreaming() -> isStreaming
    183:183:java.lang.Object clone() -> clone
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    82:101:void <init>() -> <init>
    void assertOpen() -> assertOpen
    122:122:org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    137:137:org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    151:151:org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    173:173:org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    193:193:org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    202:202:org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    225:239:void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    242:246:boolean isResponseAvailable(int) -> isResponseAvailable
    252:256:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    260:269:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    272:273:void doFlush() -> doFlush
    276:278:void flush() -> flush
    282:287:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    292:296:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    299:299:boolean isEof() -> isEof
    303:315:boolean isStale() -> isStale
    320:320:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    81:100:void <init>() -> <init>
    void assertOpen() -> assertOpen
    121:121:org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    137:137:org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    151:151:org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    173:173:org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    193:193:org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    202:202:org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    225:239:void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    243:246:org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    251:255:void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    258:259:void doFlush() -> doFlush
    262:264:void flush() -> flush
    268:274:void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    278:285:void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    288:288:boolean isEof() -> isEof
    292:302:boolean isStale() -> isStale
    307:307:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.BHttpConnectionBase -> org.apache.http.impl.BHttpConnectionBase:
    org.apache.http.impl.io.SessionInputBufferImpl inbuffer -> inbuffer
    org.apache.http.impl.io.SessionOutputBufferImpl outbuffer -> outbuffer
    org.apache.http.impl.HttpConnectionMetricsImpl connMetrics -> connMetrics
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    boolean open -> open
    java.net.Socket socket -> socket
    112:125:void <init>(int,int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy) -> <init>
    128:135:void ensureOpen() -> ensureOpen
    138:138:java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    142:142:java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    156:161:void bind(java.net.Socket) -> bind
    164:164:org.apache.http.io.SessionInputBuffer getSessionInputBuffer() -> getSessionInputBuffer
    168:168:org.apache.http.io.SessionOutputBuffer getSessionOutputBuffer() -> getSessionOutputBuffer
    172:173:void doFlush() -> doFlush
    176:176:boolean isOpen() -> isOpen
    180:180:java.net.Socket getSocket() -> getSocket
    186:191:java.io.OutputStream createOutputStream(long,org.apache.http.io.SessionOutputBuffer) -> createOutputStream
    196:197:java.io.OutputStream prepareOutput(org.apache.http.HttpMessage) -> prepareOutput
    203:208:java.io.InputStream createInputStream(long,org.apache.http.io.SessionInputBuffer) -> createInputStream
    213:239:org.apache.http.HttpEntity prepareInput(org.apache.http.HttpMessage) -> prepareInput
    243:246:java.net.InetAddress getLocalAddress() -> getLocalAddress
    251:254:int getLocalPort() -> getLocalPort
    259:262:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    267:270:int getRemotePort() -> getRemotePort
    275:284:void setSocketTimeout(int) -> setSocketTimeout
    287:294:int getSocketTimeout() -> getSocketTimeout
    299:304:void shutdown() -> shutdown
    307:330:void close() -> close
    333:338:int fillInputBuffer(int) -> fillInputBuffer
    343:347:boolean awaitInput(int) -> awaitInput
    351:360:boolean isStale() -> isStale
    365:366:void incrementRequestCount() -> incrementRequestCount
    369:370:void incrementResponseCount() -> incrementResponseCount
    373:373:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    378:389:java.lang.String toString() -> toString
org.apache.http.impl.ConnSupport -> org.apache.http.impl.ConnSupport:
    41:41:void <init>() -> <init>
    44:55:java.nio.charset.CharsetDecoder createDecoder(org.apache.http.config.ConnectionConfig) -> createDecoder
    60:71:java.nio.charset.CharsetEncoder createEncoder(org.apache.http.config.ConnectionConfig) -> createEncoder
org.apache.http.impl.DefaultBHttpClientConnection -> org.apache.http.impl.DefaultBHttpClientConnection:
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    97:103:void <init>(int,int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    110:111:void <init>(int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints) -> <init>
    114:115:void <init>(int) -> <init>
    118:118:void onResponseReceived(org.apache.http.HttpResponse) -> onResponseReceived
    121:121:void onRequestSubmitted(org.apache.http.HttpRequest) -> onRequestSubmitted
    125:126:void bind(java.net.Socket) -> bind
    129:133:boolean isResponseAvailable(int) -> isResponseAvailable
    139:144:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    148:157:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    160:166:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    171:175:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    178:180:void flush() -> flush
org.apache.http.impl.DefaultBHttpClientConnectionFactory -> org.apache.http.impl.DefaultBHttpClientConnectionFactory:
    org.apache.http.impl.DefaultBHttpClientConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    org.apache.http.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    65:71:void <init>(org.apache.http.config.ConnectionConfig,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    77:78:void <init>(org.apache.http.config.ConnectionConfig,org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    81:82:void <init>(org.apache.http.config.ConnectionConfig) -> <init>
    85:86:void <init>() -> <init>
    89:100:org.apache.http.impl.DefaultBHttpClientConnection createConnection(java.net.Socket) -> createConnection
    47:47:org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
    51:51:void <clinit>() -> <clinit>
org.apache.http.impl.DefaultBHttpServerConnection -> org.apache.http.impl.DefaultBHttpServerConnection:
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    96:103:void <init>(int,int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageParserFactory,org.apache.http.io.HttpMessageWriterFactory) -> <init>
    110:111:void <init>(int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints) -> <init>
    114:115:void <init>(int) -> <init>
    118:118:void onRequestReceived(org.apache.http.HttpRequest) -> onRequestReceived
    121:121:void onResponseSubmitted(org.apache.http.HttpResponse) -> onResponseSubmitted
    125:126:void bind(java.net.Socket) -> bind
    130:134:org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    139:143:void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    147:154:void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    158:167:void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    170:172:void flush() -> flush
org.apache.http.impl.DefaultBHttpServerConnectionFactory -> org.apache.http.impl.DefaultBHttpServerConnectionFactory:
    org.apache.http.impl.DefaultBHttpServerConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageParserFactory requestParserFactory -> requestParserFactory
    org.apache.http.io.HttpMessageWriterFactory responseWriterFactory -> responseWriterFactory
    65:71:void <init>(org.apache.http.config.ConnectionConfig,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageParserFactory,org.apache.http.io.HttpMessageWriterFactory) -> <init>
    77:78:void <init>(org.apache.http.config.ConnectionConfig,org.apache.http.io.HttpMessageParserFactory,org.apache.http.io.HttpMessageWriterFactory) -> <init>
    81:82:void <init>(org.apache.http.config.ConnectionConfig) -> <init>
    85:86:void <init>() -> <init>
    89:100:org.apache.http.impl.DefaultBHttpServerConnection createConnection(java.net.Socket) -> createConnection
    47:47:org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
    51:51:void <clinit>() -> <clinit>
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    org.apache.http.impl.DefaultConnectionReuseStrategy INSTANCE -> INSTANCE
    69:70:void <init>() -> <init>
    75:164:boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    178:178:org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
    182:183:boolean canResponseHaveBody(org.apache.http.HttpResponse) -> canResponseHaveBody
    66:66:void <clinit>() -> <clinit>
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    50:51:void <init>() -> <init>
    57:68:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    org.apache.http.impl.DefaultHttpRequestFactory INSTANCE -> INSTANCE
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    68:69:void <init>() -> <init>
    72:77:boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    82:91:org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    97:104:org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
    47:58:void <clinit>() -> <clinit>
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.impl.DefaultHttpResponseFactory INSTANCE -> INSTANCE
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    62:64:void <init>(org.apache.http.ReasonPhraseCatalog) -> <init>
    71:72:void <init>() -> <init>
    80:84:org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    92:93:org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    106:106:java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
    51:51:void <clinit>() -> <clinit>
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    50:51:void <init>() -> <init>
    55:69:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    62:64:void <init>() -> <init>
    76:85:java.lang.String getReason(int,java.util.Locale) -> getReason
    109:112:void setReason(int,java.lang.String) -> setReason
    54:221:void <clinit>() -> <clinit>
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    org.apache.http.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    org.apache.http.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.Map metricsCache -> metricsCache
    52:66:void <init>(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> <init>
    71:74:long getReceivedBytesCount() -> getReceivedBytesCount
    79:82:long getSentBytesCount() -> getSentBytesCount
    87:87:long getRequestCount() -> getRequestCount
    91:92:void incrementRequestCount() -> incrementRequestCount
    95:95:long getResponseCount() -> getResponseCount
    99:100:void incrementResponseCount() -> incrementResponseCount
    103:126:java.lang.Object getMetric(java.lang.String) -> getMetric
    130:134:void setMetric(java.lang.String,java.lang.Object) -> setMetric
    137:146:void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    org.apache.http.impl.NoConnectionReuseStrategy INSTANCE -> INSTANCE
    46:47:void <init>() -> <init>
    50:50:boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    43:43:void <clinit>() -> <clinit>
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    63:67:void <init>() -> <init>
    70:71:void assertNotOpen() -> assertNotOpen
    75:76:void assertOpen() -> assertOpen
    97:97:org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    119:119:org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    143:154:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    157:157:boolean isOpen() -> isOpen
    161:161:java.net.Socket getSocket() -> getSocket
    165:168:java.net.InetAddress getLocalAddress() -> getLocalAddress
    173:176:int getLocalPort() -> getLocalPort
    181:184:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    189:192:int getRemotePort() -> getRemotePort
    197:207:void setSocketTimeout(int) -> setSocketTimeout
    210:217:int getSocketTimeout() -> getSocketTimeout
    222:227:void shutdown() -> shutdown
    230:252:void close() -> close
    255:264:void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    268:279:java.lang.String toString() -> toString
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    52:56:void <init>() -> <init>
    59:60:void assertNotOpen() -> assertNotOpen
    64:65:void assertOpen() -> assertOpen
    86:86:org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    108:108:org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    130:141:void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    144:144:java.net.Socket getSocket() -> getSocket
    148:148:boolean isOpen() -> isOpen
    152:155:java.net.InetAddress getLocalAddress() -> getLocalAddress
    160:163:int getLocalPort() -> getLocalPort
    168:171:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    176:179:int getRemotePort() -> getRemotePort
    184:194:void setSocketTimeout(int) -> setSocketTimeout
    197:204:int getSocketTimeout() -> getSocketTimeout
    209:214:void shutdown() -> shutdown
    217:240:void close() -> close
    243:252:void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    256:267:java.lang.String toString() -> toString
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    org.apache.http.auth.ChallengeState challengeState -> challengeState
    71:73:void <init>(org.apache.http.auth.ChallengeState) -> <init>
    76:77:void <init>() -> <init>
    90:128:void processChallenge(org.apache.http.Header) -> processChallenge
    136:136:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    147:147:boolean isProxy() -> isProxy
    156:156:org.apache.http.auth.ChallengeState getChallengeState() -> getChallengeState
    161:165:java.lang.String toString() -> toString
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    boolean complete -> complete
    64:67:void <init>(java.nio.charset.Charset) -> <init>
    79:81:void <init>(org.apache.http.auth.ChallengeState) -> <init>
    84:85:void <init>() -> <init>
    93:93:java.lang.String getSchemeName() -> getSchemeName
    107:109:void processChallenge(org.apache.http.Header) -> processChallenge
    118:118:boolean isComplete() -> isComplete
    127:127:boolean isConnectionBased() -> isConnectionBased
    137:137:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    158:177:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    196:216:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    java.nio.charset.Charset charset -> charset
    55:57:void <init>(java.nio.charset.Charset) -> <init>
    60:61:void <init>() -> <init>
    64:64:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    68:68:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    106:108:void <init>(java.nio.charset.Charset) -> <init>
    120:121:void <init>(org.apache.http.auth.ChallengeState) -> <init>
    124:125:void <init>() -> <init>
    138:140:void processChallenge(org.apache.http.Header) -> processChallenge
    149:153:boolean isComplete() -> isComplete
    163:163:java.lang.String getSchemeName() -> getSchemeName
    172:172:boolean isConnectionBased() -> isConnectionBased
    176:177:void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    186:186:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    209:224:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    230:232:java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    248:431:org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> createDigestHeader
    435:435:java.lang.String getCnonce() -> getCnonce
    439:439:java.lang.String getA1() -> getA1
    443:443:java.lang.String getA2() -> getA2
    454:463:java.lang.String encode(byte[]) -> encode
    473:476:java.lang.String createCnonce() -> createCnonce
    481:486:java.lang.String toString() -> toString
    83:83:void <clinit>() -> <clinit>
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    java.nio.charset.Charset charset -> charset
    55:57:void <init>(java.nio.charset.Charset) -> <init>
    60:61:void <init>() -> <init>
    64:64:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    68:68:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.GGSSchemeBase -> org.apache.http.impl.auth.GGSSchemeBase:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    boolean stripPort -> stripPort
    org.apache.http.impl.auth.GGSSchemeBase$State state -> state
    byte[] token -> token
    66:82:void <init>(boolean) -> <init>
    85:86:void <init>() -> <init>
    89:89:org.ietf.jgss.GSSManager getManager() -> getManager
    94:104:byte[] generateGSSToken(byte[],org.ietf.jgss.Oid,java.lang.String) -> generateGSSToken
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    111:111:boolean isComplete() -> isComplete
    122:122:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    130:195:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    203:214:void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
org.apache.http.impl.auth.GGSSchemeBase$1 -> org.apache.http.impl.auth.GGSSchemeBase$1:
    int[] $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State -> $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State
    131:131:void <clinit>() -> <clinit>
org.apache.http.impl.auth.GGSSchemeBase$State -> org.apache.http.impl.auth.GGSSchemeBase$State:
    org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.GGSSchemeBase$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED -> TOKEN_GENERATED
    org.apache.http.impl.auth.GGSSchemeBase$State FAILED -> FAILED
    org.apache.http.impl.auth.GGSSchemeBase$State[] $VALUES -> $VALUES
    59:59:org.apache.http.impl.auth.GGSSchemeBase$State[] values() -> values
    59:59:org.apache.http.impl.auth.GGSSchemeBase$State valueOf(java.lang.String) -> valueOf
    59:59:void <init>(java.lang.String,int) -> <init>
    59:63:void <clinit>() -> <clinit>
org.apache.http.impl.auth.HttpAuthenticator -> org.apache.http.impl.auth.HttpAuthenticator:
    org.apache.commons.logging.Log log -> log
    62:64:void <init>(org.apache.commons.logging.Log) -> <init>
    67:68:void <init>() -> <init>
    76:95:boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    106:170:boolean handleAuthChallenge(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> handleAuthChallenge
    178:226:void generateAuthResponse(org.apache.http.HttpRequest,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> generateAuthResponse
    229:230:void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    238:241:org.apache.http.Header doAuth(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doAuth
org.apache.http.impl.auth.HttpAuthenticator$1 -> org.apache.http.impl.auth.HttpAuthenticator$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
    83:83:void <clinit>() -> <clinit>
org.apache.http.impl.auth.HttpEntityDigester -> org.apache.http.impl.auth.HttpEntityDigester:
    java.security.MessageDigest digester -> digester
    boolean closed -> closed
    byte[] digest -> digest
    40:43:void <init>(java.security.MessageDigest) -> <init>
    47:51:void write(int) -> write
    55:59:void write(byte[],int,int) -> write
    63:69:void close() -> close
    72:72:byte[] getDigest() -> getDigest
org.apache.http.impl.auth.KerberosScheme -> org.apache.http.impl.auth.KerberosScheme:
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    50:51:void <init>(boolean) -> <init>
    54:55:void <init>() -> <init>
    58:58:java.lang.String getSchemeName() -> getSchemeName
    78:78:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    83:83:byte[] generateToken(byte[],java.lang.String) -> generateToken
    93:94:java.lang.String getParameter(java.lang.String) -> getParameter
    104:104:java.lang.String getRealm() -> getRealm
    113:113:boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.KerberosSchemeFactory -> org.apache.http.impl.auth.KerberosSchemeFactory:
    boolean stripPort -> stripPort
    49:51:void <init>(boolean) -> <init>
    54:55:void <init>() -> <init>
    58:58:boolean isStripPort() -> isStripPort
    62:62:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    66:66:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
    44:45:void <init>() -> <init>
    53:54:void <init>(java.lang.String) -> <init>
    64:65:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.impl.auth.NTLMEngineImpl -> org.apache.http.impl.auth.NTLMEngineImpl:
    int FLAG_REQUEST_UNICODE_ENCODING -> FLAG_REQUEST_UNICODE_ENCODING
    int FLAG_REQUEST_TARGET -> FLAG_REQUEST_TARGET
    int FLAG_REQUEST_SIGN -> FLAG_REQUEST_SIGN
    int FLAG_REQUEST_SEAL -> FLAG_REQUEST_SEAL
    int FLAG_REQUEST_LAN_MANAGER_KEY -> FLAG_REQUEST_LAN_MANAGER_KEY
    int FLAG_REQUEST_NTLMv1 -> FLAG_REQUEST_NTLMv1
    int FLAG_DOMAIN_PRESENT -> FLAG_DOMAIN_PRESENT
    int FLAG_WORKSTATION_PRESENT -> FLAG_WORKSTATION_PRESENT
    int FLAG_REQUEST_ALWAYS_SIGN -> FLAG_REQUEST_ALWAYS_SIGN
    int FLAG_REQUEST_NTLM2_SESSION -> FLAG_REQUEST_NTLM2_SESSION
    int FLAG_REQUEST_VERSION -> FLAG_REQUEST_VERSION
    int FLAG_TARGETINFO_PRESENT -> FLAG_TARGETINFO_PRESENT
    int FLAG_REQUEST_128BIT_KEY_EXCH -> FLAG_REQUEST_128BIT_KEY_EXCH
    int FLAG_REQUEST_EXPLICIT_KEY_EXCH -> FLAG_REQUEST_EXPLICIT_KEY_EXCH
    int FLAG_REQUEST_56BIT_ENCRYPTION -> FLAG_REQUEST_56BIT_ENCRYPTION
    java.security.SecureRandom RND_GEN -> RND_GEN
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String credentialCharset -> credentialCharset
    byte[] SIGNATURE -> SIGNATURE
    49:1557:void <init>() -> <init>
    120:127:java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    142:142:java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    168:168:java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> getType3Message
    176:176:java.lang.String getCredentialCharset() -> getCredentialCharset
    184:185:void setCredentialCharset(java.lang.String) -> setCredentialCharset
    189:195:java.lang.String stripDotSuffix(java.lang.String) -> stripDotSuffix
    200:200:java.lang.String convertHost(java.lang.String) -> convertHost
    205:205:java.lang.String convertDomain(java.lang.String) -> convertDomain
    209:211:int readULong(byte[],int) -> readULong
    216:218:int readUShort(byte[],int) -> readUShort
    222:229:byte[] readSecurityBuffer(byte[],int) -> readSecurityBuffer
    234:241:byte[] makeRandomChallenge() -> makeRandomChallenge
    246:253:byte[] makeSecondaryKey() -> makeSecondaryKey
    526:528:byte[] hmacMD5(byte[],byte[]) -> hmacMD5
    535:539:byte[] RC4(byte[],byte[]) -> RC4
    567:578:byte[] ntlm2SessionResponse(byte[],byte[],byte[]) -> ntlm2SessionResponse
    593:610:byte[] lmHash(java.lang.String) -> lmHash
    625:630:byte[] ntlmHash(java.lang.String) -> ntlmHash
    643:651:byte[] lmv2Hash(java.lang.String,java.lang.String,byte[]) -> lmv2Hash
    664:672:byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[]) -> ntlmv2Hash
    688:706:byte[] lmResponse(byte[],byte[]) -> lmResponse
    726:733:byte[] lmv2Response(byte[],byte[],byte[]) -> lmv2Response
    748:769:byte[] createBlob(byte[],byte[],byte[]) -> createBlob
    785:797:java.security.Key createDESKey(byte[],int) -> createDESKey
    807:817:void oddParity(byte[]) -> oddParity
    1364:1368:void writeULong(byte[],int,int) -> writeULong
    1371:1371:int F(int,int,int) -> F
    1375:1375:int G(int,int,int) -> G
    1379:1379:int H(int,int,int) -> H
    1383:1383:int rotintlft(int,int) -> rotintlft
    1624:1624:java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    1633:1634:java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    49:49:byte[] access$000() -> access$000
    49:49:byte[] access$100() -> access$100
    49:49:byte[] access$200(java.lang.String) -> access$200
    49:49:byte[] access$300(byte[],byte[]) -> access$300
    49:49:byte[] access$400(java.lang.String) -> access$400
    49:49:byte[] access$500(java.lang.String,java.lang.String,byte[]) -> access$500
    49:49:byte[] access$600(java.lang.String,java.lang.String,byte[]) -> access$600
    49:49:byte[] access$700(byte[],byte[],byte[]) -> access$700
    49:49:byte[] access$800(byte[],byte[],byte[]) -> access$800
    49:49:java.security.Key access$900(byte[],int) -> access$900
    49:49:byte[] access$1000() -> access$1000
    49:49:int access$1100(byte[],int) -> access$1100
    49:49:int access$1200(byte[],int) -> access$1200
    49:49:byte[] access$1300(byte[],int) -> access$1300
    49:49:java.lang.String access$1400(java.lang.String) -> access$1400
    49:49:java.lang.String access$1500(java.lang.String) -> access$1500
    75:97:void <clinit>() -> <clinit>
org.apache.http.impl.auth.NTLMEngineImpl$CipherGen -> org.apache.http.impl.auth.NTLMEngineImpl$CipherGen:
    java.lang.String domain -> domain
    java.lang.String user -> user
    java.lang.String password -> password
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInformation -> targetInformation
    byte[] clientChallenge -> clientChallenge
    byte[] clientChallenge2 -> clientChallenge2
    byte[] secondaryKey -> secondaryKey
    byte[] timestamp -> timestamp
    byte[] lmHash -> lmHash
    byte[] lmResponse -> lmResponse
    byte[] ntlmHash -> ntlmHash
    byte[] ntlmResponse -> ntlmResponse
    byte[] ntlmv2Hash -> ntlmv2Hash
    byte[] lmv2Hash -> lmv2Hash
    byte[] lmv2Response -> lmv2Response
    byte[] ntlmv2Blob -> ntlmv2Blob
    byte[] ntlmv2Response -> ntlmv2Response
    byte[] ntlm2SessionResponse -> ntlm2SessionResponse
    byte[] lm2SessionResponse -> lm2SessionResponse
    byte[] lmUserSessionKey -> lmUserSessionKey
    byte[] ntlmUserSessionKey -> ntlmUserSessionKey
    byte[] ntlmv2UserSessionKey -> ntlmv2UserSessionKey
    byte[] ntlm2SessionResponseUserSessionKey -> ntlm2SessionResponseUserSessionKey
    byte[] lanManagerSessionKey -> lanManagerSessionKey
    272:303:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[],java.lang.String,byte[],byte[],byte[],byte[],byte[]) -> <init>
    307:308:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[],java.lang.String,byte[]) -> <init>
    313:315:byte[] getClientChallenge() -> getClientChallenge
    321:323:byte[] getClientChallenge2() -> getClientChallenge2
    329:331:byte[] getSecondaryKey() -> getSecondaryKey
    337:339:byte[] getLMHash() -> getLMHash
    345:347:byte[] getLMResponse() -> getLMResponse
    353:355:byte[] getNTLMHash() -> getNTLMHash
    361:363:byte[] getNTLMResponse() -> getNTLMResponse
    369:371:byte[] getLMv2Hash() -> getLMv2Hash
    377:379:byte[] getNTLMv2Hash() -> getNTLMv2Hash
    384:395:byte[] getTimestamp() -> getTimestamp
    401:403:byte[] getNTLMv2Blob() -> getNTLMv2Blob
    409:411:byte[] getNTLMv2Response() -> getNTLMv2Response
    417:419:byte[] getLMv2Response() -> getLMv2Response
    425:427:byte[] getNTLM2SessionResponse() -> getNTLM2SessionResponse
    433:439:byte[] getLM2SessionResponse() -> getLM2SessionResponse
    445:451:byte[] getLMUserSessionKey() -> getLMUserSessionKey
    457:463:byte[] getNTLMUserSessionKey() -> getNTLMUserSessionKey
    469:475:byte[] getNTLMv2UserSessionKey() -> getNTLMv2UserSessionKey
    481:489:byte[] getNTLM2SessionResponseUserSessionKey() -> getNTLM2SessionResponseUserSessionKey
    495:519:byte[] getLanManagerSessionKey() -> getLanManagerSessionKey
org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 -> org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5:
    byte[] ipad -> ipad
    byte[] opad -> opad
    java.security.MessageDigest md5 -> md5
    1562:1600:void <init>(byte[]) -> <init>
    1604:1606:byte[] getOutput() -> getOutput
    1611:1612:void update(byte[]) -> update
    1616:1617:void update(byte[],int,int) -> update
org.apache.http.impl.auth.NTLMEngineImpl$MD4 -> org.apache.http.impl.auth.NTLMEngineImpl$MD4:
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    long count -> count
    byte[] dataBuffer -> dataBuffer
    1394:1402:void <init>() -> <init>
    1408:1430:void update(byte[]) -> update
    1435:1455:byte[] getOutput() -> getOutput
    1460:1481:void processBuffer() -> processBuffer
    1484:1503:void round1(int[]) -> round1
    1506:1526:void round2(int[]) -> round2
    1529:1549:void round3(int[]) -> round3
org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage -> org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage:
    byte[] messageContents -> messageContents
    int currentOutputPosition -> currentOutputPosition
    822:829:void <init>() -> <init>
    822:853:void <init>(java.lang.String,int) -> <init>
    860:860:int getPreambleLength() -> getPreambleLength
    865:865:int getMessageLength() -> getMessageLength
    870:872:byte readByte(int) -> readByte
    877:880:void readBytes(byte[],int) -> readBytes
    884:884:int readUShort(int) -> readUShort
    889:889:int readULong(int) -> readULong
    894:894:byte[] readSecurityBuffer(int) -> readSecurityBuffer
    906:910:void prepareResponse(int,int) -> prepareResponse
    919:921:void addByte(byte) -> addByte
    930:937:void addBytes(byte[]) -> addBytes
    941:943:void addUShort(int) -> addUShort
    947:951:void addULong(int) -> addULong
    961:968:java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type1Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type1Message:
    byte[] hostBytes -> hostBytes
    byte[] domainBytes -> domainBytes
    980:993:void <init>(java.lang.String,java.lang.String) -> <init>
    1003:1063:java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type2Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type2Message:
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInfo -> targetInfo
    int flags -> flags
    1076:1128:void <init>(java.lang.String) -> <init>
    1132:1132:byte[] getChallenge() -> getChallenge
    1137:1137:java.lang.String getTarget() -> getTarget
    1142:1142:byte[] getTargetInfo() -> getTargetInfo
    1147:1147:int getFlags() -> getFlags
org.apache.http.impl.auth.NTLMEngineImpl$Type3Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type3Message:
    int type2Flags -> type2Flags
    byte[] domainBytes -> domainBytes
    byte[] hostBytes -> hostBytes
    byte[] userBytes -> userBytes
    byte[] lmResp -> lmResp
    byte[] ntResp -> ntResp
    byte[] sessionKey -> sessionKey
    1169:1244:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> <init>
    1249:1359:java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    org.apache.http.impl.auth.NTLMEngine engine -> engine
    org.apache.http.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    66:71:void <init>(org.apache.http.impl.auth.NTLMEngine) -> <init>
    77:78:void <init>() -> <init>
    81:81:java.lang.String getSchemeName() -> getSchemeName
    86:86:java.lang.String getParameter(java.lang.String) -> getParameter
    91:91:java.lang.String getRealm() -> getRealm
    95:95:boolean isConnectionBased() -> isConnectionBased
    102:117:void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    122:157:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    161:161:boolean isComplete() -> isComplete
org.apache.http.impl.auth.NTLMScheme$State -> org.apache.http.impl.auth.NTLMScheme$State:
    org.apache.http.impl.auth.NTLMScheme$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> MSG_TYPE1_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> MSG_TYPE2_RECEVIED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> MSG_TYPE3_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State FAILED -> FAILED
    org.apache.http.impl.auth.NTLMScheme$State[] $VALUES -> $VALUES
    51:51:org.apache.http.impl.auth.NTLMScheme$State[] values() -> values
    51:51:org.apache.http.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
    51:51:void <init>(java.lang.String,int) -> <init>
    51:57:void <clinit>() -> <clinit>
org.apache.http.impl.auth.NTLMSchemeFactory -> org.apache.http.impl.auth.NTLMSchemeFactory:
    46:46:void <init>() -> <init>
    49:49:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    53:53:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.NegotiateScheme -> org.apache.http.impl.auth.NegotiateScheme:
    org.apache.commons.logging.Log log -> log
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    53:67:void <init>(org.apache.http.impl.auth.SpnegoTokenGenerator,boolean) -> <init>
    70:71:void <init>(org.apache.http.impl.auth.SpnegoTokenGenerator) -> <init>
    74:75:void <init>() -> <init>
    83:83:java.lang.String getSchemeName() -> getSchemeName
    90:90:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    111:111:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    131:166:byte[] generateToken(byte[],java.lang.String) -> generateToken
    180:181:java.lang.String getParameter(java.lang.String) -> getParameter
    191:191:java.lang.String getRealm() -> getRealm
    201:201:boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.NegotiateSchemeFactory -> org.apache.http.impl.auth.NegotiateSchemeFactory:
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    48:51:void <init>(org.apache.http.impl.auth.SpnegoTokenGenerator,boolean) -> <init>
    54:55:void <init>(org.apache.http.impl.auth.SpnegoTokenGenerator) -> <init>
    58:59:void <init>() -> <init>
    62:62:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    66:66:boolean isStripPort() -> isStripPort
    70:70:org.apache.http.impl.auth.SpnegoTokenGenerator getSpengoGenerator() -> getSpengoGenerator
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    java.nio.charset.Charset credentialsCharset -> credentialsCharset
    70:73:void <init>(org.apache.http.auth.ChallengeState) -> <init>
    79:82:void <init>(java.nio.charset.Charset) -> <init>
    85:86:void <init>() -> <init>
    93:93:java.nio.charset.Charset getCredentialsCharset() -> getCredentialsCharset
    97:101:java.lang.String getCredentialsCharset(org.apache.http.HttpRequest) -> getCredentialsCharset
    107:117:void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    125:125:java.util.Map getParameters() -> getParameters
    136:139:java.lang.String getParameter(java.lang.String) -> getParameter
    148:148:java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.SPNegoScheme -> org.apache.http.impl.auth.SPNegoScheme:
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    51:52:void <init>(boolean) -> <init>
    55:56:void <init>() -> <init>
    59:59:java.lang.String getSchemeName() -> getSchemeName
    79:79:org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    84:84:byte[] generateToken(byte[],java.lang.String) -> generateToken
    94:95:java.lang.String getParameter(java.lang.String) -> getParameter
    105:105:java.lang.String getRealm() -> getRealm
    114:114:boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.SPNegoSchemeFactory -> org.apache.http.impl.auth.SPNegoSchemeFactory:
    boolean stripPort -> stripPort
    49:51:void <init>(boolean) -> <init>
    54:55:void <init>() -> <init>
    58:58:boolean isStripPort() -> isStripPort
    62:62:org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    66:66:org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.SpnegoTokenGenerator -> org.apache.http.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
    56:57:void <init>(java.lang.String) -> <init>
    67:68:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.impl.client.AIMDBackoffManager -> org.apache.http.impl.client.AIMDBackoffManager:
    org.apache.http.pool.ConnPoolControl connPerRoute -> connPerRoute
    org.apache.http.impl.client.Clock clock -> clock
    java.util.Map lastRouteProbes -> lastRouteProbes
    java.util.Map lastRouteBackoffs -> lastRouteBackoffs
    long coolDown -> coolDown
    double backoffFactor -> backoffFactor
    int cap -> cap
    75:76:void <init>(org.apache.http.pool.ConnPoolControl) -> <init>
    63:83:void <init>(org.apache.http.pool.ConnPoolControl,org.apache.http.impl.client.Clock) -> <init>
    86:96:void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    99:102:int getBackedOffPoolSize(int) -> getBackedOffPoolSize
    106:118:void probe(org.apache.http.conn.routing.HttpRoute) -> probe
    121:125:java.lang.Long getLastUpdate(java.util.Map,org.apache.http.conn.routing.HttpRoute) -> getLastUpdate
    138:140:void setBackoffFactor(double) -> setBackoffFactor
    150:152:void setCooldownMillis(long) -> setCooldownMillis
    160:162:void setPerHostConnectionCap(int) -> setPerHostConnectionCap
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    67:79:void <init>() -> <init>
    84:111:java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    120:120:java.util.List getAuthPreferences() -> getAuthPreferences
    135:135:java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
    143:186:org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
    69:69:void <clinit>() -> <clinit>
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.params.HttpParams defaultParams -> defaultParams
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    org.apache.http.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    org.apache.http.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    org.apache.http.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credsProvider -> credsProvider
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    185:274:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams) -> <init>
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    284:300:org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    305:332:org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    337:353:org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    358:377:org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    381:381:org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    385:385:org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    389:389:org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    393:393:org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    401:401:org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    405:405:org.apache.http.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    413:413:org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    417:417:org.apache.http.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    425:425:org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    429:429:org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    433:433:org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    437:437:org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    441:441:org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    446:449:org.apache.http.params.HttpParams getParams() -> getParams
    459:460:void setParams(org.apache.http.params.HttpParams) -> setParams
    464:467:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    472:475:org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    480:483:org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    487:488:void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    491:491:org.apache.http.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    495:496:void setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    499:502:org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    506:506:org.apache.http.client.BackoffManager getBackoffManager() -> getBackoffManager
    510:511:void setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    514:515:void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    518:521:org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    526:527:void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    531:534:org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    539:540:void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    544:547:org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    551:552:void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    559:559:org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    567:568:void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    574:577:org.apache.http.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    584:585:void setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    592:592:org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    600:601:void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    607:610:org.apache.http.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    617:618:void setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    625:625:org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    633:634:void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    640:643:org.apache.http.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    650:651:void setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    654:657:org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    661:662:void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    665:668:org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    672:673:void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    676:679:org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    683:684:void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    687:690:org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    694:695:void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    698:701:org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    705:721:org.apache.http.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    725:725:int getResponseInterceptorCount() -> getResponseInterceptorCount
    729:729:org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    733:733:org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    737:737:int getRequestInterceptorCount() -> getRequestInterceptorCount
    741:743:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    746:748:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    751:753:void clearResponseInterceptors() -> clearResponseInterceptors
    756:758:void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    761:763:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    766:768:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    771:773:void clearRequestInterceptors() -> clearRequestInterceptors
    776:778:void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    785:867:org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    888:888:org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    920:920:org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    953:953:org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    985:985:org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    991:992:void close() -> close
org.apache.http.impl.client.AuthenticationStrategyAdaptor -> org.apache.http.impl.client.AuthenticationStrategyAdaptor:
    org.apache.commons.logging.Log log -> log
    org.apache.http.client.AuthenticationHandler handler -> handler
    63:70:void <init>(org.apache.http.client.AuthenticationHandler) -> <init>
    76:76:boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    83:83:java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    91:127:java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    132:144:void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    148:157:void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    160:164:boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    169:169:org.apache.http.client.AuthenticationHandler getHandler() -> getHandler
org.apache.http.impl.client.AuthenticationStrategyImpl -> org.apache.http.impl.client.AuthenticationStrategyImpl:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    int challengeCode -> challengeCode
    java.lang.String headerName -> headerName
    68:84:void <init>(int,java.lang.String) -> <init>
    90:92:boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    99:128:java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    138:195:java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    200:218:void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    221:225:boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    231:243:void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    70:70:void <clinit>() -> <clinit>
org.apache.http.impl.client.AutoRetryHttpClient -> org.apache.http.impl.client.AutoRetryHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    org.apache.commons.logging.Log log -> log
    66:75:void <init>(org.apache.http.client.HttpClient,org.apache.http.client.ServiceUnavailableRetryStrategy) -> <init>
    83:84:void <init>() -> <init>
    95:96:void <init>(org.apache.http.client.ServiceUnavailableRetryStrategy) -> <init>
    107:108:void <init>(org.apache.http.client.HttpClient) -> <init>
    112:113:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    118:118:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    124:125:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    129:130:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    135:138:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    143:143:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    149:150:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    155:178:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    183:183:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    187:187:org.apache.http.params.HttpParams getParams() -> getParams
org.apache.http.impl.client.BasicAuthCache -> org.apache.http.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    57:61:void <init>(org.apache.http.conn.SchemePortResolver) -> <init>
    64:65:void <init>() -> <init>
    68:77:org.apache.http.HttpHost getKey(org.apache.http.HttpHost) -> getKey
    82:84:void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    87:88:org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    92:94:void remove(org.apache.http.HttpHost) -> remove
    97:98:void clear() -> clear
    102:102:java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    57:59:void <init>() -> <init>
    72:79:void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    92:97:void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    107:107:java.util.List getCookies() -> getCookies
    119:129:boolean clearExpired(java.util.Date) -> clearExpired
    136:137:void clear() -> clear
    141:141:java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    52:54:void <init>() -> <init>
    59:61:void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    75:92:org.apache.http.auth.Credentials matchCredentials(java.util.Map,org.apache.http.auth.AuthScope) -> matchCredentials
    96:97:org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    101:102:void clear() -> clear
    106:106:java.lang.String toString() -> toString
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    53:53:void <init>() -> <init>
    63:70:java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    52:52:java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    100:105:void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams) -> <init>
    116:120:void <init>(org.apache.http.impl.client.ClientParamsStack) -> <init>
    139:143:void <init>(org.apache.http.impl.client.ClientParamsStack,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams) -> <init>
    152:152:org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    161:161:org.apache.http.params.HttpParams getClientParams() -> getClientParams
    170:170:org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    179:179:org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    193:209:java.lang.Object getParameter(java.lang.String) -> getParameter
    228:228:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    246:246:boolean removeParameter(java.lang.String) -> removeParameter
    265:265:org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.Clock -> org.apache.http.impl.client.Clock:
    long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.CloseableHttpClient -> org.apache.http.impl.client.CloseableHttpClient:
    org.apache.commons.logging.Log log -> log
    58:60:void <init>() -> <init>
    org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    72:72:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    81:82:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    88:98:org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest) -> determineTarget
    106:106:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    115:115:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    136:136:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    159:160:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    185:185:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    212:241:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    57:57:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    57:57:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    57:57:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    57:57:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
org.apache.http.impl.client.CloseableHttpResponseProxy -> org.apache.http.impl.client.CloseableHttpResponseProxy:
    org.apache.http.HttpResponse original -> original
    51:53:void <init>(org.apache.http.HttpResponse) -> <init>
    56:58:void close() -> close
    62:74:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    81:81:org.apache.http.client.methods.CloseableHttpResponse newProxy(org.apache.http.HttpResponse) -> newProxy
org.apache.http.impl.client.ContentEncodingHttpClient -> org.apache.http.impl.client.ContentEncodingHttpClient:
    63:64:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams) -> <init>
    70:71:void <init>(org.apache.http.params.HttpParams) -> <init>
    77:78:void <init>() -> <init>
    85:90:org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DecompressingHttpClient -> org.apache.http.impl.client.DecompressingHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.HttpRequestInterceptor acceptEncodingInterceptor -> acceptEncodingInterceptor
    org.apache.http.HttpResponseInterceptor contentEncodingInterceptor -> contentEncodingInterceptor
    89:90:void <init>() -> <init>
    99:100:void <init>(org.apache.http.client.HttpClient) -> <init>
    104:108:void <init>(org.apache.http.client.HttpClient,org.apache.http.HttpRequestInterceptor,org.apache.http.HttpResponseInterceptor) -> <init>
    111:111:org.apache.http.params.HttpParams getParams() -> getParams
    115:115:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    120:120:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    129:129:org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    133:134:org.apache.http.HttpHost getHttpHost(org.apache.http.client.methods.HttpUriRequest) -> getHttpHost
    139:139:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    144:144:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    150:178:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    185:185:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    191:191:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    197:197:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    203:211:java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.DefaultBackoffStrategy -> org.apache.http.impl.client.DefaultBackoffStrategy:
    43:43:void <init>() -> <init>
    46:46:boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    51:51:boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy INSTANCE -> INSTANCE
    49:49:void <init>() -> <init>
    54:68:long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
    51:51:void <clinit>() -> <clinit>
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    127:128:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams) -> <init>
    136:137:void <init>(org.apache.http.conn.ClientConnectionManager) -> <init>
    141:142:void <init>(org.apache.http.params.HttpParams) -> <init>
    146:147:void <init>() -> <init>
    157:159:org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    179:184:void setDefaultHttpParams(org.apache.http.params.HttpParams) -> setDefaultHttpParams
    206:222:org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    org.apache.http.impl.client.DefaultHttpRequestRetryHandler INSTANCE -> INSTANCE
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    java.util.Set nonRetriableClasses -> nonRetriableClasses
    80:87:void <init>(int,boolean,java.util.Collection) -> <init>
    103:108:void <init>(int,boolean) -> <init>
    121:122:void <init>() -> <init>
    131:164:boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    172:172:boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    179:179:int getRetryCount() -> getRetryCount
    186:186:boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
    196:200:boolean requestIsAborted(org.apache.http.HttpRequest) -> requestIsAborted
    58:58:void <clinit>() -> <clinit>
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    56:57:void <init>() -> <init>
    62:64:boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    70:72:java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    81:86:java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    65:71:void <init>() -> <init>
    76:91:boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    98:177:java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRedirectStrategy -> org.apache.http.impl.client.DefaultRedirectStrategy:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    org.apache.http.impl.client.DefaultRedirectStrategy INSTANCE -> INSTANCE
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    75:95:void <init>() -> <init>
    101:116:boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    124:178:java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    186:197:java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    205:210:boolean isRedirectable(java.lang.String) -> isRedirectable
    217:228:org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    83:88:void <clinit>() -> <clinit>
org.apache.http.impl.client.DefaultRedirectStrategyAdaptor -> org.apache.http.impl.client.DefaultRedirectStrategyAdaptor:
    org.apache.http.client.RedirectHandler handler -> handler
    53:55:void <init>(org.apache.http.client.RedirectHandler) -> <init>
    61:61:boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    68:73:org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    78:78:org.apache.http.client.RedirectHandler getHandler() -> getHandler
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams params -> params
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.auth.AuthState targetAuthState -> targetAuthState
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    org.apache.http.HttpHost virtualHost -> virtualHost
    218:225:void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> <init>
    243:250:void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> <init>
    268:321:void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> <init>
    326:330:org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) -> wrapRequest
    341:364:void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    372:590:org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    600:636:void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryConnect
    643:707:org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryExecute
    720:725:void releaseConnection() -> releaseConnection
    748:748:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    767:816:void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    842:917:boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    953:953:boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    973:993:org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    1015:1099:org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
    1109:1128:void abortConnection() -> abortConnection
org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy -> org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy:
    int maxRetries -> maxRetries
    long retryInterval -> retryInterval
    60:65:void <init>(int,int) -> <init>
    68:69:void <init>() -> <init>
    72:72:boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    77:77:long getRetryInterval() -> getRetryInterval
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    56:57:void <init>() -> <init>
    62:64:boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    70:72:java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    81:86:java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    org.apache.http.impl.client.DefaultUserTokenHandler INSTANCE -> INSTANCE
    58:58:void <init>() -> <init>
    64:87:java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    91:98:java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState) -> getAuthPrincipal
    60:60:void <clinit>() -> <clinit>
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    boolean consumed -> consumed
    64:66:void <init>(org.apache.http.HttpEntityEnclosingRequest) -> <init>
    69:69:org.apache.http.HttpEntity getEntity() -> getEntity
    73:75:void setEntity(org.apache.http.HttpEntity) -> setEntity
    78:79:boolean expectContinue() -> expectContinue
    84:84:boolean isRepeatable() -> isRepeatable
    56:56:boolean access$002(org.apache.http.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    org.apache.http.impl.client.EntityEnclosingRequestWrapper this$0 -> this$0
    89:91:void <init>(org.apache.http.impl.client.EntityEnclosingRequestWrapper,org.apache.http.HttpEntity) -> <init>
    95:97:void consumeContent() -> consumeContent
    101:102:java.io.InputStream getContent() -> getContent
    107:109:void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.impl.client.FutureRequestExecutionMetrics -> org.apache.http.impl.client.FutureRequestExecutionMetrics:
    java.util.concurrent.atomic.AtomicLong activeConnections -> activeConnections
    java.util.concurrent.atomic.AtomicLong scheduledConnections -> scheduledConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter successfulConnections -> successfulConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter failedConnections -> failedConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter requests -> requests
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter tasks -> tasks
    36:44:void <init>() -> <init>
    47:47:java.util.concurrent.atomic.AtomicLong getActiveConnections() -> getActiveConnections
    51:51:java.util.concurrent.atomic.AtomicLong getScheduledConnections() -> getScheduledConnections
    55:55:org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getSuccessfulConnections() -> getSuccessfulConnections
    59:59:org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getFailedConnections() -> getFailedConnections
    63:63:org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getRequests() -> getRequests
    67:67:org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getTasks() -> getTasks
    71:71:long getActiveConnectionCount() -> getActiveConnectionCount
    75:75:long getScheduledConnectionCount() -> getScheduledConnectionCount
    79:79:long getSuccessfulConnectionCount() -> getSuccessfulConnectionCount
    83:83:long getSuccessfulConnectionAverageDuration() -> getSuccessfulConnectionAverageDuration
    87:87:long getFailedConnectionCount() -> getFailedConnectionCount
    91:91:long getFailedConnectionAverageDuration() -> getFailedConnectionAverageDuration
    95:95:long getRequestCount() -> getRequestCount
    99:99:long getRequestAverageDuration() -> getRequestAverageDuration
    103:103:long getTaskCount() -> getTaskCount
    107:107:long getTaskAverageDuration() -> getTaskAverageDuration
    112:120:java.lang.String toString() -> toString
org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter -> org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter:
    java.util.concurrent.atomic.AtomicLong count -> count
    java.util.concurrent.atomic.AtomicLong cumulativeDuration -> cumulativeDuration
    126:129:void <init>() -> <init>
    132:134:void increment(long) -> increment
    137:137:long count() -> count
    141:142:long averageDuration() -> averageDuration
    147:151:java.lang.String toString() -> toString
org.apache.http.impl.client.FutureRequestExecutionService -> org.apache.http.impl.client.FutureRequestExecutionService:
    org.apache.http.client.HttpClient httpclient -> httpclient
    java.util.concurrent.ExecutorService executorService -> executorService
    org.apache.http.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    50:71:void <init>(org.apache.http.client.HttpClient,java.util.concurrent.ExecutorService) -> <init>
    89:89:org.apache.http.impl.client.HttpRequestFutureTask execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext,org.apache.http.client.ResponseHandler) -> execute
    114:124:org.apache.http.impl.client.HttpRequestFutureTask execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext,org.apache.http.client.ResponseHandler,org.apache.http.concurrent.FutureCallback) -> execute
    132:132:org.apache.http.impl.client.FutureRequestExecutionMetrics metrics() -> metrics
    136:141:void close() -> close
org.apache.http.impl.client.HttpAuthenticator -> org.apache.http.impl.client.HttpAuthenticator:
    45:46:void <init>(org.apache.commons.logging.Log) -> <init>
    49:50:void <init>() -> <init>
    58:58:boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.impl.client.HttpClientBuilder -> org.apache.http.impl.client.HttpClientBuilder:
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    org.apache.http.conn.socket.LayeredConnectionSocketFactory sslSocketFactory -> sslSocketFactory
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.protocol.HttpProcessor httpprocessor -> httpprocessor
    java.util.LinkedList requestFirst -> requestFirst
    java.util.LinkedList requestLast -> requestLast
    java.util.LinkedList responseFirst -> responseFirst
    java.util.LinkedList responseLast -> responseLast
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.client.ServiceUnavailableRetryStrategy serviceUnavailStrategy -> serviceUnavailStrategy
    org.apache.http.config.Lookup authSchemeRegistry -> authSchemeRegistry
    org.apache.http.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credentialsProvider -> credentialsProvider
    java.lang.String userAgent -> userAgent
    org.apache.http.HttpHost proxy -> proxy
    java.util.Collection defaultHeaders -> defaultHeaders
    org.apache.http.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    org.apache.http.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    org.apache.http.client.config.RequestConfig defaultRequestConfig -> defaultRequestConfig
    boolean systemProperties -> systemProperties
    boolean redirectHandlingDisabled -> redirectHandlingDisabled
    boolean automaticRetriesDisabled -> automaticRetriesDisabled
    boolean contentCompressionDisabled -> contentCompressionDisabled
    boolean cookieManagementDisabled -> cookieManagementDisabled
    boolean authCachingDisabled -> authCachingDisabled
    boolean connectionStateDisabled -> connectionStateDisabled
    int maxConnTotal -> maxConnTotal
    int maxConnPerRoute -> maxConnPerRoute
    java.util.List closeables -> closeables
    java.lang.String DEFAULT_USER_AGENT -> DEFAULT_USER_AGENT
    212:212:org.apache.http.impl.client.HttpClientBuilder create() -> create
    197:217:void <init>() -> <init>
    223:224:org.apache.http.impl.client.HttpClientBuilder setRequestExecutor(org.apache.http.protocol.HttpRequestExecutor) -> setRequestExecutor
    235:236:org.apache.http.impl.client.HttpClientBuilder setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    248:249:org.apache.http.impl.client.HttpClientBuilder setSslcontext(javax.net.ssl.SSLContext) -> setSslcontext
    260:261:org.apache.http.impl.client.HttpClientBuilder setSSLSocketFactory(org.apache.http.conn.socket.LayeredConnectionSocketFactory) -> setSSLSocketFactory
    271:272:org.apache.http.impl.client.HttpClientBuilder setMaxConnTotal(int) -> setMaxConnTotal
    282:283:org.apache.http.impl.client.HttpClientBuilder setMaxConnPerRoute(int) -> setMaxConnPerRoute
    293:294:org.apache.http.impl.client.HttpClientBuilder setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    304:305:org.apache.http.impl.client.HttpClientBuilder setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    313:314:org.apache.http.impl.client.HttpClientBuilder setConnectionManager(org.apache.http.conn.HttpClientConnectionManager) -> setConnectionManager
    322:323:org.apache.http.impl.client.HttpClientBuilder setConnectionReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnectionReuseStrategy
    331:332:org.apache.http.impl.client.HttpClientBuilder setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    341:342:org.apache.http.impl.client.HttpClientBuilder setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    351:352:org.apache.http.impl.client.HttpClientBuilder setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    362:363:org.apache.http.impl.client.HttpClientBuilder setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    370:371:org.apache.http.impl.client.HttpClientBuilder disableConnectionState() -> disableConnectionState
    379:380:org.apache.http.impl.client.HttpClientBuilder setSchemePortResolver(org.apache.http.conn.SchemePortResolver) -> setSchemePortResolver
    390:391:org.apache.http.impl.client.HttpClientBuilder setUserAgent(java.lang.String) -> setUserAgent
    401:402:org.apache.http.impl.client.HttpClientBuilder setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    412:419:org.apache.http.impl.client.HttpClientBuilder addInterceptorFirst(org.apache.http.HttpResponseInterceptor) -> addInterceptorFirst
    429:436:org.apache.http.impl.client.HttpClientBuilder addInterceptorLast(org.apache.http.HttpResponseInterceptor) -> addInterceptorLast
    446:453:org.apache.http.impl.client.HttpClientBuilder addInterceptorFirst(org.apache.http.HttpRequestInterceptor) -> addInterceptorFirst
    463:470:org.apache.http.impl.client.HttpClientBuilder addInterceptorLast(org.apache.http.HttpRequestInterceptor) -> addInterceptorLast
    480:481:org.apache.http.impl.client.HttpClientBuilder disableCookieManagement() -> disableCookieManagement
    491:492:org.apache.http.impl.client.HttpClientBuilder disableContentCompression() -> disableContentCompression
    502:503:org.apache.http.impl.client.HttpClientBuilder disableAuthCaching() -> disableAuthCaching
    510:511:org.apache.http.impl.client.HttpClientBuilder setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    521:522:org.apache.http.impl.client.HttpClientBuilder setRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setRetryHandler
    529:530:org.apache.http.impl.client.HttpClientBuilder disableAutomaticRetries() -> disableAutomaticRetries
    541:542:org.apache.http.impl.client.HttpClientBuilder setProxy(org.apache.http.HttpHost) -> setProxy
    552:553:org.apache.http.impl.client.HttpClientBuilder setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    560:561:org.apache.http.impl.client.HttpClientBuilder setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    568:569:org.apache.http.impl.client.HttpClientBuilder disableRedirectHandling() -> disableRedirectHandling
    577:578:org.apache.http.impl.client.HttpClientBuilder setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    585:586:org.apache.http.impl.client.HttpClientBuilder setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    594:595:org.apache.http.impl.client.HttpClientBuilder setServiceUnavailableRetryStrategy(org.apache.http.client.ServiceUnavailableRetryStrategy) -> setServiceUnavailableRetryStrategy
    603:604:org.apache.http.impl.client.HttpClientBuilder setDefaultCookieStore(org.apache.http.client.CookieStore) -> setDefaultCookieStore
    614:615:org.apache.http.impl.client.HttpClientBuilder setDefaultCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setDefaultCredentialsProvider
    625:626:org.apache.http.impl.client.HttpClientBuilder setDefaultAuthSchemeRegistry(org.apache.http.config.Lookup) -> setDefaultAuthSchemeRegistry
    636:637:org.apache.http.impl.client.HttpClientBuilder setDefaultCookieSpecRegistry(org.apache.http.config.Lookup) -> setDefaultCookieSpecRegistry
    646:647:org.apache.http.impl.client.HttpClientBuilder setDefaultRequestConfig(org.apache.http.client.config.RequestConfig) -> setDefaultRequestConfig
    655:656:org.apache.http.impl.client.HttpClientBuilder useSystemProperties() -> useSystemProperties
    663:663:org.apache.http.impl.execchain.ClientExecChain decorateMainExec(org.apache.http.impl.execchain.ClientExecChain) -> decorateMainExec
    670:670:org.apache.http.impl.execchain.ClientExecChain decorateProtocolExec(org.apache.http.impl.execchain.ClientExecChain) -> decorateProtocolExec
    677:684:void addCloseable(java.io.Closeable) -> addCloseable
    687:690:java.lang.String[] split(java.lang.String) -> split
    695:943:org.apache.http.impl.client.CloseableHttpClient build() -> build
    204:209:void <clinit>() -> <clinit>
org.apache.http.impl.client.HttpClients -> org.apache.http.impl.client.HttpClients:
    42:43:void <init>() -> <init>
    50:50:org.apache.http.impl.client.HttpClientBuilder custom() -> custom
    58:58:org.apache.http.impl.client.CloseableHttpClient createDefault() -> createDefault
    66:66:org.apache.http.impl.client.CloseableHttpClient createSystem() -> createSystem
    74:74:org.apache.http.impl.client.CloseableHttpClient createMinimal() -> createMinimal
    82:82:org.apache.http.impl.client.CloseableHttpClient createMinimal(org.apache.http.conn.HttpClientConnectionManager) -> createMinimal
org.apache.http.impl.client.HttpRequestFutureTask -> org.apache.http.impl.client.HttpRequestFutureTask:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.impl.client.HttpRequestTaskCallable callable -> callable
    47:50:void <init>(org.apache.http.client.methods.HttpUriRequest,org.apache.http.impl.client.HttpRequestTaskCallable) -> <init>
    58:62:boolean cancel(boolean) -> cancel
    69:69:long scheduledTime() -> scheduledTime
    76:76:long startedTime() -> startedTime
    83:86:long endedTime() -> endedTime
    95:98:long requestDuration() -> requestDuration
    106:109:long taskDuration() -> taskDuration
    115:115:java.lang.String toString() -> toString
org.apache.http.impl.client.HttpRequestTaskCallable -> org.apache.http.impl.client.HttpRequestTaskCallable:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.client.HttpClient httpclient -> httpclient
    java.util.concurrent.atomic.AtomicBoolean cancelled -> cancelled
    long scheduled -> scheduled
    long started -> started
    long ended -> ended
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.ResponseHandler responseHandler -> responseHandler
    org.apache.http.concurrent.FutureCallback callback -> callback
    org.apache.http.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    42:67:void <init>(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext,org.apache.http.client.ResponseHandler,org.apache.http.concurrent.FutureCallback,org.apache.http.impl.client.FutureRequestExecutionMetrics) -> <init>
    70:70:long getScheduled() -> getScheduled
    74:74:long getStarted() -> getStarted
    78:78:long getEnded() -> getEnded
    82:109:java.lang.Object call() -> call
    114:118:void cancel() -> cancel
org.apache.http.impl.client.InternalHttpClient -> org.apache.http.impl.client.InternalHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain execChain -> execChain
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    org.apache.http.config.Lookup authSchemeRegistry -> authSchemeRegistry
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credentialsProvider -> credentialsProvider
    org.apache.http.client.config.RequestConfig defaultConfig -> defaultConfig
    java.util.List closeables -> closeables
    80:115:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.config.Lookup,org.apache.http.config.Lookup,org.apache.http.client.CookieStore,org.apache.http.client.CredentialsProvider,org.apache.http.client.config.RequestConfig,java.util.List) -> <init>
    121:126:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    130:151:void setupContext(org.apache.http.client.protocol.HttpClientContext) -> setupContext
    158:188:org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    193:203:void close() -> close
    206:206:org.apache.http.params.HttpParams getParams() -> getParams
    211:211:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    78:78:org.apache.http.conn.HttpClientConnectionManager access$000(org.apache.http.impl.client.InternalHttpClient) -> access$000
org.apache.http.impl.client.InternalHttpClient$1 -> org.apache.http.impl.client.InternalHttpClient$1:
    org.apache.http.impl.client.InternalHttpClient this$0 -> this$0
    211:211:void <init>(org.apache.http.impl.client.InternalHttpClient) -> <init>
    214:215:void shutdown() -> shutdown
    219:219:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    225:225:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    229:229:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    233:234:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    237:238:void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.client.LaxRedirectStrategy -> org.apache.http.impl.client.LaxRedirectStrategy:
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    44:44:void <init>() -> <init>
    57:62:boolean isRedirectable(java.lang.String) -> isRedirectable
    49:49:void <clinit>() -> <clinit>
org.apache.http.impl.client.MinimalHttpClient -> org.apache.http.impl.client.MinimalHttpClient:
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.impl.execchain.MinimalClientExec requestExecutor -> requestExecutor
    org.apache.http.params.HttpParams params -> params
    74:82:void <init>(org.apache.http.conn.HttpClientConnectionManager) -> <init>
    89:109:org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    114:114:org.apache.http.params.HttpParams getParams() -> getParams
    118:119:void close() -> close
    123:123:org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    66:66:org.apache.http.conn.HttpClientConnectionManager access$000(org.apache.http.impl.client.MinimalHttpClient) -> access$000
org.apache.http.impl.client.MinimalHttpClient$1 -> org.apache.http.impl.client.MinimalHttpClient$1:
    org.apache.http.impl.client.MinimalHttpClient this$0 -> this$0
    123:123:void <init>(org.apache.http.impl.client.MinimalHttpClient) -> <init>
    126:127:void shutdown() -> shutdown
    131:131:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    137:137:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    141:141:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    145:146:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    149:150:void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.client.NoopUserTokenHandler -> org.apache.http.impl.client.NoopUserTokenHandler:
    org.apache.http.impl.client.NoopUserTokenHandler INSTANCE -> INSTANCE
    39:39:void <init>() -> <init>
    44:44:java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    41:41:void <clinit>() -> <clinit>
org.apache.http.impl.client.NullBackoffStrategy -> org.apache.http.impl.client.NullBackoffStrategy:
    38:38:void <init>() -> <init>
    41:41:boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    45:45:boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.ProxyAuthenticationStrategy -> org.apache.http.impl.client.ProxyAuthenticationStrategy:
    org.apache.http.impl.client.ProxyAuthenticationStrategy INSTANCE -> INSTANCE
    49:50:void <init>() -> <init>
    54:54:java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    43:43:void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    43:43:void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    43:43:java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    43:43:java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    43:43:boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    46:46:void <clinit>() -> <clinit>
org.apache.http.impl.client.ProxyClient -> org.apache.http.impl.client.ProxyClient:
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.config.ConnectionConfig connectionConfig -> connectionConfig
    org.apache.http.client.config.RequestConfig requestConfig -> requestConfig
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.auth.HttpAuthenticator authenticator -> authenticator
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry -> authSchemeRegistry
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    105:122:void <init>(org.apache.http.conn.HttpConnectionFactory,org.apache.http.config.ConnectionConfig,org.apache.http.client.config.RequestConfig) -> <init>
    129:132:void <init>(org.apache.http.params.HttpParams) -> <init>
    138:139:void <init>(org.apache.http.client.config.RequestConfig) -> <init>
    142:143:void <init>() -> <init>
    150:150:org.apache.http.params.HttpParams getParams() -> getParams
    158:158:org.apache.http.auth.AuthSchemeRegistry getAuthSchemeRegistry() -> getAuthSchemeRegistry
    165:251:java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials) -> tunnel
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    53:56:void <init>() -> <init>
    62:62:boolean contains(java.net.URI) -> contains
    69:71:void add(java.net.URI) -> add
    77:87:boolean remove(java.net.URI) -> remove
    98:98:java.util.List getAll() -> getAll
    114:114:java.net.URI get(int) -> get
    127:127:int size() -> size
    153:159:java.lang.Object set(int,java.lang.Object) -> set
    185:187:void add(int,java.lang.Object) -> add
    204:209:java.net.URI remove(int) -> remove
    224:224:boolean contains(java.lang.Object) -> contains
    46:46:java.lang.Object remove(int) -> remove
    46:46:java.lang.Object get(int) -> get
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    int execCount -> execCount
    68:90:void <init>(org.apache.http.HttpRequest) -> <init>
    94:96:void resetHeaders() -> resetHeaders
    99:99:java.lang.String getMethod() -> getMethod
    103:105:void setMethod(java.lang.String) -> setMethod
    108:111:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    115:116:void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    120:120:java.net.URI getURI() -> getURI
    124:125:void setURI(java.net.URI) -> setURI
    128:137:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    141:141:void abort() -> abort
    145:145:boolean isAborted() -> isAborted
    149:149:org.apache.http.HttpRequest getOriginal() -> getOriginal
    153:153:boolean isRepeatable() -> isRepeatable
    157:157:int getExecCount() -> getExecCount
    161:162:void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    54:57:void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> <init>
    60:60:org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    64:64:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.StandardHttpRequestRetryHandler -> org.apache.http.impl.client.StandardHttpRequestRetryHandler:
    java.util.Map idempotentMethods -> idempotentMethods
    56:64:void <init>(int,boolean) -> <init>
    70:71:void <init>() -> <init>
    75:77:boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
org.apache.http.impl.client.SystemClock -> org.apache.http.impl.client.SystemClock:
    34:34:void <init>() -> <init>
    37:37:long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.SystemDefaultCredentialsProvider -> org.apache.http.impl.client.SystemDefaultCredentialsProvider:
    java.util.Map SCHEME_MAP -> SCHEME_MAP
    org.apache.http.impl.client.BasicCredentialsProvider internal -> internal
    64:68:java.lang.String translateScheme(java.lang.String) -> translateScheme
    77:79:void <init>() -> <init>
    82:83:void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    86:104:org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    108:109:void clear() -> clear
    55:61:void <clinit>() -> <clinit>
org.apache.http.impl.client.SystemDefaultHttpClient -> org.apache.http.impl.client.SystemDefaultHttpClient:
    112:113:void <init>(org.apache.http.params.HttpParams) -> <init>
    116:117:void <init>() -> <init>
    121:130:org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    135:135:org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    141:145:org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
org.apache.http.impl.client.TargetAuthenticationStrategy -> org.apache.http.impl.client.TargetAuthenticationStrategy:
    org.apache.http.impl.client.TargetAuthenticationStrategy INSTANCE -> INSTANCE
    49:50:void <init>() -> <init>
    54:54:java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    43:43:void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    43:43:void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    43:43:java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    43:43:java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    43:43:boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    46:46:void <clinit>() -> <clinit>
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    50:52:void <init>(java.lang.String,org.apache.http.HttpResponse) -> <init>
    55:55:org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    103:109:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.OperatedClientConnection) -> <init>
    116:118:void detach() -> detach
    121:121:org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    125:125:org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    133:136:void assertNotAborted() -> assertNotAborted
    143:143:boolean isReleased() -> isReleased
    154:157:void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    160:165:boolean isOpen() -> isOpen
    169:177:boolean isStale() -> isStale
    181:184:void setSocketTimeout(int) -> setSocketTimeout
    187:189:int getSocketTimeout() -> getSocketTimeout
    193:195:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    199:202:void flush() -> flush
    205:207:boolean isResponseAvailable(int) -> isResponseAvailable
    212:216:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    220:223:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    228:232:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    236:240:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    243:245:java.net.InetAddress getLocalAddress() -> getLocalAddress
    249:251:int getLocalPort() -> getLocalPort
    255:257:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    261:263:int getRemotePort() -> getRemotePort
    267:269:boolean isSecure() -> isSecure
    273:273:void bind(java.net.Socket) -> bind
    277:282:java.net.Socket getSocket() -> getSocket
    286:297:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    301:302:void markReusable() -> markReusable
    305:306:void unmarkReusable() -> unmarkReusable
    309:309:boolean isMarkedReusable() -> isMarkedReusable
    313:318:void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    321:326:void releaseConnection() -> releaseConnection
    329:339:void abortConnection() -> abortConnection
    342:347:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    352:357:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    362:367:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    91:97:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute) -> <init>
    105:105:java.lang.Object getState() -> getState
    114:115:void setState(java.lang.Object) -> setState
    130:164:void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    180:188:void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    208:216:void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    230:248:void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    257:259:void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    66:68:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.impl.conn.AbstractPoolEntry) -> <init>
    71:71:java.lang.String getId() -> getId
    83:83:org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    95:98:void assertValid(org.apache.http.impl.conn.AbstractPoolEntry) -> assertValid
    105:108:void assertAttached() -> assertAttached
    116:118:void detach() -> detach
    121:123:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    129:132:void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    136:139:void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    143:146:void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    150:153:void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    156:165:void close() -> close
    168:177:void shutdown() -> shutdown
    180:182:java.lang.Object getState() -> getState
    186:189:void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.BasicClientConnectionManager -> org.apache.http.impl.conn.BasicClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.ManagedClientConnectionImpl conn -> conn
    boolean shutdown -> shutdown
    71:107:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    110:111:void <init>() -> <init>
    116:120:void finalize() -> finalize
    123:123:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    127:127:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    134:134:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    150:151:void assertNotShutdown() -> assertNotShutdown
    154:177:org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    182:188:void shutdownConnection(org.apache.http.HttpClientConnection) -> shutdownConnection
    191:233:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    236:244:void closeExpiredConnections() -> closeExpiredConnections
    247:260:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    263:274:void shutdown() -> shutdown
    73:73:void <clinit>() -> <clinit>
org.apache.http.impl.conn.BasicClientConnectionManager$1 -> org.apache.http.impl.conn.BasicClientConnectionManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.BasicClientConnectionManager this$0 -> this$0
    134:134:void <init>(org.apache.http.impl.conn.BasicClientConnectionManager,org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> <init>
    138:138:void abortRequest() -> abortRequest
    142:142:org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.BasicHttpClientConnectionManager -> org.apache.http.impl.conn.BasicHttpClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.conn.ManagedHttpClientConnection conn -> conn
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    long updated -> updated
    long expiry -> expiry
    boolean leased -> leased
    org.apache.http.config.SocketConfig socketConfig -> socketConfig
    org.apache.http.config.ConnectionConfig connConfig -> connConfig
    boolean shutdown -> shutdown
    114:114:org.apache.http.config.Registry getDefaultRegistry() -> getDefaultRegistry
    81:132:void <init>(org.apache.http.config.Lookup,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver) -> <init>
    137:138:void <init>(org.apache.http.config.Lookup,org.apache.http.conn.HttpConnectionFactory) -> <init>
    142:143:void <init>(org.apache.http.config.Lookup) -> <init>
    146:147:void <init>() -> <init>
    152:156:void finalize() -> finalize
    159:160:void close() -> close
    163:163:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    167:167:java.lang.Object getState() -> getState
    171:171:org.apache.http.config.SocketConfig getSocketConfig() -> getSocketConfig
    175:176:void setSocketConfig(org.apache.http.config.SocketConfig) -> setSocketConfig
    179:179:org.apache.http.config.ConnectionConfig getConnectionConfig() -> getConnectionConfig
    183:184:void setConnectionConfig(org.apache.http.config.ConnectionConfig) -> setConnectionConfig
    189:190:org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    206:217:void closeConnection() -> closeConnection
    220:231:void shutdownConnection() -> shutdownConnection
    234:240:void checkExpiry() -> checkExpiry
    243:258:org.apache.http.HttpClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    265:301:void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    308:320:void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    326:330:void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    336:336:void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    339:345:void closeExpiredConnections() -> closeExpiredConnections
    348:362:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    365:370:void shutdown() -> shutdown
org.apache.http.impl.conn.BasicHttpClientConnectionManager$1 -> org.apache.http.impl.conn.BasicHttpClientConnectionManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.BasicHttpClientConnectionManager this$0 -> this$0
    190:190:void <init>(org.apache.http.impl.conn.BasicHttpClientConnectionManager,org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> <init>
    194:194:boolean cancel() -> cancel
    198:198:org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.impl.conn.CPool -> org.apache.http.impl.conn.CPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.commons.logging.Log log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    48:59:void <init>(org.apache.http.pool.ConnFactory,int,int,long,java.util.concurrent.TimeUnit) -> <init>
    63:64:org.apache.http.impl.conn.CPoolEntry createEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.ManagedHttpClientConnection) -> createEntry
    43:43:org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    46:46:void <clinit>() -> <clinit>
org.apache.http.impl.conn.CPoolEntry -> org.apache.http.impl.conn.CPoolEntry:
    org.apache.commons.logging.Log log -> log
    boolean routeComplete -> routeComplete
    55:57:void <init>(org.apache.commons.logging.Log,java.lang.String,org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.ManagedHttpClientConnection,long,java.util.concurrent.TimeUnit) -> <init>
    60:61:void markRouteComplete() -> markRouteComplete
    64:64:boolean isRouteComplete() -> isRouteComplete
    68:70:void closeConnection() -> closeConnection
    73:75:void shutdownConnection() -> shutdownConnection
    79:83:boolean isExpired(long) -> isExpired
    88:89:boolean isClosed() -> isClosed
    95:99:void close() -> close
org.apache.http.impl.conn.CPoolProxy -> org.apache.http.impl.conn.CPoolProxy:
    java.lang.reflect.Method CLOSE_METHOD -> CLOSE_METHOD
    java.lang.reflect.Method SHUTDOWN_METHOD -> SHUTDOWN_METHOD
    java.lang.reflect.Method IS_OPEN_METHOD -> IS_OPEN_METHOD
    java.lang.reflect.Method IS_STALE_METHOD -> IS_STALE_METHOD
    org.apache.http.impl.conn.CPoolEntry poolEntry -> poolEntry
    66:68:void <init>(org.apache.http.impl.conn.CPoolEntry) -> <init>
    71:71:org.apache.http.impl.conn.CPoolEntry getPoolEntry() -> getPoolEntry
    75:77:org.apache.http.impl.conn.CPoolEntry detach() -> detach
    81:85:org.apache.http.HttpClientConnection getConnection() -> getConnection
    89:93:void close() -> close
    96:100:void shutdown() -> shutdown
    103:107:boolean isOpen() -> isOpen
    112:116:boolean isStale() -> isStale
    122:144:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    152:152:org.apache.http.HttpClientConnection newProxy(org.apache.http.impl.conn.CPoolEntry) -> newProxy
    160:164:org.apache.http.impl.conn.CPoolProxy getHandler(org.apache.http.HttpClientConnection) -> getHandler
    168:172:org.apache.http.impl.conn.CPoolEntry getPoolEntry(org.apache.http.HttpClientConnection) -> getPoolEntry
    176:176:org.apache.http.impl.conn.CPoolEntry detach(org.apache.http.HttpClientConnection) -> detach
    54:61:void <clinit>() -> <clinit>
org.apache.http.impl.conn.ConnectionShutdownException -> org.apache.http.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
    47:48:void <init>() -> <init>
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerLog -> headerLog
    org.apache.commons.logging.Log wireLog -> wireLog
    java.net.Socket socket -> socket
    org.apache.http.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    72:94:void <init>() -> <init>
    97:97:java.lang.String getId() -> getId
    101:101:org.apache.http.HttpHost getTargetHost() -> getTargetHost
    105:105:boolean isSecure() -> isSecure
    110:110:java.net.Socket getSocket() -> getSocket
    114:117:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    122:132:void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    135:139:void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    156:169:void shutdown() -> shutdown
    174:181:void close() -> close
    188:198:org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    206:216:org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    225:225:org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    230:231:void bind(java.net.Socket) -> bind
    237:247:void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    251:262:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    267:278:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    281:281:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    285:285:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    289:290:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    93:112:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    93:130:void <init>(org.apache.http.conn.scheme.SchemeRegistry,org.apache.http.conn.DnsResolver) -> <init>
    133:133:org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    137:142:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry(org.apache.http.protocol.HttpContext) -> getSchemeRegistry
    151:200:void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    207:221:void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    236:243:void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
    260:260:java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
org.apache.http.impl.conn.DefaultHttpResponseParser -> org.apache.http.impl.conn.DefaultHttpResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    61:80:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> <init>
    61:104:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.config.MessageConstraints) -> <init>
    117:118:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> <init>
    128:129:void <init>(org.apache.http.io.SessionInputBuffer) -> <init>
    135:161:org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    165:165:boolean reject(org.apache.http.util.CharArrayBuffer,int) -> reject
    57:57:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultHttpResponseParserFactory -> org.apache.http.impl.conn.DefaultHttpResponseParserFactory:
    org.apache.http.impl.conn.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    57:61:void <init>(org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory) -> <init>
    65:66:void <init>(org.apache.http.HttpResponseFactory) -> <init>
    69:70:void <init>() -> <init>
    74:74:org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
    49:49:void <clinit>() -> <clinit>
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    76:79:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    86:120:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultManagedHttpClientConnection -> org.apache.http.impl.conn.DefaultManagedHttpClientConnection:
    java.lang.String id -> id
    java.util.Map attributes -> attributes
    boolean shutdown -> shutdown
    76:81:void <init>(java.lang.String,int,int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    86:87:void <init>(java.lang.String,int) -> <init>
    90:90:java.lang.String getId() -> getId
    95:97:void shutdown() -> shutdown
    100:100:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    104:104:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    108:109:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    113:119:void bind(java.net.Socket) -> bind
    123:123:java.net.Socket getSocket() -> getSocket
    127:131:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.impl.conn.DefaultProxyRoutePlanner -> org.apache.http.impl.conn.DefaultProxyRoutePlanner:
    org.apache.http.HttpHost proxy -> proxy
    50:52:void <init>(org.apache.http.HttpHost,org.apache.http.conn.SchemePortResolver) -> <init>
    55:56:void <init>(org.apache.http.HttpHost) -> <init>
    63:63:org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    68:84:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> <init>
    87:87:int getMaxGarbageLines(org.apache.http.params.HttpParams) -> getMaxGarbageLines
    96:122:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultRoutePlanner -> org.apache.http.impl.conn.DefaultRoutePlanner:
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    57:60:void <init>(org.apache.http.conn.SchemePortResolver) -> <init>
    66:93:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    101:101:org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
org.apache.http.impl.conn.DefaultSchemePortResolver -> org.apache.http.impl.conn.DefaultSchemePortResolver:
    org.apache.http.impl.conn.DefaultSchemePortResolver INSTANCE -> INSTANCE
    41:41:void <init>() -> <init>
    46:57:int resolve(org.apache.http.HttpHost) -> resolve
    43:43:void <clinit>() -> <clinit>
org.apache.http.impl.conn.HttpClientConnectionOperator -> org.apache.http.impl.conn.HttpClientConnectionOperator:
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    org.apache.commons.logging.Log log -> log
    org.apache.http.config.Lookup socketFactoryRegistry -> socketFactoryRegistry
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    60:77:void <init>(org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver) -> <init>
    81:86:org.apache.http.config.Lookup getSocketFactoryRegistry(org.apache.http.protocol.HttpContext) -> getSocketFactoryRegistry
    96:147:void connect(org.apache.http.conn.ManagedHttpClientConnection,org.apache.http.HttpHost,java.net.InetSocketAddress,int,org.apache.http.config.SocketConfig,org.apache.http.protocol.HttpContext) -> connect
    153:169:void upgrade(org.apache.http.conn.ManagedHttpClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext) -> upgrade
org.apache.http.impl.conn.HttpConnPool -> org.apache.http.impl.conn.HttpConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.commons.logging.Log log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    58:62:void <init>(org.apache.commons.logging.Log,org.apache.http.conn.ClientConnectionOperator,int,int,long,java.util.concurrent.TimeUnit) -> <init>
    66:67:org.apache.http.impl.conn.HttpPoolEntry createEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.OperatedClientConnection) -> createEntry
    45:45:org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    48:48:void <clinit>() -> <clinit>
org.apache.http.impl.conn.HttpConnPool$InternalConnFactory -> org.apache.http.impl.conn.HttpConnPool$InternalConnFactory:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    74:76:void <init>(org.apache.http.conn.ClientConnectionOperator) -> <init>
    79:79:org.apache.http.conn.OperatedClientConnection create(org.apache.http.conn.routing.HttpRoute) -> create
    70:70:java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.conn.HttpPoolEntry -> org.apache.http.impl.conn.HttpPoolEntry:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    56:59:void <init>(org.apache.commons.logging.Log,java.lang.String,org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.OperatedClientConnection,long,java.util.concurrent.TimeUnit) -> <init>
    63:67:boolean isExpired(long) -> isExpired
    71:71:org.apache.http.conn.routing.RouteTracker getTracker() -> getTracker
    75:75:org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    79:79:org.apache.http.conn.routing.HttpRoute getEffectiveRoute() -> getEffectiveRoute
    84:85:boolean isClosed() -> isClosed
    90:96:void close() -> close
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    54:63:void <init>() -> <init>
    75:82:void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    93:98:boolean remove(org.apache.http.HttpConnection) -> remove
    106:107:void removeAll() -> removeAll
    117:138:void closeIdleConnections(long) -> closeIdleConnections
    142:161:void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.IdleConnectionHandler$TimeValues -> org.apache.http.impl.conn.IdleConnectionHandler$TimeValues:
    long timeAdded -> timeAdded
    long timeExpires -> timeExpires
    172:179:void <init>(long,long,java.util.concurrent.TimeUnit) -> <init>
    163:163:long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$000
    163:163:long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$100
org.apache.http.impl.conn.InMemoryDnsResolver -> org.apache.http.impl.conn.InMemoryDnsResolver:
    org.apache.commons.logging.Log log -> log
    java.util.Map dnsMap -> dnsMap
    48:62:void <init>() -> <init>
    75:78:void add(java.lang.String,java.net.InetAddress[]) -> add
    84:91:java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.LoggingInputStream -> org.apache.http.impl.conn.LoggingInputStream:
    java.io.InputStream in -> in
    org.apache.http.impl.conn.Wire wire -> wire
    47:50:void <init>(java.io.InputStream,org.apache.http.impl.conn.Wire) -> <init>
    54:58:int read() -> read
    63:67:int read(byte[]) -> read
    72:76:int read(byte[],int,int) -> read
    81:81:long skip(long) -> skip
    86:86:int available() -> available
    91:92:void mark(int) -> mark
    96:97:void reset() -> reset
    101:101:boolean markSupported() -> markSupported
    106:107:void close() -> close
org.apache.http.impl.conn.LoggingManagedHttpClientConnection -> org.apache.http.impl.conn.LoggingManagedHttpClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerlog -> headerlog
    org.apache.http.impl.conn.Wire wire -> wire
    68:74:void <init>(java.lang.String,org.apache.commons.logging.Log,org.apache.commons.logging.Log,org.apache.commons.logging.Log,int,int,java.nio.charset.CharsetDecoder,java.nio.charset.CharsetEncoder,org.apache.http.config.MessageConstraints,org.apache.http.entity.ContentLengthStrategy,org.apache.http.entity.ContentLengthStrategy,org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    78:82:void close() -> close
    86:90:void shutdown() -> shutdown
    94:98:java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    103:107:java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    112:119:void onResponseReceived(org.apache.http.HttpResponse) -> onResponseReceived
    123:130:void onRequestSubmitted(org.apache.http.HttpRequest) -> onRequestSubmitted
org.apache.http.impl.conn.LoggingOutputStream -> org.apache.http.impl.conn.LoggingOutputStream:
    java.io.OutputStream out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    47:50:void <init>(java.io.OutputStream,org.apache.http.impl.conn.Wire) -> <init>
    54:55:void write(int) -> write
    59:61:void write(byte[]) -> write
    65:67:void write(byte[],int,int) -> write
    71:72:void flush() -> flush
    76:77:void close() -> close
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    67:72:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire,java.lang.String) -> <init>
    75:76:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire) -> <init>
    79:79:boolean isDataAvailable(int) -> isDataAvailable
    83:87:int read(byte[],int,int) -> read
    91:95:int read() -> read
    99:103:int read(byte[]) -> read
    107:112:java.lang.String readLine() -> readLine
    116:123:int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    127:127:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    131:134:boolean isEof() -> isEof
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    org.apache.http.io.SessionOutputBuffer out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    62:66:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire,java.lang.String) -> <init>
    69:70:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire) -> <init>
    73:77:void write(byte[],int,int) -> write
    80:84:void write(int) -> write
    87:91:void write(byte[]) -> write
    94:95:void flush() -> flush
    98:104:void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    107:112:void writeLine(java.lang.String) -> writeLine
    115:115:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ManagedClientConnectionImpl -> org.apache.http.impl.conn.ManagedClientConnectionImpl:
    org.apache.http.conn.ClientConnectionManager manager -> manager
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    boolean reusable -> reusable
    long duration -> duration
    75:84:void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.ClientConnectionOperator,org.apache.http.impl.conn.HttpPoolEntry) -> <init>
    87:87:java.lang.String getId() -> getId
    91:91:org.apache.http.impl.conn.HttpPoolEntry getPoolEntry() -> getPoolEntry
    95:97:org.apache.http.impl.conn.HttpPoolEntry detach() -> detach
    101:101:org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    105:109:org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    113:117:org.apache.http.conn.OperatedClientConnection ensureConnection() -> ensureConnection
    121:125:org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry() -> ensurePoolEntry
    129:135:void close() -> close
    138:144:void shutdown() -> shutdown
    147:151:boolean isOpen() -> isOpen
    156:160:boolean isStale() -> isStale
    165:167:void setSocketTimeout(int) -> setSocketTimeout
    170:171:int getSocketTimeout() -> getSocketTimeout
    175:176:org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    180:182:void flush() -> flush
    185:186:boolean isResponseAvailable(int) -> isResponseAvailable
    191:193:void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    196:197:org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    202:204:void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    208:210:void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    213:214:java.net.InetAddress getLocalAddress() -> getLocalAddress
    218:219:int getLocalPort() -> getLocalPort
    223:224:java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    228:229:int getRemotePort() -> getRemotePort
    233:234:boolean isSecure() -> isSecure
    238:238:void bind(java.net.Socket) -> bind
    242:243:java.net.Socket getSocket() -> getSocket
    247:253:javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    257:261:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    266:270:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    275:279:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    282:283:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    290:321:void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    325:349:void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    353:375:void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    379:403:void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    406:407:java.lang.Object getState() -> getState
    411:413:void setState(java.lang.Object) -> setState
    416:417:void markReusable() -> markReusable
    420:421:void unmarkReusable() -> unmarkReusable
    424:424:boolean isMarkedReusable() -> isMarkedReusable
    428:433:void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    436:443:void releaseConnection() -> releaseConnection
    446:459:void abortConnection() -> abortConnection
org.apache.http.impl.conn.ManagedHttpClientConnectionFactory -> org.apache.http.impl.conn.ManagedHttpClientConnectionFactory:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.http.impl.conn.ManagedHttpClientConnectionFactory INSTANCE -> INSTANCE
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerlog -> headerlog
    org.apache.commons.logging.Log wirelog -> wirelog
    org.apache.http.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    org.apache.http.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    61:76:void <init>(org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory) -> <init>
    80:81:void <init>(org.apache.http.io.HttpMessageParserFactory) -> <init>
    84:85:void <init>() -> <init>
    88:105:org.apache.http.conn.ManagedHttpClientConnection create(org.apache.http.conn.routing.HttpRoute,org.apache.http.config.ConnectionConfig) -> create
    53:53:org.apache.http.HttpConnection create(java.lang.Object,org.apache.http.config.ConnectionConfig) -> create
    57:59:void <clinit>() -> <clinit>
org.apache.http.impl.conn.PoolingClientConnectionManager -> org.apache.http.impl.conn.PoolingClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.HttpConnPool pool -> pool
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    87:88:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    91:92:void <init>(org.apache.http.conn.scheme.SchemeRegistry,org.apache.http.conn.DnsResolver) -> <init>
    95:96:void <init>() -> <init>
    101:102:void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit) -> <init>
    75:114:void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit,org.apache.http.conn.DnsResolver) -> <init>
    119:123:void finalize() -> finalize
    138:138:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    142:142:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    146:151:java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    155:163:java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    167:174:java.lang.String format(org.apache.http.impl.conn.HttpPoolEntry) -> format
    180:186:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    208:226:org.apache.http.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    233:272:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    275:282:void shutdown() -> shutdown
    285:289:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    292:294:void closeExpiredConnections() -> closeExpiredConnections
    297:297:int getMaxTotal() -> getMaxTotal
    301:302:void setMaxTotal(int) -> setMaxTotal
    305:305:int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    309:310:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    313:313:int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    317:318:void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    321:321:org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    325:325:org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    71:71:org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    71:71:int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    71:71:void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingClientConnectionManager$1 -> org.apache.http.impl.conn.PoolingClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    org.apache.http.impl.conn.PoolingClientConnectionManager this$0 -> this$0
    186:186:void <init>(org.apache.http.impl.conn.PoolingClientConnectionManager,java.util.concurrent.Future) -> <init>
    189:190:void abortRequest() -> abortRequest
    195:195:org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.PoolingHttpClientConnectionManager -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    org.apache.http.impl.conn.CPool pool -> pool
    org.apache.http.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    96:96:org.apache.http.config.Registry getDefaultRegistry() -> getDefaultRegistry
    103:104:void <init>() -> <init>
    107:108:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    112:113:void <init>(org.apache.http.config.Registry) -> <init>
    118:119:void <init>(org.apache.http.config.Registry,org.apache.http.conn.DnsResolver) -> <init>
    124:125:void <init>(org.apache.http.config.Registry,org.apache.http.conn.HttpConnectionFactory) -> <init>
    129:130:void <init>(org.apache.http.conn.HttpConnectionFactory) -> <init>
    136:137:void <init>(org.apache.http.config.Registry,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.DnsResolver) -> <init>
    89:151:void <init>(org.apache.http.config.Registry,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver,long,java.util.concurrent.TimeUnit) -> <init>
    89:163:void <init>(org.apache.http.impl.conn.CPool,org.apache.http.config.Lookup,org.apache.http.conn.SchemePortResolver,org.apache.http.conn.DnsResolver) -> <init>
    168:172:void finalize() -> finalize
    175:176:void close() -> close
    179:184:java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    188:196:java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    200:207:java.lang.String format(org.apache.http.impl.conn.CPoolEntry) -> format
    213:218:org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    240:250:org.apache.http.HttpClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    258:286:void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    293:316:void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    322:330:void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    336:342:void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    345:352:void shutdown() -> shutdown
    355:359:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    362:364:void closeExpiredConnections() -> closeExpiredConnections
    367:367:int getMaxTotal() -> getMaxTotal
    371:372:void setMaxTotal(int) -> setMaxTotal
    375:375:int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    379:380:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    383:383:int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    387:388:void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    391:391:org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    395:395:org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    399:399:org.apache.http.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    403:404:void setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    407:407:org.apache.http.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    411:412:void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    415:415:org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.HttpHost) -> getSocketConfig
    419:420:void setSocketConfig(org.apache.http.HttpHost,org.apache.http.config.SocketConfig) -> setSocketConfig
    423:423:org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.HttpHost) -> getConnectionConfig
    427:428:void setConnectionConfig(org.apache.http.HttpHost,org.apache.http.config.ConnectionConfig) -> setConnectionConfig
    85:85:org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    85:85:int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    85:85:void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$1 -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager this$0 -> this$0
    218:218:void <init>(org.apache.http.impl.conn.PoolingHttpClientConnectionManager,java.util.concurrent.Future) -> <init>
    221:221:boolean cancel() -> cancel
    227:227:org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData:
    java.util.Map socketConfigMap -> socketConfigMap
    java.util.Map connectionConfigMap -> connectionConfigMap
    org.apache.http.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    org.apache.http.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    438:441:void <init>() -> <init>
    444:444:org.apache.http.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    448:449:void setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    452:452:org.apache.http.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    456:457:void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    460:460:org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.HttpHost) -> getSocketConfig
    464:465:void setSocketConfig(org.apache.http.HttpHost,org.apache.http.config.SocketConfig) -> setSocketConfig
    468:468:org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.HttpHost) -> getConnectionConfig
    472:473:void setConnectionConfig(org.apache.http.HttpHost,org.apache.http.config.ConnectionConfig) -> setConnectionConfig
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory:
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    485:489:void <init>(org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData,org.apache.http.conn.HttpConnectionFactory) -> <init>
    492:505:org.apache.http.conn.ManagedHttpClientConnection create(org.apache.http.conn.routing.HttpRoute) -> create
    477:477:java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    92:96:void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector) -> <init>
    104:104:java.net.ProxySelector getProxySelector() -> getProxySelector
    114:115:void setProxySelector(java.net.ProxySelector) -> setProxySelector
    122:151:org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    172:203:org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    221:221:java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    246:275:java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 -> org.apache.http.impl.conn.ProxySelectorRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
    254:254:void <clinit>() -> <clinit>
org.apache.http.impl.conn.SchemeRegistryFactory -> org.apache.http.impl.conn.SchemeRegistryFactory:
    42:42:void <init>() -> <init>
    49:54:org.apache.http.conn.scheme.SchemeRegistry createDefault() -> createDefault
    82:87:org.apache.http.conn.scheme.SchemeRegistry createSystemDefault() -> createSystemDefault
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    org.apache.commons.logging.Log log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    114:115:void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    68:130:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    136:137:void <init>() -> <init>
    142:146:void finalize() -> finalize
    149:149:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    166:166:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    175:176:void assertStillUp() -> assertStillUp
    182:182:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    206:253:org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    259:308:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    311:315:void closeExpiredConnections() -> closeExpiredConnections
    318:337:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    340:354:void shutdown() -> shutdown
    357:371:void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$1 -> org.apache.http.impl.conn.SingleClientConnManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    182:182:void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> <init>
    186:186:void abortRequest() -> abortRequest
    190:190:org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    419:423:void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.impl.conn.SingleClientConnManager$PoolEntry,org.apache.http.conn.routing.HttpRoute) -> <init>
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    382:384:void <init>(org.apache.http.impl.conn.SingleClientConnManager) -> <init>
    390:394:void close() -> close
    400:404:void shutdown() -> shutdown
org.apache.http.impl.conn.SystemDefaultDnsResolver -> org.apache.http.impl.conn.SystemDefaultDnsResolver:
    org.apache.http.impl.conn.SystemDefaultDnsResolver INSTANCE -> INSTANCE
    39:39:void <init>() -> <init>
    44:44:java.net.InetAddress[] resolve(java.lang.String) -> resolve
    41:41:void <clinit>() -> <clinit>
org.apache.http.impl.conn.SystemDefaultRoutePlanner -> org.apache.http.impl.conn.SystemDefaultRoutePlanner:
    java.net.ProxySelector proxySelector -> proxySelector
    60:62:void <init>(org.apache.http.conn.SchemePortResolver,java.net.ProxySelector) -> <init>
    65:66:void <init>(java.net.ProxySelector) -> <init>
    75:92:org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    100:100:java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    106:129:java.net.Proxy chooseProxy(java.util.List) -> chooseProxy
org.apache.http.impl.conn.SystemDefaultRoutePlanner$1 -> org.apache.http.impl.conn.SystemDefaultRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
    110:110:void <clinit>() -> <clinit>
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    org.apache.commons.logging.Log log -> log
    java.lang.String id -> id
    52:55:void <init>(org.apache.commons.logging.Log,java.lang.String) -> <init>
    58:59:void <init>(org.apache.commons.logging.Log) -> <init>
    63:88:void wire(java.lang.String,java.io.InputStream) -> wire
    92:92:boolean enabled() -> enabled
    97:99:void output(java.io.InputStream) -> output
    103:105:void input(java.io.InputStream) -> input
    109:111:void output(byte[],int,int) -> output
    115:117:void input(byte[],int,int) -> input
    121:123:void output(byte[]) -> output
    127:129:void input(byte[]) -> input
    133:134:void output(int) -> output
    138:139:void input(int) -> input
    147:149:void output(java.lang.String) -> output
    157:159:void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    90:95:void <init>() -> <init>
    99:99:void enableConnectionGC() -> enableConnectionGC
    123:123:org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    149:149:void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    163:171:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    174:180:void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    194:215:void shutdown() -> shutdown
    224:231:void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    57:62:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue) -> <init>
    72:73:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute) -> <init>
    87:96:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,long,java.util.concurrent.TimeUnit) -> <init>
    99:99:org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    103:103:org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    107:107:org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    112:113:void shutdownEntry() -> shutdownEntry
    119:119:long getCreated() -> getCreated
    126:126:long getUpdated() -> getUpdated
    133:133:long getExpiry() -> getExpiry
    137:137:long getValidUntil() -> getValidUntil
    144:152:void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    158:158:boolean isExpired(long) -> isExpired
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute route -> route
    59:62:void <init>(org.apache.http.impl.conn.tsccm.BasicPoolEntry,java.lang.ref.ReferenceQueue) -> <init>
    72:72:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    53:55:void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry) -> <init>
    60:60:org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    66:66:org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    72:73:void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    114:115:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.params.ConnPerRoute,int) -> <init>
    73:139:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.params.ConnPerRoute,int,long,java.util.concurrent.TimeUnit) -> <init>
    142:142:java.util.concurrent.locks.Lock getLock() -> getLock
    152:155:void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams) -> <init>
    164:164:java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    174:174:java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    184:184:java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    197:197:org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    212:212:org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    216:224:void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    237:252:org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    256:263:int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    268:272:int getConnectionsInPool() -> getConnectionsInPool
    281:283:org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    328:421:org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    427:472:void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    484:528:org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    545:561:org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    578:600:void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    608:622:void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    627:642:void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    659:686:void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    691:704:void deleteClosedConnections() -> deleteClosedConnections
    715:738:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    742:761:void closeExpiredConnections() -> closeExpiredConnections
    765:806:void shutdown() -> shutdown
    812:818:void setMaxTotalConnections(int) -> setMaxTotalConnections
    825:825:int getMaxTotalConnections() -> getMaxTotalConnections
    71:71:java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute) -> access$000
org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1:
    org.apache.http.impl.conn.tsccm.WaitingThreadAborter val$aborter -> val$aborter
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute this$0 -> this$0
    283:283:void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> <init>
    286:292:void abortRequest() -> abortRequest
    298:298:org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    56:94:void <init>(org.apache.http.conn.routing.HttpRoute,int) -> <init>
    56:110:void <init>(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.params.ConnPerRoute) -> <init>
    119:119:org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    129:129:int getMaxEntries() -> getMaxEntries
    142:142:boolean isUnused() -> isUnused
    152:152:int getCapacity() -> getCapacity
    164:164:int getEntryCount() -> getEntryCount
    174:195:org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    206:215:void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    227:229:void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    244:248:boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    259:261:void dropEntry() -> dropEntry
    273:275:void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    285:285:boolean hasThread() -> hasThread
    295:295:org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    305:310:void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.RouteSpecificPool$1 -> org.apache.http.impl.conn.tsccm.RouteSpecificPool$1:
    org.apache.http.impl.conn.tsccm.RouteSpecificPool this$0 -> this$0
    86:86:void <init>(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> <init>
    88:88:int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    94:95:void <init>(org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    101:102:void <init>() -> <init>
    115:116:void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit) -> <init>
    132:140:void <init>(org.apache.http.conn.scheme.SchemeRegistry,long,java.util.concurrent.TimeUnit,org.apache.http.conn.params.ConnPerRouteBean) -> <init>
    152:160:void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> <init>
    165:169:void finalize() -> finalize
    180:180:org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    191:191:org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    209:209:org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    213:213:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    220:223:org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    247:289:void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    292:294:void shutdown() -> shutdown
    307:307:int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    319:319:int getConnectionsInPool() -> getConnectionsInPool
    323:327:void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    330:332:void closeExpiredConnections() -> closeExpiredConnections
    338:338:int getMaxTotal() -> getMaxTotal
    345:346:void setMaxTotal(int) -> setMaxTotal
    352:352:int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    359:360:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    366:366:int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    373:374:void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    71:71:org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) -> access$000
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> val$poolRequest
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> this$0
    223:223:void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.tsccm.PoolEntryRequest,org.apache.http.conn.routing.HttpRoute) -> <init>
    226:227:void abortRequest() -> abortRequest
    232:239:org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    org.apache.http.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    74:80:void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> <init>
    90:90:java.util.concurrent.locks.Condition getCondition() -> getCondition
    102:102:org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    113:113:java.lang.Thread getThread() -> getThread
    141:168:boolean await(java.util.Date) -> await
    182:190:void wakeup() -> wakeup
    193:195:void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    org.apache.http.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    39:39:void <init>() -> <init>
    48:54:void abort() -> abort
    63:67:void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    40:40:void <init>() -> <init>
    45:45:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    49:49:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    59:61:void <init>() -> <init>
    65:68:void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    79:79:org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    91:96:org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    101:101:java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    58:63:void <init>(java.lang.String,java.lang.String) -> <init>
    71:71:java.lang.String getName() -> getName
    80:80:java.lang.String getValue() -> getValue
    89:90:void setValue(java.lang.String) -> setValue
    101:101:java.lang.String getComment() -> getComment
    113:114:void setComment(java.lang.String) -> setComment
    121:121:java.lang.String getCommentURL() -> getCommentURL
    137:137:java.util.Date getExpiryDate() -> getExpiryDate
    152:153:void setExpiryDate(java.util.Date) -> setExpiryDate
    164:164:boolean isPersistent() -> isPersistent
    176:176:java.lang.String getDomain() -> getDomain
    187:192:void setDomain(java.lang.String) -> setDomain
    203:203:java.lang.String getPath() -> getPath
    215:216:void setPath(java.lang.String) -> setPath
    223:223:boolean isSecure() -> isSecure
    239:240:void setSecure(boolean) -> setSecure
    247:247:int[] getPorts() -> getPorts
    261:261:int getVersion() -> getVersion
    273:274:void setVersion(int) -> setVersion
    283:284:boolean isExpired(java.util.Date) -> isExpired
    289:290:void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    293:293:java.lang.String getAttribute(java.lang.String) -> getAttribute
    297:297:boolean containsAttribute(java.lang.String) -> containsAttribute
    302:304:java.lang.Object clone() -> clone
    309:328:java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    57:58:void <init>(java.lang.String,java.lang.String) -> <init>
    62:62:int[] getPorts() -> getPorts
    66:67:void setPorts(int[]) -> setPorts
    71:71:java.lang.String getCommentURL() -> getCommentURL
    75:76:void setCommentURL(java.lang.String) -> setCommentURL
    79:80:void setDiscard(boolean) -> setDiscard
    84:84:boolean isPersistent() -> isPersistent
    89:89:boolean isExpired(java.util.Date) -> isExpired
    94:98:java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    42:43:void <init>() -> <init>
    47:49:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    46:47:void <init>() -> <init>
    51:59:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    63:97:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    100:113:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    47:50:void <init>(java.lang.String[]) -> <init>
    54:64:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    44:45:void <init>() -> <init>
    49:65:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    47:48:void <init>() -> <init>
    52:54:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    58:63:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    66:84:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    44:45:void <init>() -> <init>
    49:51:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    55:57:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.impl.cookie.RFC2965Spec strict -> strict
    org.apache.http.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec compat -> compat
    64:67:void <init>(java.lang.String[],boolean) -> <init>
    70:71:void <init>() -> <init>
    74:77:org.apache.http.impl.cookie.RFC2965Spec getStrict() -> getStrict
    81:84:org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    88:91:org.apache.http.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    97:136:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    144:155:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    158:167:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    172:190:java.util.List formatCookies(java.util.List) -> formatCookies
    195:195:int getVersion() -> getVersion
    199:199:org.apache.http.Header getVersionHeader() -> getVersionHeader
    204:204:java.lang.String toString() -> toString
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    54:57:void <init>(java.lang.String[],boolean) -> <init>
    60:61:void <init>() -> <init>
    64:78:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    83:83:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    84:114:void <init>(java.lang.String[],org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel) -> <init>
    118:119:void <init>(java.lang.String[]) -> <init>
    123:124:void <init>() -> <init>
    128:168:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    172:200:java.util.List formatCookies(java.util.List) -> formatCookies
    204:204:int getVersion() -> getVersion
    208:208:org.apache.http.Header getVersionHeader() -> getVersionHeader
    213:213:java.lang.String toString() -> toString
    63:63:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.BrowserCompatSpec$1 -> org.apache.http.impl.cookie.BrowserCompatSpec$1:
    org.apache.http.impl.cookie.BrowserCompatSpec this$0 -> this$0
    95:95:void <init>(org.apache.http.impl.cookie.BrowserCompatSpec) -> <init>
    99:99:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.BrowserCompatSpec$2 -> org.apache.http.impl.cookie.BrowserCompatSpec$2:
    int[] $SwitchMap$org$apache$http$impl$cookie$BrowserCompatSpecFactory$SecurityLevel -> $SwitchMap$org$apache$http$impl$cookie$BrowserCompatSpecFactory$SecurityLevel
    90:90:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel securityLevel -> securityLevel
    59:62:void <init>(java.lang.String[],org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel) -> <init>
    65:66:void <init>(java.lang.String[]) -> <init>
    69:70:void <init>() -> <init>
    73:84:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    89:89:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel -> org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel:
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_DEFAULT -> SECURITYLEVEL_DEFAULT
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_IE_MEDIUM -> SECURITYLEVEL_IE_MEDIUM
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] $VALUES -> $VALUES
    50:50:org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] values() -> values
    50:50:org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel valueOf(java.lang.String) -> valueOf
    50:50:void <init>(java.lang.String,int) -> <init>
    50:52:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler -> org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler:
    45:46:void <init>() -> <init>
    53:64:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    50:50:void <init>() -> <init>
    53:62:java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    66:66:java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    71:98:java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    103:108:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    111:118:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
    49:50:void <init>() -> <init>
    56:57:void <init>(java.lang.String) -> <init>
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.TimeZone GMT -> GMT
    79:79:java.util.Date parseDate(java.lang.String) -> parseDate
    94:94:java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    116:120:java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    132:132:java.lang.String formatDate(java.util.Date) -> formatDate
    149:149:java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
    153:154:void <init>() -> <init>
    65:65:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.IgnoreSpec -> org.apache.http.impl.cookie.IgnoreSpec:
    45:45:void <init>() -> <init>
    48:48:int getVersion() -> getVersion
    53:53:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    57:57:java.util.List formatCookies(java.util.List) -> formatCookies
    61:61:org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.IgnoreSpecFactory -> org.apache.http.impl.cookie.IgnoreSpecFactory:
    47:48:void <init>() -> <init>
    51:51:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    55:55:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    47:48:void <init>() -> <init>
    53:75:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    84:85:boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    96:103:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    54:55:void <init>() -> <init>
    60:68:org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
    75:135:org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    51:51:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    64:77:void <init>(java.lang.String[]) -> <init>
    81:82:void <init>() -> <init>
    110:133:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    137:155:java.util.List formatCookies(java.util.List) -> formatCookies
    159:159:int getVersion() -> getVersion
    163:163:org.apache.http.Header getVersionHeader() -> getVersionHeader
    168:168:java.lang.String toString() -> toString
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    53:55:void <init>(java.lang.String[]) -> <init>
    58:59:void <init>() -> <init>
    62:73:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    78:78:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.PublicSuffixFilter -> org.apache.http.impl.cookie.PublicSuffixFilter:
    org.apache.http.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    55:57:void <init>(org.apache.http.cookie.CookieAttributeHandler) -> <init>
    66:67:void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    75:76:void setExceptions(java.util.Collection) -> setExceptions
    82:85:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    89:90:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    93:94:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    97:130:boolean isForPublicSuffix(org.apache.http.cookie.Cookie) -> isForPublicSuffix
org.apache.http.impl.cookie.PublicSuffixListParser -> org.apache.http.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    org.apache.http.impl.cookie.PublicSuffixFilter filter -> filter
    48:50:void <init>(org.apache.http.impl.cookie.PublicSuffixFilter) -> <init>
    61:95:void parse(java.io.Reader) -> parse
    105:125:boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    48:49:void <init>() -> <init>
    53:61:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    65:107:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    110:117:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    org.apache.http.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    74:89:void <init>(java.lang.String[],boolean) -> <init>
    93:94:void <init>() -> <init>
    98:105:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    111:120:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    123:135:java.util.List formatCookies(java.util.List) -> formatCookies
    140:159:java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    163:174:java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    188:199:void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    210:225:void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    228:228:int getVersion() -> getVersion
    232:232:org.apache.http.Header getVersionHeader() -> getVersionHeader
    237:237:java.lang.String toString() -> toString
    61:63:void <clinit>() -> <clinit>
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    54:57:void <init>(java.lang.String[],boolean) -> <init>
    60:61:void <init>() -> <init>
    64:78:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    83:83:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    45:46:void <init>() -> <init>
    50:63:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    68:72:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    47:48:void <init>() -> <init>
    52:56:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    60:60:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    63:63:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    47:48:void <init>() -> <init>
    52:56:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    60:60:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    63:63:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    52:53:void <init>() -> <init>
    60:80:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    98:101:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    109:163:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    169:182:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    52:53:void <init>() -> <init>
    66:81:int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    94:101:boolean portMatch(int,int[]) -> portMatch
    109:117:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    125:136:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    144:157:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    62:63:void <init>() -> <init>
    66:72:void <init>(java.lang.String[],boolean) -> <init>
    78:85:java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    92:92:java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    98:134:java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> createCookies
    140:143:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    147:149:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    158:181:void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    194:214:org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin) -> adjustEffectiveHost
    220:220:int getVersion() -> getVersion
    225:230:org.apache.http.Header getVersionHeader() -> getVersionHeader
    235:235:java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    54:57:void <init>(java.lang.String[],boolean) -> <init>
    60:61:void <init>() -> <init>
    64:78:org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    83:83:org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    50:51:void <init>() -> <init>
    58:73:void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    80:88:void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    91:91:boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy -> org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy:
    org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy INSTANCE -> INSTANCE
    org.apache.http.entity.ContentLengthStrategy contentLengthStrategy -> contentLengthStrategy
    51:53:void <init>(org.apache.http.entity.ContentLengthStrategy) -> <init>
    56:60:long determineLength(org.apache.http.HttpMessage) -> determineLength
    45:45:void <clinit>() -> <clinit>
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    71:73:void <init>(org.apache.http.entity.ContentLengthStrategy) -> <init>
    93:118:org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    138:140:org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    68:70:void <init>(org.apache.http.entity.ContentLengthStrategy) -> <init>
    89:95:java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    113:119:void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    org.apache.http.impl.entity.LaxContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    66:68:void <init>(int) -> <init>
    75:76:void <init>() -> <init>
    79:123:long determineLength(org.apache.http.HttpMessage) -> determineLength
    53:53:void <clinit>() -> <clinit>
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    org.apache.http.impl.entity.StrictContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    66:68:void <init>(int) -> <init>
    75:76:void <init>() -> <init>
    79:113:long determineLength(org.apache.http.HttpMessage) -> determineLength
    53:53:void <clinit>() -> <clinit>
org.apache.http.impl.execchain.BackoffStrategyExec -> org.apache.http.impl.execchain.BackoffStrategyExec:
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    58:65:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.client.ConnectionBackoffStrategy,org.apache.http.client.BackoffManager) -> <init>
    72:101:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ClientExecChain -> org.apache.http.impl.execchain.ClientExecChain:
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ConnectionHolder -> org.apache.http.impl.execchain.ConnectionHolder:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.HttpClientConnectionManager manager -> manager
    org.apache.http.HttpClientConnection managedConn -> managedConn
    boolean reusable -> reusable
    java.lang.Object state -> state
    long validDuration -> validDuration
    java.util.concurrent.TimeUnit tunit -> tunit
    boolean released -> released
    64:68:void <init>(org.apache.commons.logging.Log,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.HttpClientConnection) -> <init>
    71:71:boolean isReusable() -> isReusable
    75:76:void markReusable() -> markReusable
    79:80:void markNonReusable() -> markNonReusable
    83:84:void setState(java.lang.Object) -> setState
    87:91:void setValidFor(long,java.util.concurrent.TimeUnit) -> setValidFor
    94:116:void releaseConnection() -> releaseConnection
    119:136:void abortConnection() -> abortConnection
    139:142:boolean cancel() -> cancel
    146:146:boolean isReleased() -> isReleased
    150:151:void close() -> close
org.apache.http.impl.execchain.MainClientExec -> org.apache.http.impl.execchain.MainClientExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpProcessor proxyHttpProcessor -> proxyHttpProcessor
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.auth.HttpAuthenticator authenticator -> authenticator
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.conn.routing.HttpRouteDirector routeDirector -> routeDirector
    89:129:void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler) -> <init>
    136:333:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
    346:408:void establishRoute(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext) -> establishRoute
    425:499:boolean createTunnelToTarget(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext) -> createTunnelToTarget
    521:521:boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.client.protocol.HttpClientContext) -> createTunnelToProxy
    530:558:boolean needAuthentication(org.apache.http.auth.AuthState,org.apache.http.auth.AuthState,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpResponse,org.apache.http.client.protocol.HttpClientContext) -> needAuthentication
org.apache.http.impl.execchain.MinimalClientExec -> org.apache.http.impl.execchain.MinimalClientExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    79:106:void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.HttpClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy) -> <init>
    113:222:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ProtocolExec -> org.apache.http.impl.execchain.ProtocolExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    74:84:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.protocol.HttpProcessor) -> <init>
    90:113:void rewriteRequestURI(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    121:209:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.Proxies -> org.apache.http.impl.execchain.Proxies:
    45:45:void <init>() -> <init>
    48:56:void enhanceEntity(org.apache.http.HttpEntityEnclosingRequest) -> enhanceEntity
    59:63:boolean isEnhanced(org.apache.http.HttpEntity) -> isEnhanced
    68:81:boolean isRepeatable(org.apache.http.HttpRequest) -> isRepeatable
    87:87:org.apache.http.client.methods.CloseableHttpResponse enhanceResponse(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder) -> enhanceResponse
org.apache.http.impl.execchain.RedirectExec -> org.apache.http.impl.execchain.RedirectExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    70:87:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.client.RedirectStrategy) -> <init>
    94:182:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.RequestAbortedException -> org.apache.http.impl.execchain.RequestAbortedException:
    long serialVersionUID -> serialVersionUID
    45:46:void <init>(java.lang.String) -> <init>
    49:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.apache.http.impl.execchain.RequestEntityExecHandler -> org.apache.http.impl.execchain.RequestEntityExecHandler:
    java.lang.reflect.Method WRITE_TO_METHOD -> WRITE_TO_METHOD
    org.apache.http.HttpEntity original -> original
    boolean consumed -> consumed
    56:61:void <init>(org.apache.http.HttpEntity) -> <init>
    64:64:org.apache.http.HttpEntity getOriginal() -> getOriginal
    68:68:boolean isConsumed() -> isConsumed
    74:83:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    49:53:void <clinit>() -> <clinit>
org.apache.http.impl.execchain.ResponseEntityWrapper -> org.apache.http.impl.execchain.ResponseEntityWrapper:
    org.apache.http.impl.execchain.ConnectionHolder connReleaseTrigger -> connReleaseTrigger
    54:56:void <init>(org.apache.http.HttpEntity,org.apache.http.impl.execchain.ConnectionHolder) -> <init>
    59:62:void cleanup() -> cleanup
    65:74:void releaseConnection() -> releaseConnection
    78:78:boolean isRepeatable() -> isRepeatable
    83:83:java.io.InputStream getContent() -> getContent
    89:90:void consumeContent() -> consumeContent
    95:100:void writeTo(java.io.OutputStream) -> writeTo
    106:111:boolean eofDetected(java.io.InputStream) -> eofDetected
    116:130:boolean streamClosed(java.io.InputStream) -> streamClosed
    134:135:boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.impl.execchain.ResponseProxyHandler -> org.apache.http.impl.execchain.ResponseProxyHandler:
    java.lang.reflect.Method CLOSE_METHOD -> CLOSE_METHOD
    org.apache.http.HttpResponse original -> original
    org.apache.http.impl.execchain.ConnectionHolder connHolder -> connHolder
    65:72:void <init>(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder) -> <init>
    75:78:void close() -> close
    82:93:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    53:57:void <clinit>() -> <clinit>
org.apache.http.impl.execchain.RetryExec -> org.apache.http.impl.execchain.RetryExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    60:72:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.client.HttpRequestRetryHandler) -> <init>
    79:108:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ServiceUnavailableRetryExec -> org.apache.http.impl.execchain.ServiceUnavailableRetryExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    59:72:void <init>(org.apache.http.impl.execchain.ClientExecChain,org.apache.http.client.ServiceUnavailableRetryStrategy) -> <init>
    79:101:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.TunnelRefusedException -> org.apache.http.impl.execchain.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    47:49:void <init>(java.lang.String,org.apache.http.HttpResponse) -> <init>
    52:52:org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    org.apache.http.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    java.util.List headerLines -> headerLines
    org.apache.http.message.LineParser lineParser -> lineParser
    int state -> state
    org.apache.http.HttpMessage message -> message
    87:95:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams) -> <init>
    112:118:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.config.MessageConstraints) -> <init>
    144:145:org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    180:235:org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    256:280:org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    73:78:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams) -> <init>
    92:96:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter) -> <init>
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    108:117:void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.nio.CharBuffer cbuf -> cbuf
    85:86:void <init>() -> <init>
    96:117:void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    123:123:org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    130:130:int capacity() -> capacity
    137:137:int length() -> length
    144:144:int available() -> available
    149:166:int fillBuffer() -> fillBuffer
    171:171:boolean hasBufferedData() -> hasBufferedData
    176:182:int read() -> read
    186:214:int read(byte[],int,int) -> read
    219:222:int read(byte[]) -> read
    226:231:int locateLF() -> locateLF
    250:286:int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    305:324:int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    329:343:int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    348:368:int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    375:384:int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    388:393:java.lang.String readLine() -> readLine
    398:398:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.ByteBuffer bbuf -> bbuf
    89:103:void <init>(java.io.OutputStream,int,java.nio.charset.Charset,int,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> <init>
    105:106:void <init>() -> <init>
    109:126:void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    132:132:org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    139:139:int capacity() -> capacity
    146:146:int length() -> length
    153:153:int available() -> available
    157:163:void flushBuffer() -> flushBuffer
    166:168:void flush() -> flush
    171:193:void write(byte[],int,int) -> write
    196:200:void write(byte[]) -> write
    203:207:void write(int) -> write
    219:233:void writeLine(java.lang.String) -> writeLine
    245:268:void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    271:290:void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    293:301:void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    304:304:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    68:68:void <clinit>() -> <clinit>
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    org.apache.http.Header[] footers -> footers
    82:100:void <init>(org.apache.http.io.SessionInputBuffer) -> <init>
    104:108:int available() -> available
    126:145:int read() -> read
    161:183:int read(byte[],int,int) -> read
    198:198:int read(byte[]) -> read
    206:216:void nextChunk() -> nextChunk
    224:254:int getChunkSize() -> getChunkSize
    264:272:void parseTrailerHeaders() -> parseTrailerHeaders
    282:295:void close() -> close
    298:298:org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    75:76:void <init>(org.apache.http.io.SessionOutputBuffer,int) -> <init>
    90:91:void <init>(org.apache.http.io.SessionOutputBuffer) -> <init>
    56:103:void <init>(int,org.apache.http.io.SessionOutputBuffer) -> <init>
    109:115:void flushCache() -> flushCache
    122:127:void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    131:133:void writeClosingChunk() -> writeClosingChunk
    142:147:void finish() -> finish
    152:160:void write(int) -> write
    168:169:void write(byte[]) -> write
    177:186:void write(byte[],int,int) -> write
    193:195:void flush() -> flush
    202:207:void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    org.apache.http.io.SessionInputBuffer in -> in
    66:88:void <init>(org.apache.http.io.SessionInputBuffer,long) -> <init>
    99:112:void close() -> close
    116:120:int available() -> available
    132:149:int read() -> read
    166:187:int read(byte[],int,int) -> read
    200:200:int read(byte[]) -> read
    213:230:long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    65:84:void <init>(org.apache.http.io.SessionOutputBuffer,long) -> <init>
    93:97:void close() -> close
    101:102:void flush() -> flush
    106:118:void write(byte[],int,int) -> write
    122:123:void write(byte[]) -> write
    127:134:void write(int) -> write
org.apache.http.impl.io.DefaultHttpRequestParser -> org.apache.http.impl.io.DefaultHttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    80:83:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> <init>
    103:107:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.config.MessageConstraints) -> <init>
    115:116:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> <init>
    122:123:void <init>(org.apache.http.io.SessionInputBuffer) -> <init>
    130:137:org.apache.http.HttpRequest parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    54:54:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpRequestParserFactory -> org.apache.http.impl.io.DefaultHttpRequestParserFactory:
    org.apache.http.impl.io.DefaultHttpRequestParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    56:60:void <init>(org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory) -> <init>
    63:64:void <init>() -> <init>
    68:68:org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
    49:49:void <clinit>() -> <clinit>
org.apache.http.impl.io.DefaultHttpRequestWriter -> org.apache.http.impl.io.DefaultHttpRequestWriter:
    56:57:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter) -> <init>
    60:61:void <init>(org.apache.http.io.SessionOutputBuffer) -> <init>
    65:67:void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    42:42:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpRequestWriterFactory -> org.apache.http.impl.io.DefaultHttpRequestWriterFactory:
    org.apache.http.impl.io.DefaultHttpRequestWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    51:53:void <init>(org.apache.http.message.LineFormatter) -> <init>
    56:57:void <init>() -> <init>
    60:60:org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
    46:46:void <clinit>() -> <clinit>
org.apache.http.impl.io.DefaultHttpResponseParser -> org.apache.http.impl.io.DefaultHttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    80:83:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> <init>
    103:107:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.config.MessageConstraints) -> <init>
    115:116:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> <init>
    122:123:void <init>(org.apache.http.io.SessionInputBuffer) -> <init>
    130:138:org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    54:54:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpResponseParserFactory -> org.apache.http.impl.io.DefaultHttpResponseParserFactory:
    org.apache.http.impl.io.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    56:60:void <init>(org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory) -> <init>
    63:64:void <init>() -> <init>
    68:68:org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
    49:49:void <clinit>() -> <clinit>
org.apache.http.impl.io.DefaultHttpResponseWriter -> org.apache.http.impl.io.DefaultHttpResponseWriter:
    56:57:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter) -> <init>
    60:61:void <init>(org.apache.http.io.SessionOutputBuffer) -> <init>
    65:67:void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    42:42:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpResponseWriterFactory -> org.apache.http.impl.io.DefaultHttpResponseWriterFactory:
    org.apache.http.impl.io.DefaultHttpResponseWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    51:53:void <init>(org.apache.http.message.LineFormatter) -> <init>
    56:57:void <init>() -> <init>
    60:60:org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
    46:46:void <clinit>() -> <clinit>
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    82:85:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> <init>
    92:99:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    53:54:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams) -> <init>
    58:60:void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    46:46:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    82:85:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> <init>
    92:100:org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    53:54:void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams) -> <init>
    58:60:void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    46:46:void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    41:45:void <init>() -> <init>
    48:48:long getBytesTransferred() -> getBytesTransferred
    52:53:void setBytesTransferred(long) -> setBytesTransferred
    56:57:void incrementBytesTransferred(long) -> incrementBytesTransferred
    60:61:void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    org.apache.http.io.SessionInputBuffer in -> in
    boolean closed -> closed
    55:65:void <init>(org.apache.http.io.SessionInputBuffer) -> <init>
    69:72:int available() -> available
    78:79:void close() -> close
    83:86:int read() -> read
    92:95:int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    58:63:void <init>(org.apache.http.io.SessionOutputBuffer) -> <init>
    72:76:void close() -> close
    80:81:void flush() -> flush
    85:89:void write(byte[],int,int) -> write
    93:94:void write(byte[]) -> write
    98:102:void write(int) -> write
org.apache.http.impl.io.SessionInputBufferImpl -> org.apache.http.impl.io.SessionInputBufferImpl:
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    int minChunkLimit -> minChunkLimit
    org.apache.http.config.MessageConstraints constraints -> constraints
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.io.InputStream instream -> instream
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.CharBuffer cbuf -> cbuf
    95:106:void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,org.apache.http.config.MessageConstraints,java.nio.charset.CharsetDecoder) -> <init>
    111:112:void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int) -> <init>
    115:116:void bind(java.io.InputStream) -> bind
    119:119:boolean isBound() -> isBound
    123:123:int capacity() -> capacity
    127:127:int length() -> length
    131:131:int available() -> available
    135:136:int streamRead(byte[],int,int) -> streamRead
    141:158:int fillBuffer() -> fillBuffer
    163:163:boolean hasBufferedData() -> hasBufferedData
    167:169:void clear() -> clear
    173:179:int read() -> read
    183:211:int read(byte[],int,int) -> read
    216:219:int read(byte[]) -> read
    223:228:int locateLF() -> locateLF
    247:284:int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    303:322:int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    327:342:int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    347:362:int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    369:378:int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    382:387:java.lang.String readLine() -> readLine
    392:392:boolean isDataAvailable(int) -> isDataAvailable
    396:396:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.SessionOutputBufferImpl -> org.apache.http.impl.io.SessionOutputBufferImpl:
    byte[] CRLF -> CRLF
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    int fragementSizeHint -> fragementSizeHint
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.io.OutputStream outstream -> outstream
    java.nio.ByteBuffer bbuf -> bbuf
    86:93:void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int,int,java.nio.charset.CharsetEncoder) -> <init>
    98:99:void <init>(org.apache.http.impl.io.HttpTransportMetricsImpl,int) -> <init>
    102:103:void bind(java.io.OutputStream) -> bind
    106:106:boolean isBound() -> isBound
    110:110:int capacity() -> capacity
    114:114:int length() -> length
    118:118:int available() -> available
    122:124:void streamWrite(byte[],int,int) -> streamWrite
    127:130:void flushStream() -> flushStream
    133:139:void flushBuffer() -> flushBuffer
    142:144:void flush() -> flush
    147:169:void write(byte[],int,int) -> write
    172:176:void write(byte[]) -> write
    179:188:void write(int) -> write
    200:214:void writeLine(java.lang.String) -> writeLine
    226:249:void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    252:266:void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    269:277:void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    280:280:org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    60:60:void <clinit>() -> <clinit>
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    java.net.Socket socket -> socket
    boolean eof -> eof
    68:80:void <init>(java.net.Socket,int,org.apache.http.params.HttpParams) -> <init>
    84:86:int fillBuffer() -> fillBuffer
    90:101:boolean isDataAvailable(int) -> isDataAvailable
    105:105:boolean isEof() -> isEof
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
    63:73:void <init>(java.net.Socket,int,org.apache.http.params.HttpParams) -> <init>
org.apache.http.impl.pool.BasicConnFactory -> org.apache.http.impl.pool.BasicConnFactory:
    javax.net.SocketFactory plainfactory -> plainfactory
    javax.net.ssl.SSLSocketFactory sslfactory -> sslfactory
    int connectTimeout -> connectTimeout
    org.apache.http.config.SocketConfig sconfig -> sconfig
    org.apache.http.HttpConnectionFactory connFactory -> connFactory
    74:82:void <init>(javax.net.ssl.SSLSocketFactory,org.apache.http.params.HttpParams) -> <init>
    90:91:void <init>(org.apache.http.params.HttpParams) -> <init>
    102:109:void <init>(javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,int,org.apache.http.config.SocketConfig,org.apache.http.config.ConnectionConfig) -> <init>
    116:117:void <init>(int,org.apache.http.config.SocketConfig,org.apache.http.config.ConnectionConfig) -> <init>
    123:124:void <init>(org.apache.http.config.SocketConfig,org.apache.http.config.ConnectionConfig) -> <init>
    130:131:void <init>() -> <init>
    138:141:org.apache.http.HttpClientConnection create(java.net.Socket,org.apache.http.params.HttpParams) -> create
    145:173:org.apache.http.HttpClientConnection create(org.apache.http.HttpHost) -> create
    57:57:java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.pool.BasicConnPool -> org.apache.http.impl.pool.BasicConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    57:58:void <init>(org.apache.http.pool.ConnFactory) -> <init>
    65:66:void <init>(org.apache.http.params.HttpParams) -> <init>
    72:73:void <init>(org.apache.http.config.SocketConfig,org.apache.http.config.ConnectionConfig) -> <init>
    79:80:void <init>() -> <init>
    86:86:org.apache.http.impl.pool.BasicPoolEntry createEntry(org.apache.http.HttpHost,org.apache.http.HttpClientConnection) -> createEntry
    50:50:org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    54:54:void <clinit>() -> <clinit>
org.apache.http.impl.pool.BasicPoolEntry -> org.apache.http.impl.pool.BasicPoolEntry:
    48:49:void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpClientConnection) -> <init>
    54:57:void close() -> close
    61:61:boolean isClosed() -> isClosed
org.apache.http.io.BufferInfo -> org.apache.http.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
org.apache.http.io.EofSensor -> org.apache.http.io.EofSensor:
    boolean isEof() -> isEof
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageParserFactory -> org.apache.http.io.HttpMessageParserFactory:
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpMessageWriterFactory -> org.apache.http.io.HttpMessageWriterFactory:
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    57:60:void <init>(org.apache.http.params.HttpParams) -> <init>
    63:64:void <init>() -> <init>
    68:68:boolean containsHeader(java.lang.String) -> containsHeader
    73:73:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    78:78:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    83:83:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    88:88:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    93:94:void addHeader(org.apache.http.Header) -> addHeader
    98:100:void addHeader(java.lang.String,java.lang.String) -> addHeader
    104:105:void setHeader(org.apache.http.Header) -> setHeader
    109:111:void setHeader(java.lang.String,java.lang.String) -> setHeader
    115:116:void setHeaders(org.apache.http.Header[]) -> setHeaders
    120:121:void removeHeader(org.apache.http.Header) -> removeHeader
    125:134:void removeHeaders(java.lang.String) -> removeHeaders
    138:138:org.apache.http.HeaderIterator headerIterator() -> headerIterator
    143:143:org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    151:154:org.apache.http.params.HttpParams getParams() -> getParams
    162:163:void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    58:61:void <init>(java.lang.String,java.lang.String) -> <init>
    64:64:java.lang.String getName() -> getName
    68:68:java.lang.String getValue() -> getValue
    74:74:java.lang.String toString() -> toString
    78:82:org.apache.http.HeaderElement[] getElements() -> getElements
    88:88:java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    org.apache.http.NameValuePair[] parameters -> parameters
    60:68:void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> <init>
    77:78:void <init>(java.lang.String,java.lang.String) -> <init>
    81:81:java.lang.String getName() -> getName
    85:85:java.lang.String getValue() -> getValue
    89:89:org.apache.http.NameValuePair[] getParameters() -> getParameters
    93:93:int getParameterCount() -> getParameterCount
    98:98:org.apache.http.NameValuePair getParameter(int) -> getParameter
    102:110:org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    115:124:boolean equals(java.lang.Object) -> equals
    130:136:int hashCode() -> hashCode
    141:151:java.lang.String toString() -> toString
    158:158:java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    org.apache.http.HeaderIterator headerIt -> headerIt
    org.apache.http.message.HeaderValueParser parser -> parser
    org.apache.http.HeaderElement currentElement -> currentElement
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    org.apache.http.message.ParserCursor cursor -> cursor
    52:64:void <init>(org.apache.http.HeaderIterator,org.apache.http.message.HeaderValueParser) -> <init>
    68:69:void <init>(org.apache.http.HeaderIterator) -> <init>
    73:92:void bufferHeaderValue() -> bufferHeaderValue
    96:120:void parseNextElement() -> parseNextElement
    123:126:boolean hasNext() -> hasNext
    130:140:org.apache.http.HeaderElement nextElement() -> nextElement
    144:144:java.lang.Object next() -> next
    148:148:void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    77:81:void <init>(org.apache.http.Header[],java.lang.String) -> <init>
    94:105:int findNext(int) -> findNext
    118:118:boolean filterHeader(int) -> filterHeader
    125:125:boolean hasNext() -> hasNext
    139:146:org.apache.http.Header nextHeader() -> nextHeader
    160:160:java.lang.Object next() -> next
    172:172:void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueFormatter INSTANCE -> INSTANCE
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    74:75:void <init>() -> <init>
    92:92:java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    101:117:org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    129:138:int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    158:158:java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    167:191:org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    203:222:int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    243:243:java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    252:268:org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    280:289:int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    308:308:java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    317:333:org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    345:355:int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    373:393:void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    405:405:boolean isSeparator(char) -> isSeparator
    418:418:boolean isUnsafe(char) -> isUnsafe
    56:58:void <clinit>() -> <clinit>
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueParser INSTANCE -> INSTANCE
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    73:74:void <init>() -> <init>
    87:92:org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    100:109:org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    124:129:org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    137:147:org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    161:161:org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    176:181:org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    190:218:org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    232:237:org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    245:245:org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    249:256:boolean isOneOf(char,char[]) -> isOneOf
    262:342:org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    355:355:org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
    61:67:void <clinit>() -> <clinit>
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity entity -> entity
    50:51:void <init>(java.lang.String,java.lang.String) -> <init>
    55:56:void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> <init>
    59:60:void <init>(org.apache.http.RequestLine) -> <init>
    63:63:org.apache.http.HttpEntity getEntity() -> getEntity
    67:68:void setEntity(org.apache.http.HttpEntity) -> setEntity
    71:72:boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    org.apache.http.RequestLine requestline -> requestline
    58:62:void <init>(java.lang.String,java.lang.String) -> <init>
    73:74:void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> <init>
    82:86:void <init>(org.apache.http.RequestLine) -> <init>
    94:94:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    103:106:org.apache.http.RequestLine getRequestLine() -> getRequestLine
    111:111:java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.StatusLine statusline -> statusline
    org.apache.http.ProtocolVersion ver -> ver
    int code -> code
    java.lang.String reasonPhrase -> reasonPhrase
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    76:83:void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale) -> <init>
    93:100:void <init>(org.apache.http.StatusLine) -> <init>
    115:123:void <init>(org.apache.http.ProtocolVersion,int,java.lang.String) -> <init>
    128:128:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    133:139:org.apache.http.StatusLine getStatusLine() -> getStatusLine
    144:144:org.apache.http.HttpEntity getEntity() -> getEntity
    152:152:java.util.Locale getLocale() -> getLocale
    157:161:void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    165:170:void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    175:180:void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    184:187:void setStatusCode(int) -> setStatusCode
    191:193:void setReasonPhrase(java.lang.String) -> setReasonPhrase
    197:198:void setEntity(org.apache.http.HttpEntity) -> setEntity
    205:207:void setLocale(java.util.Locale) -> setLocale
    222:222:java.lang.String getReason(int) -> getReason
    228:229:java.lang.String toString() -> toString
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineFormatter INSTANCE -> INSTANCE
    68:69:void <init>() -> <init>
    80:86:org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    103:103:java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    111:127:org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    141:141:int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    157:157:java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    165:169:org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    183:196:void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    212:212:java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    220:224:org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    239:254:void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    269:269:java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    277:287:org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    302:316:void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
    63:65:void <clinit>() -> <clinit>
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineParser INSTANCE -> INSTANCE
    org.apache.http.ProtocolVersion protocol -> protocol
    89:91:void <init>(org.apache.http.ProtocolVersion) -> <init>
    98:99:void <init>() -> <init>
    105:110:org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    118:184:org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    199:199:org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    207:246:boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    254:259:org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    276:314:org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    333:333:org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    341:346:org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    354:398:org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    417:417:org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    425:429:org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    439:439:org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    447:454:void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
    71:73:void <clinit>() -> <clinit>
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    85:90:void <init>(java.util.List,java.lang.String) -> <init>
    103:114:int findNext(int) -> findNext
    127:134:boolean filterHeader(int) -> filterHeader
    140:140:boolean hasNext() -> hasNext
    154:162:org.apache.http.Header nextHeader() -> nextHeader
    176:176:java.lang.Object next() -> next
    185:189:void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    57:60:void <init>(java.lang.String,java.lang.String) -> <init>
    63:63:java.lang.String getName() -> getName
    67:67:java.lang.String getValue() -> getValue
    74:82:java.lang.String toString() -> toString
    87:95:boolean equals(java.lang.Object) -> equals
    100:103:int hashCode() -> hashCode
    108:108:java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    54:58:void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> <init>
    61:61:java.lang.String getMethod() -> getMethod
    65:65:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    69:69:java.lang.String getUri() -> getUri
    75:75:java.lang.String toString() -> toString
    80:80:java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    69:73:void <init>(org.apache.http.ProtocolVersion,int,java.lang.String) -> <init>
    78:78:int getStatusCode() -> getStatusCode
    82:82:org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    86:86:java.lang.String getReasonPhrase() -> getReasonPhrase
    92:92:java.lang.String toString() -> toString
    97:97:java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    org.apache.http.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    84:87:void <init>(org.apache.http.HeaderIterator) -> <init>
    92:92:boolean hasNext() -> hasNext
    107:115:java.lang.String nextToken() -> nextToken
    130:130:java.lang.Object next() -> next
    142:142:void remove() -> remove
    164:185:int findNext(int) -> findNext
    210:210:java.lang.String createToken(java.lang.String,int,int) -> createToken
    225:255:int findTokenStart(int) -> findTokenStart
    277:297:int findTokenSeparator(int) -> findTokenSeparator
    313:320:int findTokenEnd(int) -> findTokenEnd
    336:336:boolean isTokenSeparator(char) -> isTokenSeparator
    355:355:boolean isWhitespace(char) -> isWhitespace
    374:394:boolean isTokenChar(char) -> isTokenChar
    409:409:boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    78:93:void <init>(org.apache.http.util.CharArrayBuffer) -> <init>
    97:97:java.lang.String getName() -> getName
    101:101:java.lang.String getValue() -> getValue
    105:107:org.apache.http.HeaderElement[] getElements() -> getElements
    111:111:int getValuePos() -> getValuePos
    115:115:org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    120:120:java.lang.String toString() -> toString
    127:127:java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    60:62:void <init>() -> <init>
    68:69:void clear() -> clear
    78:82:void addHeader(org.apache.http.Header) -> addHeader
    90:94:void removeHeader(org.apache.http.Header) -> removeHeader
    104:115:void updateHeader(org.apache.http.Header) -> updateHeader
    125:130:void setHeaders(org.apache.http.Header[]) -> setHeaders
    144:158:org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    173:181:org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    193:198:org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    211:218:org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    227:227:org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    240:246:boolean containsHeader(java.lang.String) -> containsHeader
    257:257:org.apache.http.HeaderIterator iterator() -> iterator
    271:271:org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    282:284:org.apache.http.message.HeaderGroup copy() -> copy
    289:289:java.lang.Object clone() -> clone
    294:294:java.lang.String toString() -> toString
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    49:59:void <init>(int,int) -> <init>
    62:62:int getLowerBound() -> getLowerBound
    66:66:int getUpperBound() -> getUpperBound
    70:70:int getPos() -> getPos
    74:81:void updatePos(int) -> updatePos
    84:84:boolean atEnd() -> atEnd
    89:97:java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    49:50:void <init>() -> <init>
    53:57:long getLongParameter(java.lang.String,long) -> getLongParameter
    61:62:org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    66:70:int getIntParameter(java.lang.String,int) -> getIntParameter
    74:75:org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    79:83:double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    87:88:org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    92:96:boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    100:101:org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    105:105:boolean isParameterTrue(java.lang.String) -> isParameterTrue
    109:109:boolean isParameterFalse(java.lang.String) -> isParameterFalse
    121:121:java.util.Set getNames() -> getNames
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.Map parameters -> parameters
    56:60:void <init>() -> <init>
    63:63:java.lang.Object getParameter(java.lang.String) -> getParameter
    67:75:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    80:84:boolean removeParameter(java.lang.String) -> removeParameter
    95:98:void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    112:112:boolean isParameterSet(java.lang.String) -> isParameterSet
    126:126:boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    133:134:void clear() -> clear
    147:149:org.apache.http.params.HttpParams copy() -> copy
    159:161:java.lang.Object clone() -> clone
    172:175:void copyParams(org.apache.http.params.HttpParams) -> copyParams
    188:188:java.util.Set getNames() -> getNames
org.apache.http.params.CoreConnectionPNames -> org.apache.http.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
    java.lang.String HTTP_MALFORMED_INPUT_ACTION -> HTTP_MALFORMED_INPUT_ACTION
    java.lang.String HTTP_UNMAPPABLE_INPUT_ACTION -> HTTP_UNMAPPABLE_INPUT_ACTION
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams local -> local
    org.apache.http.params.HttpParams defaults -> defaults
    59:62:void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams) -> <init>
    68:69:org.apache.http.params.HttpParams copy() -> copy
    78:82:java.lang.Object getParameter(java.lang.String) -> getParameter
    90:90:boolean removeParameter(java.lang.String) -> removeParameter
    98:98:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    106:106:org.apache.http.params.HttpParams getDefaults() -> getDefaults
    122:124:java.util.Set getNames() -> getNames
    138:138:java.util.Set getDefaultNames() -> getDefaultNames
    152:152:java.util.Set getLocalNames() -> getLocalNames
    157:160:java.util.Set getNames(org.apache.http.params.HttpParams) -> getNames
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
    44:46:void <init>(org.apache.http.params.HttpParams) -> <init>
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    44:45:void <init>(org.apache.http.params.HttpParams) -> <init>
    48:49:void setSoTimeout(int) -> setSoTimeout
    52:53:void setTcpNoDelay(boolean) -> setTcpNoDelay
    56:57:void setSocketBufferSize(int) -> setSocketBufferSize
    60:61:void setLinger(int) -> setLinger
    64:65:void setConnectionTimeout(int) -> setConnectionTimeout
    68:69:void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    44:45:void <init>() -> <init>
    55:56:int getSoTimeout(org.apache.http.params.HttpParams) -> getSoTimeout
    66:69:void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
    81:82:boolean getSoReuseaddr(org.apache.http.params.HttpParams) -> getSoReuseaddr
    94:96:void setSoReuseaddr(org.apache.http.params.HttpParams,boolean) -> setSoReuseaddr
    106:107:boolean getTcpNoDelay(org.apache.http.params.HttpParams) -> getTcpNoDelay
    117:119:void setTcpNoDelay(org.apache.http.params.HttpParams,boolean) -> setTcpNoDelay
    129:130:int getSocketBufferSize(org.apache.http.params.HttpParams) -> getSocketBufferSize
    141:143:void setSocketBufferSize(org.apache.http.params.HttpParams,int) -> setSocketBufferSize
    153:154:int getLinger(org.apache.http.params.HttpParams) -> getLinger
    164:166:void setLinger(org.apache.http.params.HttpParams,int) -> setLinger
    176:177:int getConnectionTimeout(org.apache.http.params.HttpParams) -> getConnectionTimeout
    188:190:void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    200:201:boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams) -> isStaleCheckingEnabled
    212:214:void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean) -> setStaleCheckingEnabled
    226:227:boolean getSoKeepalive(org.apache.http.params.HttpParams) -> getSoKeepalive
    239:241:void setSoKeepalive(org.apache.http.params.HttpParams,boolean) -> setSoKeepalive
org.apache.http.params.HttpParamConfig -> org.apache.http.params.HttpParamConfig:
    45:46:void <init>() -> <init>
    49:49:org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.params.HttpParams) -> getSocketConfig
    59:59:org.apache.http.config.MessageConstraints getMessageConstraints(org.apache.http.params.HttpParams) -> getMessageConstraints
    66:68:org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.params.HttpParams) -> getConnectionConfig
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpParamsNames -> org.apache.http.params.HttpParamsNames:
    java.util.Set getNames() -> getNames
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    46:47:void <init>(org.apache.http.params.HttpParams) -> <init>
    50:51:void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    54:55:void setContentCharset(java.lang.String) -> setContentCharset
    58:59:void setVersion(org.apache.http.HttpVersion) -> setVersion
    62:63:void setUserAgent(java.lang.String) -> setUserAgent
    66:67:void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    49:50:void <init>() -> <init>
    60:66:java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    76:78:void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    88:94:java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    104:106:void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    116:122:org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    132:134:void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    144:145:java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    155:157:void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    167:168:boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    178:180:void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
    190:196:java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams) -> getMalformedInputAction
    207:209:void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    219:225:java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams) -> getUnmappableInputAction
    236:238:void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
org.apache.http.params.SyncBasicHttpParams -> org.apache.http.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    46:47:void <init>() -> <init>
    51:51:boolean removeParameter(java.lang.String) -> removeParameter
    56:56:org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    61:61:java.lang.Object getParameter(java.lang.String) -> getParameter
    66:66:boolean isParameterSet(java.lang.String) -> isParameterSet
    71:71:boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    76:77:void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    81:82:void clear() -> clear
    86:86:java.lang.Object clone() -> clone
org.apache.http.pool.AbstractConnPool -> org.apache.http.pool.AbstractConnPool:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.pool.ConnFactory connFactory -> connFactory
    java.util.Map routeToPool -> routeToPool
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    java.util.Map maxPerRoute -> maxPerRoute
    boolean isShutDown -> isShutDown
    int defaultMaxPerRoute -> defaultMaxPerRoute
    int maxTotal -> maxTotal
    83:93:void <init>(org.apache.http.pool.ConnFactory,int,int) -> <init>
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    104:104:void onLease(org.apache.http.pool.PoolEntry) -> onLease
    110:110:void onRelease(org.apache.http.pool.PoolEntry) -> onRelease
    113:113:boolean isShutdown() -> isShutdown
    120:141:void shutdown() -> shutdown
    144:156:org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object) -> getPool
    168:170:java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    202:202:java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> lease
    211:299:org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> getPoolEntryBlocking
    304:313:void notifyPending(org.apache.http.pool.RouteSpecificPool) -> notifyPending
    316:332:void release(org.apache.http.pool.PoolEntry,boolean) -> release
    335:339:int getMax(java.lang.Object) -> getMax
    344:351:void setMaxTotal(int) -> setMaxTotal
    354:358:int getMaxTotal() -> getMaxTotal
    363:370:void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    373:377:int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    382:390:void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    393:398:int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    403:411:org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    416:426:org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    436:442:void enumAvailable(org.apache.http.pool.PoolEntryCallback) -> enumAvailable
    450:456:void enumLeased(org.apache.http.pool.PoolEntryCallback) -> enumLeased
    459:468:void enumEntries(java.util.Iterator,org.apache.http.pool.PoolEntryCallback) -> enumEntries
    478:493:void closeIdle(long,java.util.concurrent.TimeUnit) -> closeIdle
    499:509:void closeExpired() -> closeExpired
    513:521:java.lang.String toString() -> toString
    63:63:void release(java.lang.Object,boolean) -> release
    64:64:org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> access$000
org.apache.http.pool.AbstractConnPool$1 -> org.apache.http.pool.AbstractConnPool$1:
    java.lang.Object val$route -> val$route
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    146:146:void <init>(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object) -> <init>
    150:150:org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
org.apache.http.pool.AbstractConnPool$2 -> org.apache.http.pool.AbstractConnPool$2:
    java.lang.Object val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    170:170:void <init>(org.apache.http.pool.AbstractConnPool,java.util.concurrent.locks.Lock,org.apache.http.concurrent.FutureCallback,java.lang.Object,java.lang.Object) -> <init>
    177:179:org.apache.http.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    170:170:java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.pool.AbstractConnPool$3 -> org.apache.http.pool.AbstractConnPool$3:
    long val$deadline -> val$deadline
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    484:484:void <init>(org.apache.http.pool.AbstractConnPool,long) -> <init>
    487:490:void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.AbstractConnPool$4 -> org.apache.http.pool.AbstractConnPool$4:
    long val$now -> val$now
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    500:500:void <init>(org.apache.http.pool.AbstractConnPool,long) -> <init>
    503:506:void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.ConnFactory -> org.apache.http.pool.ConnFactory:
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.pool.ConnPool -> org.apache.http.pool.ConnPool:
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    void release(java.lang.Object,boolean) -> release
org.apache.http.pool.ConnPoolControl -> org.apache.http.pool.ConnPoolControl:
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
org.apache.http.pool.PoolEntry -> org.apache.http.pool.PoolEntry:
    java.lang.String id -> id
    java.lang.Object route -> route
    java.lang.Object conn -> conn
    long created -> created
    long validUnit -> validUnit
    long updated -> updated
    long expiry -> expiry
    java.lang.Object state -> state
    80:94:void <init>(java.lang.String,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit) -> <init>
    104:105:void <init>(java.lang.String,java.lang.Object,java.lang.Object) -> <init>
    108:108:java.lang.String getId() -> getId
    112:112:java.lang.Object getRoute() -> getRoute
    116:116:java.lang.Object getConnection() -> getConnection
    120:120:long getCreated() -> getCreated
    124:124:long getValidUnit() -> getValidUnit
    128:128:java.lang.Object getState() -> getState
    132:133:void setState(java.lang.Object) -> setState
    136:136:long getUpdated() -> getUpdated
    140:140:long getExpiry() -> getExpiry
    144:153:void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    156:156:boolean isExpired(long) -> isExpired
    void close() -> close
    boolean isClosed() -> isClosed
    172:180:java.lang.String toString() -> toString
org.apache.http.pool.PoolEntryCallback -> org.apache.http.pool.PoolEntryCallback:
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.PoolEntryFuture -> org.apache.http.pool.PoolEntryFuture:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.concurrent.FutureCallback callback -> callback
    java.util.concurrent.locks.Condition condition -> condition
    boolean cancelled -> cancelled
    boolean completed -> completed
    java.lang.Object result -> result
    53:57:void <init>(java.util.concurrent.locks.Lock,org.apache.http.concurrent.FutureCallback) -> <init>
    60:73:boolean cancel(boolean) -> cancel
    78:78:boolean isCancelled() -> isCancelled
    82:82:boolean isDone() -> isDone
    87:89:java.lang.Object get() -> get
    96:116:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    124:141:boolean await(java.util.Date) -> await
    147:153:void wakeup() -> wakeup
org.apache.http.pool.PoolStats -> org.apache.http.pool.PoolStats:
    int leased -> leased
    int pending -> pending
    int available -> available
    int max -> max
    48:53:void <init>(int,int,int,int) -> <init>
    65:65:int getLeased() -> getLeased
    75:75:int getPending() -> getPending
    87:87:int getAvailable() -> getAvailable
    96:96:int getMax() -> getMax
    101:111:java.lang.String toString() -> toString
org.apache.http.pool.RouteSpecificPool -> org.apache.http.pool.RouteSpecificPool:
    java.lang.Object route -> route
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    47:52:void <init>(java.lang.Object) -> <init>
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
    57:57:java.lang.Object getRoute() -> getRoute
    61:61:int getLeasedCount() -> getLeasedCount
    65:65:int getPendingCount() -> getPendingCount
    69:69:int getAvailableCount() -> getAvailableCount
    73:73:int getAllocatedCount() -> getAllocatedCount
    77:99:org.apache.http.pool.PoolEntry getFree(java.lang.Object) -> getFree
    103:106:org.apache.http.pool.PoolEntry getLastUsed() -> getLastUsed
    111:117:boolean remove(org.apache.http.pool.PoolEntry) -> remove
    121:127:void free(org.apache.http.pool.PoolEntry,boolean) -> free
    130:132:org.apache.http.pool.PoolEntry add(java.lang.Object) -> add
    136:140:void queue(org.apache.http.pool.PoolEntryFuture) -> queue
    143:143:org.apache.http.pool.PoolEntryFuture nextPending() -> nextPending
    147:152:void unqueue(org.apache.http.pool.PoolEntryFuture) -> unqueue
    155:167:void shutdown() -> shutdown
    171:181:java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    org.apache.http.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    51:52:void <init>() -> <init>
    48:57:void <init>(org.apache.http.protocol.HttpContext) -> <init>
    60:68:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    72:77:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    80:84:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    92:95:void clear() -> clear
    99:102:java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    55:60:void <init>() -> <init>
    63:67:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    71:75:void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    79:83:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    86:93:void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    96:103:void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    106:107:void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    110:111:void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    114:114:int getRequestInterceptorCount() -> getRequestInterceptorCount
    118:121:org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    125:126:void clearRequestInterceptors() -> clearRequestInterceptors
    129:133:void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    136:137:void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    140:141:void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    144:144:int getResponseInterceptorCount() -> getResponseInterceptorCount
    148:151:org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    155:156:void clearResponseInterceptors() -> clearResponseInterceptors
    176:187:void setInterceptors(java.util.List) -> setInterceptors
    193:195:void clearInterceptors() -> clearInterceptors
    201:204:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    210:213:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    222:226:void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    234:236:org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    241:243:java.lang.Object clone() -> clone
org.apache.http.protocol.ChainBuilder -> org.apache.http.protocol.ChainBuilder:
    java.util.LinkedList list -> list
    java.util.Map uniqueClasses -> uniqueClasses
    51:54:void <init>() -> <init>
    57:62:void ensureUnique(java.lang.Object) -> ensureUnique
    65:70:org.apache.http.protocol.ChainBuilder addFirst(java.lang.Object) -> addFirst
    74:79:org.apache.http.protocol.ChainBuilder addLast(java.lang.Object) -> addLast
    83:89:org.apache.http.protocol.ChainBuilder addAllFirst(java.util.Collection) -> addAllFirst
    93:99:org.apache.http.protocol.ChainBuilder addAllFirst(java.lang.Object[]) -> addAllFirst
    103:109:org.apache.http.protocol.ChainBuilder addAllLast(java.util.Collection) -> addAllLast
    113:119:org.apache.http.protocol.ChainBuilder addAllLast(java.lang.Object[]) -> addAllLast
    123:123:java.util.LinkedList build() -> build
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    org.apache.http.protocol.HttpContext local -> local
    org.apache.http.protocol.HttpContext defaults -> defaults
    49:52:void <init>(org.apache.http.protocol.HttpContext,org.apache.http.protocol.HttpContext) -> <init>
    55:59:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    64:64:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    68:69:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    72:72:org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
    77:81:java.lang.String toString() -> toString
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> DEF_CONTENT_CHARSET
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> DEF_PROTOCOL_CHARSET
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    129:129:boolean isWhitespace(char) -> isWhitespace
    132:133:void <init>() -> <init>
    69:70:void <clinit>() -> <clinit>
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpCoreContext -> org.apache.http.protocol.HttpCoreContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    org.apache.http.protocol.HttpContext context -> context
    78:78:org.apache.http.protocol.HttpCoreContext create() -> create
    82:86:org.apache.http.protocol.HttpCoreContext adapt(org.apache.http.protocol.HttpContext) -> adapt
    93:95:void <init>(org.apache.http.protocol.HttpContext) -> <init>
    98:100:void <init>() -> <init>
    103:103:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    107:108:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    111:111:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    115:120:java.lang.Object getAttribute(java.lang.String,java.lang.Class) -> getAttribute
    124:124:org.apache.http.HttpConnection getConnection(java.lang.Class) -> getConnection
    128:128:org.apache.http.HttpConnection getConnection() -> getConnection
    132:132:org.apache.http.HttpRequest getRequest() -> getRequest
    136:137:boolean isRequestSent() -> isRequestSent
    141:141:org.apache.http.HttpResponse getResponse() -> getResponse
    145:146:void setTargetHost(org.apache.http.HttpHost) -> setTargetHost
    149:149:org.apache.http.HttpHost getTargetHost() -> getTargetHost
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    56:65:void <init>() -> <init>
    68:74:java.lang.String getCurrentDate() -> getCurrentDate
    52:52:void <clinit>() -> <clinit>
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpProcessorBuilder -> org.apache.http.protocol.HttpProcessorBuilder:
    org.apache.http.protocol.ChainBuilder requestChainBuilder -> requestChainBuilder
    org.apache.http.protocol.ChainBuilder responseChainBuilder -> responseChainBuilder
    44:44:org.apache.http.protocol.HttpProcessorBuilder create() -> create
    48:49:void <init>() -> <init>
    52:55:org.apache.http.protocol.ChainBuilder getRequestChainBuilder() -> getRequestChainBuilder
    59:62:org.apache.http.protocol.ChainBuilder getResponseChainBuilder() -> getResponseChainBuilder
    66:70:org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpRequestInterceptor) -> addFirst
    74:78:org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpRequestInterceptor) -> addLast
    82:82:org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpRequestInterceptor) -> add
    86:90:org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpRequestInterceptor[]) -> addAllFirst
    94:98:org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpRequestInterceptor[]) -> addAllLast
    102:102:org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpRequestInterceptor[]) -> addAll
    106:110:org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpResponseInterceptor) -> addFirst
    114:118:org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpResponseInterceptor) -> addLast
    122:122:org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpResponseInterceptor) -> add
    126:130:org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpResponseInterceptor[]) -> addAllFirst
    134:138:org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpResponseInterceptor[]) -> addAllLast
    142:142:org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpResponseInterceptor[]) -> addAll
    146:146:org.apache.http.protocol.HttpProcessor build() -> build
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    int DEFAULT_WAIT_FOR_CONTINUE -> DEFAULT_WAIT_FOR_CONTINUE
    int waitForContinue -> waitForContinue
    70:72:void <init>(int) -> <init>
    75:76:void <init>() -> <init>
    91:95:boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    117:134:org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    140:143:void closeConnection(org.apache.http.HttpClientConnection) -> closeConnection
    161:166:void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    194:241:org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    263:279:org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    304:309:void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerMapper -> org.apache.http.protocol.HttpRequestHandlerMapper:
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    59:61:void <init>() -> <init>
    71:74:void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    82:83:void unregister(java.lang.String) -> unregister
    90:91:void setHandlers(java.util.Map) -> setHandlers
    100:100:java.util.Map getHandlers() -> getHandlers
    104:104:org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    org.apache.http.params.HttpParams params -> params
    org.apache.http.protocol.HttpProcessor processor -> processor
    org.apache.http.protocol.HttpRequestHandlerMapper handlerMapper -> handlerMapper
    org.apache.http.ConnectionReuseStrategy connStrategy -> connStrategy
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    109:115:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory,org.apache.http.protocol.HttpRequestHandlerResolver,org.apache.http.protocol.HttpExpectationVerifier,org.apache.http.params.HttpParams) -> <init>
    137:143:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory,org.apache.http.protocol.HttpRequestHandlerResolver,org.apache.http.params.HttpParams) -> <init>
    80:164:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory) -> <init>
    80:193:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory,org.apache.http.protocol.HttpRequestHandlerMapper,org.apache.http.protocol.HttpExpectationVerifier) -> <init>
    212:213:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory,org.apache.http.protocol.HttpRequestHandlerMapper) -> <init>
    225:226:void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestHandlerMapper) -> <init>
    233:235:void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    242:244:void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    251:253:void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    260:261:void setParams(org.apache.http.params.HttpParams) -> setParams
    268:269:void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    276:277:void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    284:284:org.apache.http.params.HttpParams getParams() -> getParams
    301:367:void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    378:395:void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    418:427:void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter -> org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter:
    org.apache.http.protocol.HttpRequestHandlerResolver resolver -> resolver
    437:439:void <init>(org.apache.http.protocol.HttpRequestHandlerResolver) -> <init>
    442:442:org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.ImmutableHttpProcessor -> org.apache.http.protocol.ImmutableHttpProcessor:
    org.apache.http.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    org.apache.http.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    53:68:void <init>(org.apache.http.HttpRequestInterceptor[],org.apache.http.HttpResponseInterceptor[]) -> <init>
    76:89:void <init>(java.util.List,java.util.List) -> <init>
    98:117:void <init>(org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList) -> <init>
    120:121:void <init>(org.apache.http.HttpRequestInterceptor[]) -> <init>
    124:125:void <init>(org.apache.http.HttpResponseInterceptor[]) -> <init>
    130:133:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    138:141:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    50:51:void <init>() -> <init>
    55:67:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    boolean overwrite -> overwrite
    64:65:void <init>() -> <init>
    79:81:void <init>(boolean) -> <init>
    85:125:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    52:53:void <init>() -> <init>
    57:63:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    49:49:void <clinit>() -> <clinit>
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    boolean activeByDefault -> activeByDefault
    61:62:void <init>() -> <init>
    68:70:void <init>(boolean) -> <init>
    74:91:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    55:56:void <init>() -> <init>
    60:93:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    java.lang.String userAgent -> userAgent
    53:55:void <init>(java.lang.String) -> <init>
    58:59:void <init>() -> <init>
    63:77:void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    56:57:void <init>() -> <init>
    61:103:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    boolean overwrite -> overwrite
    64:65:void <init>() -> <init>
    79:81:void <init>(boolean) -> <init>
    92:131:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    52:53:void <init>() -> <init>
    57:64:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    49:49:void <clinit>() -> <clinit>
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    java.lang.String originServer -> originServer
    53:55:void <init>(java.lang.String) -> <init>
    58:59:void <init>() -> <init>
    63:69:void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    41:42:void <init>(org.apache.http.protocol.HttpContext) -> <init>
    48:49:void <init>() -> <init>
    53:53:java.lang.Object getAttribute(java.lang.String) -> getAttribute
    58:59:void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    63:63:java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    71:72:void clear() -> clear
org.apache.http.protocol.UriHttpRequestHandlerMapper -> org.apache.http.protocol.UriHttpRequestHandlerMapper:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    57:59:void <init>(org.apache.http.protocol.UriPatternMatcher) -> <init>
    62:63:void <init>() -> <init>
    73:76:void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    84:85:void unregister(java.lang.String) -> unregister
    91:101:java.lang.String getRequestPath(org.apache.http.HttpRequest) -> getRequestPath
    111:112:org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    java.util.Map map -> map
    59:61:void <init>() -> <init>
    70:72:void register(java.lang.String,java.lang.Object) -> register
    80:84:void unregister(java.lang.String) -> unregister
    91:94:void setHandlers(java.util.Map) -> setHandlers
    101:104:void setObjects(java.util.Map) -> setObjects
    111:111:java.util.Map getObjects() -> getObjects
    121:139:java.lang.Object lookup(java.lang.String) -> lookup
    151:154:boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
    162:162:java.lang.String toString() -> toString
org.apache.http.util.Args -> org.apache.http.util.Args:
    32:32:void <init>() -> <init>
    35:38:void check(boolean,java.lang.String) -> check
    41:44:void check(boolean,java.lang.String,java.lang.Object[]) -> check
    47:50:java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    54:60:java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    64:70:java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
    74:80:java.util.Collection notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    84:87:int positive(int,java.lang.String) -> positive
    91:94:long positive(long,java.lang.String) -> positive
    98:101:int notNegative(int,java.lang.String) -> notNegative
    105:108:long notNegative(long,java.lang.String) -> notNegative
org.apache.http.util.Asserts -> org.apache.http.util.Asserts:
    30:30:void <init>() -> <init>
    33:36:void check(boolean,java.lang.String) -> check
    39:42:void check(boolean,java.lang.String,java.lang.Object[]) -> check
    45:48:void notNull(java.lang.Object,java.lang.String) -> notNull
    51:54:void notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    57:60:void notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    54:57:void <init>(int) -> <init>
    60:63:void expand(int) -> expand
    78:94:void append(byte[],int,int) -> append
    103:109:void append(int) -> append
    126:145:void append(char[],int,int) -> append
    163:167:void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    173:174:void clear() -> clear
    182:186:byte[] toByteArray() -> toByteArray
    200:200:int byteAt(int) -> byteAt
    211:211:int capacity() -> capacity
    220:220:int length() -> length
    234:241:void ensureCapacity(int) -> ensureCapacity
    249:249:byte[] buffer() -> buffer
    263:267:void setLength(int) -> setLength
    276:276:boolean isEmpty() -> isEmpty
    286:286:boolean isFull() -> isFull
    313:329:int indexOf(byte,int,int) -> indexOf
    345:345:int indexOf(byte) -> indexOf
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    55:58:void <init>(int) -> <init>
    61:64:void expand(int) -> expand
    79:95:void append(char[],int,int) -> append
    104:112:void append(java.lang.String) -> append
    128:132:void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    142:146:void append(org.apache.http.util.CharArrayBuffer) -> append
    155:161:void append(char) -> append
    178:197:void append(byte[],int,int) -> append
    214:218:void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    228:229:void append(java.lang.Object) -> append
    235:236:void clear() -> clear
    244:248:char[] toCharArray() -> toCharArray
    262:262:char charAt(int) -> charAt
    271:271:char[] buffer() -> buffer
    282:282:int capacity() -> capacity
    291:291:int length() -> length
    303:310:void ensureCapacity(int) -> ensureCapacity
    323:327:void setLength(int) -> setLength
    336:336:boolean isEmpty() -> isEmpty
    346:346:boolean isFull() -> isFull
    371:387:int indexOf(int,int,int) -> indexOf
    401:401:int indexOf(int) -> indexOf
    419:419:java.lang.String substring(int,int) -> substring
    439:456:java.lang.String substringTrimmed(int,int) -> substringTrimmed
    461:461:java.lang.String toString() -> toString
org.apache.http.util.CharsetUtils -> org.apache.http.util.CharsetUtils:
    34:34:void <init>() -> <init>
    37:43:java.nio.charset.Charset lookup(java.lang.String) -> lookup
    48:54:java.nio.charset.Charset get(java.lang.String) -> get
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    57:62:java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    77:78:java.lang.String getString(byte[],java.lang.String) -> getString
    90:95:byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    106:110:byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    125:129:java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    142:143:java.lang.String getAsciiString(byte[]) -> getAsciiString
    149:150:void <init>() -> <init>
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    53:54:void <init>() -> <init>
    67:70:void consumeQuietly(org.apache.http.HttpEntity) -> consumeQuietly
    82:91:void consume(org.apache.http.HttpEntity) -> consume
    106:109:void updateEntity(org.apache.http.HttpResponse,org.apache.http.HttpEntity) -> updateEntity
    121:141:byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    157:168:java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    185:193:java.lang.String getContentMimeType(org.apache.http.HttpEntity) -> getContentMimeType
    213:249:java.lang.String toString(org.apache.http.HttpEntity,java.nio.charset.Charset) -> toString
    270:270:java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    288:288:java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    56:59:java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    70:77:void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
    79:80:void <init>() -> <init>
    43:43:void <clinit>() -> <clinit>
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    43:44:void <init>() -> <init>
    47:47:int hashCode(int,int) -> hashCode
    51:51:int hashCode(int,boolean) -> hashCode
    55:55:int hashCode(int,java.lang.Object) -> hashCode
    66:66:boolean equals(java.lang.Object,java.lang.Object) -> equals
    85:96:boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.NetUtils -> org.apache.http.util.NetUtils:
    37:37:void <init>() -> <init>
    42:52:void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
org.apache.http.util.TextUtils -> org.apache.http.util.TextUtils:
    33:33:void <init>() -> <init>
    36:39:boolean isEmpty(java.lang.CharSequence) -> isEmpty
    43:51:boolean isBlank(java.lang.CharSequence) -> isBlank
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    89:96:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    106:106:java.lang.String getPackage() -> getPackage
    116:116:java.lang.String getModule() -> getModule
    126:126:java.lang.String getRelease() -> getRelease
    136:136:java.lang.String getTimestamp() -> getTimestamp
    148:148:java.lang.String getClassloader() -> getClassloader
    159:182:java.lang.String toString() -> toString
    198:207:org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    225:252:org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    268:299:org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
    318:321:java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class) -> getUserAgent
